import{_ as m,c as t,a as n,b as s,e as c,d as p,w as r,r as o,o as l}from"./app-P8O63--9.js";const h="/blog-vp-reco/machinelearning/two/06-7.png",g="/blog-vp-reco/machinelearning/two/06-8.png",u="/blog-vp-reco/machinelearning/two/06-9.png",d="/blog-vp-reco/machinelearning/two/06-10.png",y="/blog-vp-reco/machinelearning/two/06-11.png",v="/blog-vp-reco/machinelearning/two/06-12.png",b="/blog-vp-reco/machinelearning/two/06-13.png",w="/blog-vp-reco/machinelearning/two/06-14.png",e="/blog-vp-reco/machinelearning/two/06-15.png",z="/blog-vp-reco/machinelearning/two/06-16.png",f="/blog-vp-reco/machinelearning/two/06-17.png",k="/blog-vp-reco/machinelearning/two/06-18.png",x="/blog-vp-reco/machinelearning/two/06-19.png",_="/blog-vp-reco/machinelearning/two/06-20.png",M="/blog-vp-reco/machinelearning/two/06-21.png",S="/blog-vp-reco/machinelearning/two/06-22.png",H="/blog-vp-reco/machinelearning/two/06-23.png",q="/blog-vp-reco/machinelearning/two/06-24.png",L="/blog-vp-reco/machinelearning/two/06-25.png",T={},R={class:"katex-block"},B={class:"katex-display"},A={class:"katex"},V={class:"katex-html","aria-hidden":"true"},j={class:"base"},N={class:"mord"},Y={class:"msupsub"},P={class:"vlist-t vlist-t2"},F={class:"vlist-r"},D={class:"vlist",style:{height:"0.3448em"}},U={style:{top:"-2.545em","margin-left":"-0.1076em","margin-right":"0.05em"}},C={class:"sizing reset-size6 size3 mtight"},J={class:"mord mtight"},X={class:"mord accent mtight"},E={class:"vlist-t"},K={class:"vlist-r"},W={class:"vlist",style:{height:"0.714em"}},Z={style:{top:"-2.714em"}},G={class:"accent-body",style:{left:"-0.1522em"}},O={class:"overlay mtight",style:{height:"0.714em",width:"0.471em"}},I={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},Q={class:"mord accent"},$={class:"vlist-t"},ss={class:"vlist-r"},as={class:"vlist",style:{height:"0.714em"}},ns={style:{top:"-3em"}},ts={class:"accent-body",style:{left:"-0.2077em"}},ls={class:"overlay",style:{height:"0.714em",width:"0.471em"}},ps={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},es={class:"base"},is={class:"mord accent"},ms={class:"vlist-t"},cs={class:"vlist-r"},rs={class:"vlist",style:{height:"0.714em"}},os={style:{top:"-3em"}},hs={class:"accent-body",style:{left:"-0.1522em"}},gs={class:"overlay",style:{height:"0.714em",width:"0.471em"}},us={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},ds={class:"base"},ys={class:"mord"},vs={class:"msupsub"},bs={class:"vlist-t vlist-t2"},ws={class:"vlist-r"},zs={class:"vlist",style:{height:"0.3448em"}},fs={style:{top:"-2.545em","margin-left":"-0.1076em","margin-right":"0.05em"}},ks={class:"sizing reset-size6 size3 mtight"},xs={class:"mord mtight"},_s={class:"mord accent mtight"},Ms={class:"vlist-t"},Ss={class:"vlist-r"},Hs={class:"vlist",style:{height:"0.714em"}},qs={style:{top:"-2.714em"}},Ls={class:"accent-body",style:{left:"-0.1522em"}},Ts={class:"overlay mtight",style:{height:"0.714em",width:"0.471em"}},Rs={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},Bs={class:"mord accent"},As={class:"vlist-t"},Vs={class:"vlist-r"},js={class:"vlist",style:{height:"0.714em"}},Ns={style:{top:"-3em"}},Ys={class:"accent-body",style:{left:"-0.2077em"}},Ps={class:"overlay",style:{height:"0.714em",width:"0.471em"}},Fs={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},Ds={class:"katex-block"},Us={class:"katex-display"},Cs={class:"katex"},Js={class:"katex-html","aria-hidden":"true"},Xs={class:"base"},Es={class:"mord accent"},Ks={class:"vlist-t"},Ws={class:"vlist-r"},Zs={class:"vlist",style:{height:"0.714em"}},Gs={style:{top:"-3em"}},Os={class:"accent-body",style:{left:"-0.1522em"}},Is={class:"overlay",style:{height:"0.714em",width:"0.471em"}},Qs={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},$s={class:"base"},sa={class:"mord"},aa={class:"mord accent"},na={class:"vlist-t"},ta={class:"vlist-r"},la={class:"vlist",style:{height:"0.714em"}},pa={style:{top:"-3em"}},ea={class:"accent-body",style:{left:"-0.2077em"}},ia={class:"overlay",style:{height:"0.714em",width:"0.471em"}},ma={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},ca={class:"base"},ra={class:"mord accent"},oa={class:"vlist-t"},ha={class:"vlist-r"},ga={class:"vlist",style:{height:"0.714em"}},ua={style:{top:"-3em"}},da={class:"accent-body",style:{left:"-0.2077em"}},ya={class:"overlay",style:{height:"0.714em",width:"0.471em"}},va={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},ba={class:"base"},wa={class:"mord accent"},za={class:"vlist-t"},fa={class:"vlist-r"},ka={class:"vlist",style:{height:"0.714em"}},xa={style:{top:"-3em"}},_a={class:"accent-body",style:{left:"-0.2077em"}},Ma={class:"overlay",style:{height:"0.714em",width:"0.471em"}},Sa={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},Ha={class:"katex-block"},qa={class:"katex-display"},La={class:"katex"},Ta={class:"katex-html","aria-hidden":"true"},Ra={class:"base"},Ba={class:"mord accent"},Aa={class:"vlist-t vlist-t2"},Va={class:"vlist-r"},ja={class:"vlist",style:{height:"0.714em"}},Na={style:{top:"-3em"}},Ya={class:"accent-body",style:{left:"-0.2355em"}},Pa={class:"overlay",style:{height:"0.714em",width:"0.471em"}},Fa={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},Da={class:"base"},Ua={class:"mord"},Ca={class:"mord accent"},Ja={class:"vlist-t"},Xa={class:"vlist-r"},Ea={class:"vlist",style:{height:"0.714em"}},Ka={style:{top:"-3em"}},Wa={class:"accent-body",style:{left:"-0.2077em"}},Za={class:"overlay",style:{height:"0.714em",width:"0.471em"}},Ga={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},Oa={class:"base"},Ia={class:"mord accent"},Qa={class:"vlist-t"},$a={class:"vlist-r"},sn={class:"vlist",style:{height:"0.714em"}},an={style:{top:"-3em"}},nn={class:"accent-body",style:{left:"-0.2077em"}},tn={class:"overlay",style:{height:"0.714em",width:"0.471em"}},ln={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},pn={class:"katex-block"},en={class:"katex-display"},mn={class:"katex"},cn={class:"katex-html","aria-hidden":"true"},rn={class:"base"},on={class:"mord accent"},hn={class:"vlist-t vlist-t2"},gn={class:"vlist-r"},un={class:"vlist",style:{height:"0.714em"}},dn={style:{top:"-3em"}},yn={class:"accent-body",style:{left:"-0.2355em"}},vn={class:"overlay",style:{height:"0.714em",width:"0.471em"}},bn={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},wn={class:"base"},zn={class:"mord"},fn={class:"mord accent"},kn={class:"vlist-t"},xn={class:"vlist-r"},_n={class:"vlist",style:{height:"0.714em"}},Mn={style:{top:"-3em"}},Sn={class:"accent-body",style:{left:"-0.2077em"}},Hn={class:"overlay",style:{height:"0.714em",width:"0.471em"}},qn={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},Ln={class:"base"},Tn={class:"mord accent"},Rn={class:"vlist-t"},Bn={class:"vlist-r"},An={class:"vlist",style:{height:"0.714em"}},Vn={style:{top:"-3em"}},jn={class:"accent-body",style:{left:"-0.2077em"}},Nn={class:"overlay",style:{height:"0.714em",width:"0.471em"}},Yn={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},Pn={class:"katex-block"},Fn={class:"katex-display"},Dn={class:"katex"},Un={class:"katex-html","aria-hidden":"true"},Cn={class:"base"},Jn={class:"mord accent"},Xn={class:"vlist-t vlist-t2"},En={class:"vlist-r"},Kn={class:"vlist",style:{height:"0.714em"}},Wn={style:{top:"-3em"}},Zn={class:"accent-body",style:{left:"-0.2355em"}},Gn={class:"overlay",style:{height:"0.714em",width:"0.471em"}},On={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},In={class:"base"},Qn={class:"mord"},$n={class:"mord accent"},st={class:"vlist-t"},at={class:"vlist-r"},nt={class:"vlist",style:{height:"0.714em"}},tt={style:{top:"-3em"}},lt={class:"accent-body",style:{left:"-0.2077em"}},pt={class:"overlay",style:{height:"0.714em",width:"0.471em"}},et={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},it={class:"base"},mt={class:"mord accent"},ct={class:"vlist-t"},rt={class:"vlist-r"},ot={class:"vlist",style:{height:"0.714em"}},ht={style:{top:"-3em"}},gt={class:"accent-body",style:{left:"-0.2077em"}},ut={class:"overlay",style:{height:"0.714em",width:"0.471em"}},dt={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},yt={class:"katex-block"},vt={class:"katex-display"},bt={class:"katex"},wt={class:"katex-html","aria-hidden":"true"},zt={class:"base"},ft={class:"mord accent"},kt={class:"vlist-t vlist-t2"},xt={class:"vlist-r"},_t={class:"vlist",style:{height:"0.714em"}},Mt={style:{top:"-3em"}},St={class:"accent-body",style:{left:"-0.2355em"}},Ht={class:"overlay",style:{height:"0.714em",width:"0.471em"}},qt={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},Lt={class:"base"},Tt={class:"mord"},Rt={class:"mord accent"},Bt={class:"vlist-t"},At={class:"vlist-r"},Vt={class:"vlist",style:{height:"0.714em"}},jt={style:{top:"-3em"}},Nt={class:"accent-body",style:{left:"-0.2077em"}},Yt={class:"overlay",style:{height:"0.714em",width:"0.471em"}},Pt={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},Ft={class:"base"},Dt={class:"mord accent"},Ut={class:"vlist-t"},Ct={class:"vlist-r"},Jt={class:"vlist",style:{height:"0.714em"}},Xt={style:{top:"-3em"}},Et={class:"accent-body",style:{left:"-0.2077em"}},Kt={class:"overlay",style:{height:"0.714em",width:"0.471em"}},Wt={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},Zt={class:"katex-block"},Gt={class:"katex-display"},Ot={class:"katex"},It={class:"katex-html","aria-hidden":"true"},Qt={class:"base"},$t={class:"mord accent"},sl={class:"vlist-t vlist-t2"},al={class:"vlist-r"},nl={class:"vlist",style:{height:"0.714em"}},tl={style:{top:"-3em"}},ll={class:"accent-body",style:{left:"-0.2355em"}},pl={class:"overlay",style:{height:"0.714em",width:"0.471em"}},el={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},il={class:"base"},ml={class:"mord"},cl={class:"mord accent"},rl={class:"vlist-t"},ol={class:"vlist-r"},hl={class:"vlist",style:{height:"0.714em"}},gl={style:{top:"-3em"}},ul={class:"accent-body",style:{left:"-0.2077em"}},dl={class:"overlay",style:{height:"0.714em",width:"0.471em"}},yl={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},vl={class:"katex-block"},bl={class:"katex-display"},wl={class:"katex"},zl={class:"katex-html","aria-hidden":"true"},fl={class:"base"},kl={class:"mord accent"},xl={class:"vlist-t"},_l={class:"vlist-r"},Ml={class:"vlist",style:{height:"0.714em"}},Sl={style:{top:"-3em"}},Hl={class:"accent-body",style:{left:"-0.2077em"}},ql={class:"overlay",style:{height:"0.714em",width:"0.471em"}},Ll={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},Tl={class:"katex-block"},Rl={class:"katex-display"},Bl={class:"katex"},Al={class:"katex-html","aria-hidden":"true"},Vl={class:"base"},jl={class:"mord"},Nl={class:"mord accent"},Yl={class:"vlist-t"},Pl={class:"vlist-r"},Fl={class:"vlist",style:{height:"0.714em"}},Dl={style:{top:"-3em"}},Ul={class:"accent-body",style:{left:"-0.2355em"}},Cl={class:"overlay",style:{height:"0.714em",width:"0.471em"}},Jl={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},Xl={class:"katex"},El={class:"katex-html","aria-hidden":"true"},Kl={class:"base"},Wl={class:"mord accent"},Zl={class:"vlist-t"},Gl={class:"vlist-r"},Ol={class:"vlist",style:{height:"0.714em"}},Il={style:{top:"-3em"}},Ql={class:"accent-body",style:{left:"-0.1522em"}},$l={class:"overlay",style:{height:"0.714em",width:"0.471em"}},sp={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},ap={class:"base"},np={class:"mord accent"},tp={class:"vlist-t"},lp={class:"vlist-r"},pp={class:"vlist",style:{height:"0.714em"}},ep={style:{top:"-3em"}},ip={class:"accent-body",style:{left:"-0.2077em"}},mp={class:"overlay",style:{height:"0.714em",width:"0.471em"}},cp={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"};function rp(op,a){const i=o("font");return l(),t("div",null,[a[229]||(a[229]=n('<p>神经网络进阶（Deep Learning）</p><h2 id="_1-tensorflow-代码实现推理" tabindex="-1"><a class="header-anchor" href="#_1-tensorflow-代码实现推理"><span>1.TensorFlow 代码实现推理</span></a></h2><p>TensorFlow 是实施深度学习算法的领先框架之一，另一个热门框架是 PyTorch。但在这里我们仅用前者做讲解（因为吴教授用这个比较多）。</p><h3 id="_1-1-咖啡烘培案例" tabindex="-1"><a class="header-anchor" href="#_1-1-咖啡烘培案例"><span>1.1 咖啡烘培案例</span></a></h3><p>有些喜欢喝咖啡的朋友，可能会专门的买咖啡豆回来自己烘培，那么能否用学习算法来优化烘焙过程，从而获得烘培质量的提升呢？</p><figure><img src="'+h+'" alt="6.1 咖啡烘培实验" width="560" tabindex="0" loading="lazy"><figcaption>6.1 咖啡烘培实验</figcaption></figure><p>烘培咖啡简化的来说，你需要控制的两个参数分别是：烘培的温度，以及烘培的时长。这张示例图中，横坐标表示温度，纵坐标表示时长，中间的红叉表示 1，对应好咖啡，蓝色的圈表示 0，对应坏咖啡。</p><p>如果烘培的温度太低，又或者时间太短，可能烘培不熟，导致咖啡豆的质量不够好。如果温度太高，或者时间过长，可能咖啡豆就焦了，也会导致口感变差。只有在三角形区域内的点对应好咖啡。</p><p>假设我们想知道，在温度 200 华氏度，时长 17 分中的情况下，烘焙出的咖啡豆的质量是好是坏，基于已有的知识，我们可以大概的写出这样的代码。</p><figure><img src="'+g+'" alt="6.2 咖啡烘培代码初见" width="560" tabindex="0" loading="lazy"><figcaption>6.2 咖啡烘培代码初见</figcaption></figure><p>这里用 numpy 构建了一个二维数组，Dense 只是一个名字，表示神经网络层，里面的激活方式 activation 选择了 sigmoid，这是逻辑回归，units 表示有 3 个神经元。a1 表示第一个隐藏层输出的三元向量。 a2 就表示预测结果，是好咖啡豆的概率。最后对 a2 做一个条件判断，就得出了我们要的结果。</p><p>同理我们可以回推手写数字识别的伪代码实现过程。</p><figure><img src="'+u+'" alt="6.3 手写数字识别代码初见" width="560" tabindex="0" loading="lazy"><figcaption>6.3 手写数字识别代码初见</figcaption></figure><h3 id="_1-2-tensorflow-的数据形式" tabindex="-1"><a class="header-anchor" href="#_1-2-tensorflow-的数据形式"><span>1.2 TensorFlow 的数据形式</span></a></h3><p>盲生，我发现了华点！Tensorflow 竟然是由吴恩达教授发起并领导过的谷歌团队制作的，太厉害了。但遗憾的是，NumPy 是很多年前就被创建并成为线性代数和 Python 的标准库的，他们俩之间数据表示方式存在不一致的问题。因此，了解 Tensorflow 的一些约定俗成是一件十分必要的事情，这样我们才能敲出正确的代码，并在神经网络模型中成功运行。</p><figure><img src="'+d+'" alt="6.4 数据形式的一些微小差异" width="560" tabindex="0" loading="lazy"><figcaption>6.4 数据形式的一些微小差异</figcaption></figure><p>如果还记线性回归和逻辑回归的内容，应该清楚当时在 Numpy 里使用的都是一维数组，也就是向量的形式去处理的数据，而 Tensorflow 的惯例是使用矩阵来表示数据，因为它的目标是在于处理非常大的数据集，通过矩阵的计算，可以让它内部的计算效率更高。因此呢，我们在 Numpy 中，写成了二维数组的形式，来代表它是矩阵。</p><p>a1 表示第一个隐藏层的激活，是一个行向量，也就是一行三列的二维数组。如果你把 a1 打印出来，你会得到 tf.Tensor(...)这样一个东西。shape=（1，3）表示这是一个 1 行 3 列的矩阵，这个和 Numpy 是一致的，如果不明白请看 Numpy 文档。dtype 就是数据格式。</p><p>这里的 Tensor（张量）是 Tensorflow 团队为了有效的存储和执行矩阵计算而创建的一种数据类型。当然了，如果你想将格式转换回 NumPy 数组，你可以使用 a1.numpy()方法来实现。</p><h3 id="_1-3-初次搭建神经网络" tabindex="-1"><a class="header-anchor" href="#_1-3-初次搭建神经网络"><span>1.3 初次搭建神经网络</span></a></h3><figure><img src="'+y+'" alt="6.5 咖啡烘培神经网络初搭建" width="560" tabindex="0" loading="lazy"><figcaption>6.5 咖啡烘培神经网络初搭建</figcaption></figure><p>这就是 TensorFlow 搭建一个神经网络的大致过程，首先，我们通过 Sequential 函数顺序的将神经网络层排列起来；然后，通过 compile 函数将其编译；最后通过 fit 函数将其实现。数据集就是图中显示的 x 和 y 的数组。</p><p>可以看的出来，它的代码数量很少，非常的简洁。通常我们使用已有的神经网络模型，可以直接调用最顶尖的库，也许五六行代码就可以实现我们的目标。但是学习原理会有助于我们更好的使用这些库，以及去解决代码实现过程中的一些问题。因此，我们来看看如果仅仅是使用 Numpy，如何完成咖啡烘培的，神经网络模型的代码实现。</p><h3 id="_1-4-numpy-实现向前传播算法" tabindex="-1"><a class="header-anchor" href="#_1-4-numpy-实现向前传播算法"><span>1.4 Numpy 实现向前传播算法</span></a></h3><figure><img src="'+v+'" alt="6.6 Numpy实现神经网络1" width="560" tabindex="0" loading="lazy"><figcaption>6.6 Numpy实现神经网络1</figcaption></figure><p>还是咖啡烘培案例，我们把所有神经元的操作，全部显示的写出来。输入的 x 为 200 的温度，和 17 的时长。绿色的 ① 就是第一层神经元的计算过程，得出的三个值 a1_1，a1_2，a1_3 组成一个新的向量 a1，作为第二层的输入。绿色的 ② 就是第二层，运算的步骤和 ① 是一样的。</p><p>这里要注意的是，其余的代码都是真实代码，但是 sigmoid 函数只是一个代指，如果要使用，请参考 Numpy 函数手册，或者自行实现。如果说逻辑回归的计算过程忘记了，不要着急，等会第 4 节马上会复习。</p><figure><img src="'+b+'" alt="6.7 Numpy实现神经网络2" width="560" tabindex="0" loading="lazy"><figcaption>6.7 Numpy实现神经网络2</figcaption></figure><p>图 6.6 只是为了让大家清晰的明白在每一个神经元的运算过程，在真实的代码实现里，我们一定会使用循环语句去代替这些重复的操作。看看图 6.7，我们用类似 TersorFlow 的格式，来实现向前传播算法。</p><p>先看 dense 函数，W 的 shape 是（2，3），表示两行三列，它取了索引 1，也就是第二个值 3。然后创建了一个新的返回值 a_out = [0, 0, 0]，然后通过循环，计算出了不同的激活值，分别放在了 a_out[0]、a_out[1] 中，依次类推，最后返回的 a_out 就是一个神经网络层中的输出，也就是激活，在 sequential 函数中传递给下一层。</p><p>这里要注意的是：<mark>有几层神经网络，sequential 函数中就有几个 dense。</mark> 图中的代码仅仅是举例说明，如果要带入咖啡烘焙的案例，那么 sequential 函数中的 dense 只有两个，因为只有两层。</p><h2 id="_2-神经网络为何如此高效" tabindex="-1"><a class="header-anchor" href="#_2-神经网络为何如此高效"><span>2.神经网络为何如此高效</span></a></h2><h3 id="_2-1-numpy-和-tensorflow-的对比" tabindex="-1"><a class="header-anchor" href="#_2-1-numpy-和-tensorflow-的对比"><span>2.1 Numpy 和 TensorFlow 的对比</span></a></h3><p>科学家们之所以能够扩展中型甚至是大型神经网络模型的原因之一，是因为神经网络可以向量化。它可以使用矩阵乘法，能非常有效的实现计算。</p><p>事实证明，GPU 在内的并行计算硬件，也包括一些 CPU，它们非常善于做非常大的矩阵乘法。下面就来看看神经网络的矢量化，是如何实现工作的。如果没有这些想法，我觉得深度学习在今天不会取得这样的成功和规模。</p><figure><img src="'+w+'" alt="6.8 Numpy 和 TensorFlow 的对比" width="560" tabindex="0" loading="lazy"><figcaption>6.8 Numpy 和 TensorFlow 的对比</figcaption></figure><p>图片的左边，是如何在单层中实现向前传播算法的原始代码。我们可以通过右边这样的方式进行优化，将 X 和 B 全部写成二维数组，也就是矩阵的形式，然后在 dense 函数中，就可以通过两行代码，去代替之前的循环计算，大大的提升了计算的效率。np.matmul() 函数的作用是做矩阵乘法，而 g(Z)表示激活函数，也就是逻辑回归。</p><h3 id="_2-2-矩阵乘法原理" tabindex="-1"><a class="header-anchor" href="#_2-2-矩阵乘法原理"><span>2.2 矩阵乘法原理</span></a></h3><p>在 Numpy 中我有浅浅的写过 dot 函数的作用。dot()函数称为点积，也叫内积。向量内积或者说矩阵内积，必须要满足的 <strong>前提条件</strong> 就是，<mark>前一个向量的列数要与后一个向量的行数要对应</mark>，否则没有办法相乘。简单的写一下行向量和列向量相乘：</p>',39)),a[230]||(a[230]=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mrow",null,[s("mo",{fence:"true"},"["),s("mtable",{rowspacing:"0.16em",columnalign:"center center center",columnspacing:"1em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"2")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"3")])])])]),s("mo",{fence:"true"},"]")]),s("mo",null,"⋅"),s("mrow",null,[s("mo",{fence:"true"},"["),s("mtable",{rowspacing:"0.16em",columnalign:"center",columnspacing:"1em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"4")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"5")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"6")])])])]),s("mo",{fence:"true"},"]")]),s("mo",null,"="),s("mn",null,"4"),s("mo",null,"+"),s("mn",null,"10"),s("mo",null,"+"),s("mn",null,"18"),s("mo",null,"="),s("mn",null,"32")]),s("annotation",{encoding:"application/x-tex"},"\\begin{bmatrix} 1 & 2 & 3 \\end{bmatrix} \\cdot \\begin{bmatrix} 4 \\\\ 5 \\\\ 6 \\end{bmatrix} = 4 + 10 + 18 = 32 ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.2em","vertical-align":"-0.35em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size1"},"[")]),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.85em"}},[s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.35em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.85em"}},[s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.35em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.85em"}},[s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"3")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.35em"}},[s("span")])])])])])]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size1"},"]")])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"⋅"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"3.6em","vertical-align":"-1.55em"}}),s("span",{class:"minner"},[s("span",{class:"mopen"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.05em"}},[s("span",{class:"pstrut",style:{height:"5.6em"}}),s("span",{style:{width:"0.667em",height:"3.600em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.667em",height:"3.600em",viewBox:"0 0 667 3600"},[s("path",{d:`M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84
H403z M403 1759 V0 H319 V1759 v0 v1759 h84z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])]),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"4")])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"5")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"6")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])])]),s("span",{class:"mclose"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.05em"}},[s("span",{class:"pstrut",style:{height:"5.6em"}}),s("span",{style:{width:"0.667em",height:"3.600em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.667em",height:"3.600em",viewBox:"0 0 667 3600"},[s("path",{d:`M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z
M347 1759 V0 H263 V1759 v0 v1759 h84z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"4"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"10"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"18"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"32")])])])])],-1)),a[231]||(a[231]=s("p",null,"我们再看一下反过来，如果是列向量乘以行向量会是什么结果：",-1)),a[232]||(a[232]=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mrow",null,[s("mo",{fence:"true"},"["),s("mtable",{rowspacing:"0.16em",columnalign:"center",columnspacing:"1em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"4")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"5")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"6")])])])]),s("mo",{fence:"true"},"]")]),s("mo",null,"⋅"),s("mrow",null,[s("mo",{fence:"true"},"["),s("mtable",{rowspacing:"0.16em",columnalign:"center center center",columnspacing:"1em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"2")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"3")])])])]),s("mo",{fence:"true"},"]")]),s("mo",null,"="),s("mrow",null,[s("mo",{fence:"true"},"["),s("mtable",{rowspacing:"0.16em",columnalign:"center center center",columnspacing:"1em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"4")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"8")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"12")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"5")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"10")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"15")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"6")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"12")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"18")])])])]),s("mo",{fence:"true"},"]")])]),s("annotation",{encoding:"application/x-tex"},"\\begin{bmatrix} 4 \\\\ 5 \\\\ 6 \\end{bmatrix} \\cdot \\begin{bmatrix} 1 & 2 & 3 \\end{bmatrix} = \\begin{bmatrix} 4 & 8 & 12 \\\\ 5 & 10 & 15 \\\\ 6 & 12 & 18 \\end{bmatrix} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"3.6em","vertical-align":"-1.55em"}}),s("span",{class:"minner"},[s("span",{class:"mopen"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.05em"}},[s("span",{class:"pstrut",style:{height:"5.6em"}}),s("span",{style:{width:"0.667em",height:"3.600em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.667em",height:"3.600em",viewBox:"0 0 667 3600"},[s("path",{d:`M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84
H403z M403 1759 V0 H319 V1759 v0 v1759 h84z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])]),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"4")])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"5")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"6")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])])]),s("span",{class:"mclose"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.05em"}},[s("span",{class:"pstrut",style:{height:"5.6em"}}),s("span",{style:{width:"0.667em",height:"3.600em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.667em",height:"3.600em",viewBox:"0 0 667 3600"},[s("path",{d:`M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z
M347 1759 V0 H263 V1759 v0 v1759 h84z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"⋅"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.2em","vertical-align":"-0.35em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size1"},"[")]),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.85em"}},[s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.35em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.85em"}},[s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.35em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.85em"}},[s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"3")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.35em"}},[s("span")])])])])])]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size1"},"]")])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"3.6em","vertical-align":"-1.55em"}}),s("span",{class:"minner"},[s("span",{class:"mopen"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.05em"}},[s("span",{class:"pstrut",style:{height:"5.6em"}}),s("span",{style:{width:"0.667em",height:"3.600em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.667em",height:"3.600em",viewBox:"0 0 667 3600"},[s("path",{d:`M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84
H403z M403 1759 V0 H319 V1759 v0 v1759 h84z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])]),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"4")])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"5")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"6")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"8")])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"10")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"12")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"12")])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"15")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"18")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])])]),s("span",{class:"mclose"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.05em"}},[s("span",{class:"pstrut",style:{height:"5.6em"}}),s("span",{style:{width:"0.667em",height:"3.600em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.667em",height:"3.600em",viewBox:"0 0 667 3600"},[s("path",{d:`M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z
M347 1759 V0 H263 V1759 v0 v1759 h84z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])])])])])])])],-1)),a[233]||(a[233]=s("p",null,[s("mark",null,"点积的相乘规律就是前行乘后列"),p("。因此，行向量点乘列向量，前行乘后列，就变成了数字。列向量点乘行向量，前行乘后列，就变成了一个矩阵。")],-1)),a[234]||(a[234]=s("p",null,[p("矩阵可以看作是有行有列的二维数组，也可以看作是多个行向量或者列向量组合而来的数据。"),s("mark",null,"矩阵的相乘前提以及相乘规则，和向量是一致的。"),p(" 我们来计算一个 2×2 的矩阵相乘：")],-1)),a[235]||(a[235]=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mrow",null,[s("mo",{fence:"true"},"["),s("mtable",{rowspacing:"0.16em",columnalign:"center center",columnspacing:"1em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"2")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"3")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"4")])])])]),s("mo",{fence:"true"},"]")]),s("mo",null,"⋅"),s("mrow",null,[s("mo",{fence:"true"},"["),s("mtable",{rowspacing:"0.16em",columnalign:"center center",columnspacing:"1em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"5")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"6")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"7")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"8")])])])]),s("mo",{fence:"true"},"]")]),s("mo",null,"="),s("mrow",null,[s("mo",{fence:"true"},"["),s("mtable",{rowspacing:"0.16em",columnalign:"center center",columnspacing:"1em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mn",null,"1"),s("mo",null,"∗"),s("mn",null,"5"),s("mo",null,"+"),s("mn",null,"2"),s("mo",null,"∗"),s("mn",null,"7")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mn",null,"1"),s("mo",null,"∗"),s("mn",null,"6"),s("mo",null,"+"),s("mn",null,"2"),s("mo",null,"∗"),s("mn",null,"8")])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mn",null,"3"),s("mo",null,"∗"),s("mn",null,"5"),s("mo",null,"+"),s("mn",null,"4"),s("mo",null,"∗"),s("mn",null,"7")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mn",null,"3"),s("mo",null,"∗"),s("mn",null,"6"),s("mo",null,"+"),s("mn",null,"4"),s("mo",null,"∗"),s("mn",null,"8")])])])])]),s("mo",{fence:"true"},"]")]),s("mo",null,"="),s("mrow",null,[s("mo",{fence:"true"},"["),s("mtable",{rowspacing:"0.16em",columnalign:"center center",columnspacing:"1em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"19")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"22")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"43")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"50")])])])]),s("mo",{fence:"true"},"]")])]),s("annotation",{encoding:"application/x-tex"},"\\begin{bmatrix} 1 & 2 \\\\ 3 & 4 \\end{bmatrix} \\cdot \\begin{bmatrix} 5 & 6 \\\\ 7 & 8 \\end{bmatrix} = \\begin{bmatrix} 1*5+2*7 & 1*6+2*8 \\\\ 3*5+4*7 & 3*6+4*8 \\end{bmatrix} = \\begin{bmatrix} 19 & 22 \\\\ 43 & 50 \\end{bmatrix} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.4em","vertical-align":"-0.95em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size3"},"[")]),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.45em"}},[s("span",{style:{top:"-3.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-2.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"3")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.95em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.45em"}},[s("span",{style:{top:"-3.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2")])]),s("span",{style:{top:"-2.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"4")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.95em"}},[s("span")])])])])])]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size3"},"]")])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"⋅"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.4em","vertical-align":"-0.95em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size3"},"[")]),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.45em"}},[s("span",{style:{top:"-3.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"5")])]),s("span",{style:{top:"-2.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"7")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.95em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.45em"}},[s("span",{style:{top:"-3.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"6")])]),s("span",{style:{top:"-2.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"8")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.95em"}},[s("span")])])])])])]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size3"},"]")])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.4em","vertical-align":"-0.95em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size3"},"[")]),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.45em"}},[s("span",{style:{top:"-3.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∗"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},"5"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∗"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},"7")])]),s("span",{style:{top:"-2.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"3"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∗"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},"5"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},"4"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∗"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},"7")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.95em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.45em"}},[s("span",{style:{top:"-3.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∗"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},"6"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∗"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},"8")])]),s("span",{style:{top:"-2.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"3"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∗"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},"6"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},"4"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∗"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},"8")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.95em"}},[s("span")])])])])])]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size3"},"]")])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.4em","vertical-align":"-0.95em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size3"},"[")]),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.45em"}},[s("span",{style:{top:"-3.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"19")])]),s("span",{style:{top:"-2.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"43")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.95em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.45em"}},[s("span",{style:{top:"-3.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"22")])]),s("span",{style:{top:"-2.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"50")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.95em"}},[s("span")])])])])])]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size3"},"]")])])])])])])],-1)),a[236]||(a[236]=n(`<h2 id="_3-tensorflow-训练神经网络" tabindex="-1"><a class="header-anchor" href="#_3-tensorflow-训练神经网络"><span>3.TensorFlow 训练神经网络</span></a></h2><h3 id="_3-1-回顾逻辑回归的模型训练" tabindex="-1"><a class="header-anchor" href="#_3-1-回顾逻辑回归的模型训练"><span>3.1 回顾逻辑回归的模型训练</span></a></h3><ol><li>第一步，是指定如何在给定输入 x 以及参数 w 和 b 的情况下计算输出。</li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">z = np.dot(w, x) + b</span>
<span class="line">f_x = 1 / (1 + np.exp(-z))</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>第二步，指定损失函数（成本函数）。损失函数 L 是衡量逻辑回归在单个训练示例（x，y）上表现如何的指标。而成本函数 J 是在整个训练集上计算的损失函数的平均值。</li></ol>`,5)),s("p",R,[s("span",B,[s("span",A,[a[40]||(a[40]=s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"L"),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"f"),s("mrow",null,[s("mover",{accent:"true"},[s("mi",null,"w"),s("mo",null,"⃗")]),s("mo",{separator:"true"},","),s("mi",null,"b")])]),s("mo",{stretchy:"false"},"("),s("mover",{accent:"true"},[s("mi",null,"x"),s("mo",null,"⃗")]),s("mo",{stretchy:"false"},")"),s("mo",{separator:"true"},","),s("mi",null,"y"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"s"),s("mi",null,"s"),s("mspace",{linebreak:"newline"}),s("mi",null,"J"),s("mo",{stretchy:"false"},"("),s("mover",{accent:"true"},[s("mi",null,"w"),s("mo",null,"⃗")]),s("mo",{separator:"true"},","),s("mi",null,"b"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mfrac",null,[s("mn",null,"1"),s("mi",null,"m")]),s("munderover",null,[s("mo",null,"∑"),s("mrow",null,[s("mi",null,"i"),s("mo",null,"="),s("mn",null,"1")]),s("mi",null,"m")]),s("mi",null,"L"),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"f"),s("mrow",null,[s("mover",{accent:"true"},[s("mi",null,"w"),s("mo",null,"⃗")]),s("mo",{separator:"true"},","),s("mi",null,"b")])]),s("mo",{stretchy:"false"},"("),s("mover",{accent:"true"},[s("mi",null,"x"),s("mo",null,"⃗")]),s("mo",{stretchy:"false"},")"),s("mo",{separator:"true"},","),s("mi",null,"y"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"L(f_{\\vec{w},b}(\\vec{x}),y) = loss \\\\ J(\\vec{w},b) = \\frac{1}{m}\\sum_{i=1}^{m}L(f_{\\vec{w},b}(\\vec{x}),y) ")])])],-1)),s("span",V,[s("span",j,[a[12]||(a[12]=s("span",{class:"strut",style:{height:"1.0411em","vertical-align":"-0.2911em"}},null,-1)),a[13]||(a[13]=s("span",{class:"mord mathnormal"},"L",-1)),a[14]||(a[14]=s("span",{class:"mopen"},"(",-1)),s("span",N,[a[8]||(a[8]=s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f",-1)),s("span",Y,[s("span",P,[s("span",F,[s("span",D,[s("span",U,[a[5]||(a[5]=s("span",{class:"pstrut",style:{height:"2.7em"}},null,-1)),s("span",C,[s("span",J,[s("span",X,[s("span",E,[s("span",K,[s("span",W,[a[2]||(a[2]=s("span",{style:{top:"-2.714em"}},[s("span",{class:"pstrut",style:{height:"2.714em"}}),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.02691em"}},"w")],-1)),s("span",Z,[a[1]||(a[1]=s("span",{class:"pstrut",style:{height:"2.714em"}},null,-1)),s("span",G,[s("span",O,[(l(),t("svg",I,[...a[0]||(a[0]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])])])])]),a[3]||(a[3]=s("span",{class:"mpunct mtight"},",",-1)),a[4]||(a[4]=s("span",{class:"mord mathnormal mtight"},"b",-1))])])])]),a[6]||(a[6]=s("span",{class:"vlist-s"},"​",-1))]),a[7]||(a[7]=s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2911em"}},[s("span")])],-1))])])]),a[15]||(a[15]=s("span",{class:"mopen"},"(",-1)),s("span",Q,[s("span",$,[s("span",ss,[s("span",as,[a[11]||(a[11]=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"x")],-1)),s("span",ns,[a[10]||(a[10]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",ts,[s("span",ls,[(l(),t("svg",ps,[...a[9]||(a[9]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])])])])]),a[16]||(a[16]=n('<span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span>',8))]),a[39]||(a[39]=n('<span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oss</span></span><span class="mspace newline"></span>',2)),s("span",es,[a[20]||(a[20]=s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}},null,-1)),a[21]||(a[21]=s("span",{class:"mord mathnormal",style:{"margin-right":"0.09618em"}},"J",-1)),a[22]||(a[22]=s("span",{class:"mopen"},"(",-1)),s("span",is,[s("span",ms,[s("span",cs,[s("span",rs,[a[19]||(a[19]=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02691em"}},"w")],-1)),s("span",os,[a[18]||(a[18]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",hs,[s("span",gs,[(l(),t("svg",us,[...a[17]||(a[17]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])])])])]),a[23]||(a[23]=n('<span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span>',7))]),s("span",ds,[a[36]||(a[36]=n('<span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span>',7)),s("span",ys,[a[32]||(a[32]=s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f",-1)),s("span",vs,[s("span",bs,[s("span",ws,[s("span",zs,[s("span",fs,[a[29]||(a[29]=s("span",{class:"pstrut",style:{height:"2.7em"}},null,-1)),s("span",ks,[s("span",xs,[s("span",_s,[s("span",Ms,[s("span",Ss,[s("span",Hs,[a[26]||(a[26]=s("span",{style:{top:"-2.714em"}},[s("span",{class:"pstrut",style:{height:"2.714em"}}),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.02691em"}},"w")],-1)),s("span",qs,[a[25]||(a[25]=s("span",{class:"pstrut",style:{height:"2.714em"}},null,-1)),s("span",Ls,[s("span",Ts,[(l(),t("svg",Rs,[...a[24]||(a[24]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])])])])]),a[27]||(a[27]=s("span",{class:"mpunct mtight"},",",-1)),a[28]||(a[28]=s("span",{class:"mord mathnormal mtight"},"b",-1))])])])]),a[30]||(a[30]=s("span",{class:"vlist-s"},"​",-1))]),a[31]||(a[31]=s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2911em"}},[s("span")])],-1))])])]),a[37]||(a[37]=s("span",{class:"mopen"},"(",-1)),s("span",Bs,[s("span",As,[s("span",Vs,[s("span",js,[a[35]||(a[35]=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"x")],-1)),s("span",Ns,[a[34]||(a[34]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",Ys,[s("span",Ps,[(l(),t("svg",Fs,[...a[33]||(a[33]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])])])])]),a[38]||(a[38]=n('<span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span>',5))])])])])]),a[237]||(a[237]=n(`<div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">loss = -y * np.log(f_x) - (1-y) * np.log(1 - f_x)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在统计学中，这个 loss 函数诶被称作为交叉熵损失函数（BinaryCrossentropt()），二进制（binary）这个词只是为了强调这是一个二元分类问题，要么 0 要么 1。</p><ol start="3"><li>最后一步，是使用一种特定的梯度下降算法，来最小化逻辑回归的成本函数 J。其中 w 更新为 w 减去学习率 alpha 乘以成本函数 J 相对于 w 的导数。b 同样的做法。</li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">w = w - alpha * dj_dw</span>
<span class="line">b = b - alpha * dj_db</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-训练神经网络的完整步骤" tabindex="-1"><a class="header-anchor" href="#_3-2-训练神经网络的完整步骤"><span>3.2 训练神经网络的完整步骤</span></a></h3><figure><img src="`+e+'" alt="6.9 TensorFlow 训练模型完整过程" width="560" tabindex="0" loading="lazy"><figcaption>6.9 TensorFlow 训练模型完整过程</figcaption></figure><p>以手写数字识别为例：</p><ol><li><p>第一步，指定模型，告诉 TensorFlow 如何计算推理。Sequential()函数表示将神经网络的这三层，顺序的串在一起。 Dense()表示不同的神经网络层，units 表示神经元数数量，activation 表示神经元的激活方式，在这里 sigmoid 就表示用逻辑回归的方式激活。</p></li><li><p>第二步，使用特定的损失函数让 TensorFlow 编译模型。compile()函数，loss 表示你需要指定的损失函数是什么。在这个案例里，我们使用二元交叉熵损失函数。如果你将这个损失在整个训练集中取了平均，你就得到了神经网络的成本函数。</p></li><li><p>第三步，训练模型，调用 fit()函数使得神经网络的成本函数最小化。调用步骤 ② 中的损失函数来拟合你在步骤 ① 中指定的模型到数据集 X，Y。epochs 表示梯度下降的次数。</p></li></ol>',8)),c(i,{color:"blue"},{default:r(()=>[...a[41]||(a[41]=[p("一个炒冷饭知识，Keras 原本是一个和 TensorFlow 完全不一样的库，但是最后被 TensorFlow 合并了，我们的交叉熵损失函数就是从它这里导入的包。如果你想解决的是回归问题，而不是分类问题，你可以选择不同的损失函数来编译你的模型，就比如 Keras 中的 MeanSquareError() 函数，很熟悉对吧，没错就是平方误差损失函数。",-1)])]),_:1}),a[238]||(a[238]=n('<h3 id="_3-3-激活函数的替换选项" tabindex="-1"><a class="header-anchor" href="#_3-3-激活函数的替换选项"><span>3.3 激活函数的替换选项</span></a></h3><p>到目前为止，我们一直在隐藏层和输出层的所有节点中使用 Sigmoid 激活函数。之所以如此，是因为从 T 恤预测案例开始，我们通过采用逻辑回归，创建大量逻辑回归单元，并把它们串在一起来构建向前传播的神经网络。但如果你适当的改变激活函数，你的神经网络会变得更加强大。</p><p>回想一下上一章的 T 恤复杂预测案例，在给定价格、运费、营销、材料的情况下，你尝试预测 T 恤是否畅销。我们对可能畅销的 T 恤做了如下的假设：具有良好的知名度和高感知的质量。</p><p>但是这个假设是二元的，非黑即白，人们要么知道，要么不知道。实际上潜在买家对于一个物品的了解程度分为了很多个层次，比如：不知道、知道一点、有些了解、非常了解、口口相传。因此，与其将 awareness 建模为二进制的 0 和 1（sigmoid 函数），不如尝试估计 awareness 的概率（ReLU 函数）。</p><figure><img src="'+z+'" alt="6.10 最常见的三个激活函数" width="560" tabindex="0" loading="lazy"><figcaption>6.10 最常见的三个激活函数</figcaption></figure><p>ReLU（Rectified Linear Unit）函数是指，如果 z 小于零，那么 g(z) = 0；如果 z 大于零，那么 g(z) = max(0, z) = z。除了 ReLU 函数，还有一个最常见的激活函数，那就是线性激活函数。</p><p>线性激活函数由图可知，g(z) = z，而 a=g(z)，因此 a=z，等于 g(z)这个激活函数什么也没有做。所以有的人会说：<strong>我们没有使用任何的激活函数。&lt;-- 这句话就代表用的是线性激活函数。</strong></p><p>线性激活函数、sigmoid 激活函数、ReLU 激活函数，这三个是最常见也是用的最多的激活函数。在后面的内容里，会讲一个叫做 softmax 的激活函数。</p><h3 id="_3-4-如何选择激活函数" tabindex="-1"><a class="header-anchor" href="#_3-4-如何选择激活函数"><span>3.4 如何选择激活函数</span></a></h3><p>事实证明，根据真实标签 y，输出层的激活函数会有一个相当自然的选择。</p><ul><li>比如，我们正在处理二元分类问题，y 的值只有 0 和 1，那么输出层就选择 sigmoid 函数。</li><li>如果我们要解决回归问题，比如我们试图预测明天的股票价格与今天的股票价格相比会如何变化，它可能上涨，也可能下跌，y 的范围在[-∞，+∞]，那么就选择线性激活函数。</li><li>最后，如果 y 只能取正值，例如你要预测房屋价格，它永远不可能是负值，输出层就理所当然的选择 ReLU 函数。</li></ul><p>除了输出层，我们也看看用于隐藏层的激活函数的选择。</p><figure><img src="'+f+`" alt="6.11 隐藏层的激活函数选择" width="560" tabindex="0" loading="lazy"><figcaption>6.11 隐藏层的激活函数选择</figcaption></figure><p>同样由数据表明，ReLU 激活函数是迄今为止，众多从业者训练神经网络的最常见选择。sigmoid 激活函数在早期的神经网络世界里，是用的最多的，但是如今已经很少被用了，被 ReLU 所替代。</p><p>我们对比一下两个激活函数：<strong>首先</strong>，ReLU 的计算速度更快一点，因为它只需要计算 0 和最大值 z；而 sigmoid 需要先取幂，再取反等等，所以它的效率会低一点。<strong>其次</strong>，ReLU 函数仅在图形的一部分变平坦（flat），而 sigmoid 函数在两个部分变平坦。如果梯度下降时存在很多很胖（fit）的地方，效率就会大大降低。</p><p>梯度下降虽然是优化的 W、B 的成本函数 J，而不是优化的激活函数，但是激活函数也是整个计算的一部分，这就会导致成本函数 J 中的许多地方也是平坦的，并且梯度很小，这就减慢了学习速度。如图 6.11 中间的蓝色坐标轴。</p><p>这样子一对比，研究人员就发现，使用 ReLU 激活函数可以使你的神经网络学习的更快一点，这就是为什么它成为目前最常见的选择的原因。</p><p>因此，激活函数选择的建议就是，输出层根据 y 的值去决定激活函数类型，而隐藏层建议使用 ReLU 激活函数作为默认的隐藏层激活函数。有了这组更丰富的激活函数，你可以构建出比仅使用 sigmoid 激活函数更好更强大的神经网络。还是以手写数字识别为案例：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">from</span> tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers <span class="token keyword">import</span> Dense</span>
<span class="line">model <span class="token operator">=</span> Sequential<span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">    Dense<span class="token punctuation">(</span>units<span class="token operator">=</span><span class="token number">25</span><span class="token punctuation">,</span>activation<span class="token operator">=</span><span class="token string">&quot;relu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    Dense<span class="token punctuation">(</span>units<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">,</span>activation<span class="token operator">=</span><span class="token string">&quot;relu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    Dense<span class="token punctuation">(</span>units<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>activation<span class="token operator">=</span><span class="token string">&quot;sigmoid&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># 线性激活函数叫做 &quot;linear&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>顺便说一句，如果你查看研究文献，有时你会看到作者使用其他的激活函数，例如 tan h 激活函数，或 LeakyReLU 激活函数，或 swish 激活函数等等。 可能有的时候它的效果比 ReLU 更好一点，但是在绝大多数情况下，对于绝大多数应用，这三个基本的激活函数就已经足够好了。</p><p>当然，如果你想要了解更多其他的激活函数的信息，请自行上网查阅资料。这种其它类型的激活函数，可以做的更加强大的情况只是少数。</p><h3 id="_3-5-为什么需要激活函数" tabindex="-1"><a class="header-anchor" href="#_3-5-为什么需要激活函数"><span>3.5 为什么需要激活函数</span></a></h3><p>我们使用神经网络模型，是为了拟合比线性回归、比逻辑回归更加复杂的结构。如果我们把所有的激活函数都换成线性回归，如下图：</p><figure><img src="`+k+'" alt="6.12 为什么需要激活函数" width="560" tabindex="0" loading="lazy"><figcaption>6.12 为什么需要激活函数</figcaption></figure><p>我们做一个简单的推导，当隐藏层和输出层都为线性激活函数时，我们发现它最终的结果还是一个线性回归函数。既然这样，直接用线性回归就好了，对吧，方便还省事儿。</p><p>如果我们把输出层换成逻辑激活函数呢，逻辑回归 g(z) 中的 z 不还是线性回归嘛，这样子就变成了一个逻辑回归任务，哪怕你模型再大，神经网络层再多，神经元再多，还是单纯做的是逻辑回归，那么使用神经网络就没有意义了。</p><p>所以在我看来，激活函数的存在一定程度上是为了区分复杂度，不是说在所有的应用领域里神经网络都是最好的，能用线性回归解决的就用线性回归，能用逻辑回归解决的就用逻辑回归，合适的才是最好的。</p><h2 id="_4-多类分类问题-multiclass" tabindex="-1"><a class="header-anchor" href="#_4-多类分类问题-multiclass"><span>4.多类分类问题（Multiclass）</span></a></h2><p>多类分类问题本质上还是分类问题，只是你可以有两个以上的输出标签，而不仅仅只是 0 或 1。</p><p>例如手写数字识别案例，我们只是区分了 0 和 1。如果你想尝试阅读信封中的协议或者邮政编码，那么实际上你可能需要识别 1 到 9 的十个数字。</p><p>或者是工厂零件制造商的视觉缺陷检查，也许你会看一家制药公司的药丸图片，并试图弄清它是否有划痕效应、变色缺陷或芯片缺陷。这又是多种不同类型的缺陷，通过这些可以给药丸进行分类。</p><figure><img src="'+x+'" alt="6.13 多类分类问题" width="560" tabindex="0" loading="lazy"><figcaption>6.13 多类分类问题</figcaption></figure><p>在分类问题的最开始，我们讲了一个肿瘤预测的案例，它是良性的还是恶性的，如左图，它是一个二分类问题，要么是良性、要么就是恶性。</p><p>多类分类问题可能会如同右边的图，有多种结果。会有一个叫做决策边界的新知识出现。</p><h3 id="_4-1-softmax-回归算法" tabindex="-1"><a class="header-anchor" href="#_4-1-softmax-回归算法"><span>4.1 softmax 回归算法</span></a></h3><p>逻辑回归适用于 y 可以取两个可能的输出值（0 或 1）的情况。</p>',36)),s("p",Ds,[s("span",Us,[s("span",Cs,[a[71]||(a[71]=s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"z"),s("mo",null,"="),s("mover",{accent:"true"},[s("mi",null,"w"),s("mo",null,"⃗")]),s("mo",null,"⋅"),s("mover",{accent:"true"},[s("mi",null,"x"),s("mo",null,"⃗")]),s("mo",null,"+"),s("mi",null,"b"),s("mspace",{linebreak:"newline"}),s("msub",null,[s("mi",null,"a"),s("mn",null,"1")]),s("mo",null,"="),s("mi",null,"g"),s("mo",{stretchy:"false"},"("),s("mi",null,"z"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mfrac",null,[s("mn",null,"1"),s("mrow",null,[s("mn",null,"1"),s("mo",null,"+"),s("msup",null,[s("mi",null,"e"),s("mrow",null,[s("mo",null,"−"),s("mi",null,"z")])])])]),s("mo",null,"="),s("mi",null,"P"),s("mo",{stretchy:"false"},"("),s("mi",null,"y"),s("mo",null,"="),s("mn",null,"1"),s("mi",{mathvariant:"normal"},"∣"),s("mover",{accent:"true"},[s("mi",null,"x"),s("mo",null,"⃗")]),s("mo",{stretchy:"false"},")"),s("mspace",{linebreak:"newline"}),s("msub",null,[s("mi",null,"a"),s("mn",null,"2")]),s("mo",null,"="),s("mn",null,"1"),s("mo",null,"−"),s("msub",null,[s("mi",null,"a"),s("mn",null,"1")]),s("mo",null,"="),s("mi",null,"P"),s("mo",{stretchy:"false"},"("),s("mi",null,"y"),s("mo",null,"="),s("mn",null,"0"),s("mi",{mathvariant:"normal"},"∣"),s("mover",{accent:"true"},[s("mi",null,"x"),s("mo",null,"⃗")]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"z = \\vec{w}\\cdot{\\vec{x}} + b \\\\ a_{1} = g(z) = \\frac{1}{1+e^{-z}} = P(y=1|\\vec{x}) \\\\ a_{2} = 1 - a_{1} = P(y=0|\\vec{x}) ")])])],-1)),s("span",Js,[a[68]||(a[68]=n('<span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span>',1)),s("span",Xs,[a[45]||(a[45]=s("span",{class:"strut",style:{height:"0.714em"}},null,-1)),s("span",Es,[s("span",Ks,[s("span",Ws,[s("span",Zs,[a[44]||(a[44]=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02691em"}},"w")],-1)),s("span",Gs,[a[43]||(a[43]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",Os,[s("span",Is,[(l(),t("svg",Qs,[...a[42]||(a[42]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])])])])]),a[46]||(a[46]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1)),a[47]||(a[47]=s("span",{class:"mbin"},"⋅",-1)),a[48]||(a[48]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1))]),s("span",$s,[a[52]||(a[52]=s("span",{class:"strut",style:{height:"0.7973em","vertical-align":"-0.0833em"}},null,-1)),s("span",sa,[s("span",aa,[s("span",na,[s("span",ta,[s("span",la,[a[51]||(a[51]=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"x")],-1)),s("span",pa,[a[50]||(a[50]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",ea,[s("span",ia,[(l(),t("svg",ma,[...a[49]||(a[49]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])])])])])]),a[53]||(a[53]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1)),a[54]||(a[54]=s("span",{class:"mbin"},"+",-1)),a[55]||(a[55]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1))]),a[69]||(a[69]=n('<span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0908em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6973em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span>',6)),s("span",ca,[a[59]||(a[59]=s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}},null,-1)),a[60]||(a[60]=s("span",{class:"mord"},"1∣",-1)),s("span",ra,[s("span",oa,[s("span",ha,[s("span",ga,[a[58]||(a[58]=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"x")],-1)),s("span",ua,[a[57]||(a[57]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",da,[s("span",ya,[(l(),t("svg",va,[...a[56]||(a[56]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])])])])]),a[61]||(a[61]=s("span",{class:"mclose"},")",-1))]),a[70]||(a[70]=n('<span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span>',5)),s("span",ba,[a[65]||(a[65]=s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}},null,-1)),a[66]||(a[66]=s("span",{class:"mord"},"0∣",-1)),s("span",wa,[s("span",za,[s("span",fa,[s("span",ka,[a[64]||(a[64]=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"x")],-1)),s("span",xa,[a[63]||(a[63]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",_a,[s("span",Ma,[(l(),t("svg",Sa,[...a[62]||(a[62]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])])])])]),a[67]||(a[67]=s("span",{class:"mclose"},")",-1))])])])])]),a[239]||(a[239]=s("p",null,"a1 表示逻辑回归估计，在给定这些输入特征 x 的情况下，y=1 的概率。在二分类问题中，可能和不可能的概率加起来是等于 1 的，所以 y=0 的概率，就是 1-（y=1 的概率）。",-1)),a[240]||(a[240]=s("p",null,"我们将其推广到多分类问题，如图 6.13 的四种分类：",-1)),s("p",Ha,[s("span",qa,[s("span",La,[a[96]||(a[96]=s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"z"),s("mn",null,"1")]),s("mo",null,"="),s("mover",{accent:"true"},[s("msub",null,[s("mi",null,"w"),s("mn",null,"1")]),s("mo",null,"⃗")]),s("mo",null,"⋅"),s("mover",{accent:"true"},[s("mi",null,"x"),s("mo",null,"⃗")]),s("mo",null,"+"),s("msub",null,[s("mi",null,"b"),s("mn",null,"1")]),s("mspace",{linebreak:"newline"}),s("msub",null,[s("mi",null,"a"),s("mn",null,"1")]),s("mo",null,"="),s("mfrac",null,[s("msup",null,[s("mi",null,"e"),s("msub",null,[s("mi",null,"z"),s("mn",null,"1")])]),s("mrow",null,[s("msup",null,[s("mi",null,"e"),s("msub",null,[s("mi",null,"z"),s("mn",null,"1")])]),s("mo",null,"+"),s("msup",null,[s("mi",null,"e"),s("msub",null,[s("mi",null,"z"),s("mn",null,"2")])]),s("mo",null,"+"),s("msup",null,[s("mi",null,"e"),s("msub",null,[s("mi",null,"z"),s("mn",null,"3")])]),s("mo",null,"+"),s("msup",null,[s("mi",null,"e"),s("msub",null,[s("mi",null,"z"),s("mn",null,"4")])])])]),s("mo",null,"="),s("mi",null,"P"),s("mo",{stretchy:"false"},"("),s("mi",null,"y"),s("mo",null,"="),s("mn",null,"1"),s("mi",{mathvariant:"normal"},"∣"),s("mover",{accent:"true"},[s("mi",null,"x"),s("mo",null,"⃗")]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"z_{1} = \\vec{w_{1}}\\cdot{\\vec{x}} + b_{1} \\\\ a_{1} = \\frac{e^{z_1}}{e^{z_1}+e^{z_2}+e^{z_3}+e^{z_4}} = P(y=1|\\vec{x}) ")])])],-1)),s("span",Ta,[a[94]||(a[94]=n('<span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span>',1)),s("span",Ra,[a[77]||(a[77]=s("span",{class:"strut",style:{height:"0.864em","vertical-align":"-0.15em"}},null,-1)),s("span",Ba,[s("span",Aa,[s("span",Va,[s("span",ja,[a[74]||(a[74]=n('<span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span>',1)),s("span",Na,[a[73]||(a[73]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",Ya,[s("span",Pa,[(l(),t("svg",Fa,[...a[72]||(a[72]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])]),a[75]||(a[75]=s("span",{class:"vlist-s"},"​",-1))]),a[76]||(a[76]=s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])],-1))])]),a[78]||(a[78]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1)),a[79]||(a[79]=s("span",{class:"mbin"},"⋅",-1)),a[80]||(a[80]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1))]),s("span",Da,[a[84]||(a[84]=s("span",{class:"strut",style:{height:"0.7973em","vertical-align":"-0.0833em"}},null,-1)),s("span",Ua,[s("span",Ca,[s("span",Ja,[s("span",Xa,[s("span",Ea,[a[83]||(a[83]=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"x")],-1)),s("span",Ka,[a[82]||(a[82]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",Wa,[s("span",Za,[(l(),t("svg",Ga,[...a[81]||(a[81]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])])])])])]),a[85]||(a[85]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1)),a[86]||(a[86]=s("span",{class:"mbin"},"+",-1)),a[87]||(a[87]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1))]),a[95]||(a[95]=n('<span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1107em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3414em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span>',5)),s("span",Oa,[a[91]||(a[91]=s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}},null,-1)),a[92]||(a[92]=s("span",{class:"mord"},"1∣",-1)),s("span",Ia,[s("span",Qa,[s("span",$a,[s("span",sn,[a[90]||(a[90]=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"x")],-1)),s("span",an,[a[89]||(a[89]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",nn,[s("span",tn,[(l(),t("svg",ln,[...a[88]||(a[88]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])])])])]),a[93]||(a[93]=s("span",{class:"mclose"},")",-1))])])])])]),s("p",pn,[s("span",en,[s("span",mn,[a[121]||(a[121]=s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"z"),s("mn",null,"2")]),s("mo",null,"="),s("mover",{accent:"true"},[s("msub",null,[s("mi",null,"w"),s("mn",null,"2")]),s("mo",null,"⃗")]),s("mo",null,"⋅"),s("mover",{accent:"true"},[s("mi",null,"x"),s("mo",null,"⃗")]),s("mo",null,"+"),s("msub",null,[s("mi",null,"b"),s("mn",null,"2")]),s("mspace",{linebreak:"newline"}),s("msub",null,[s("mi",null,"a"),s("mn",null,"2")]),s("mo",null,"="),s("mfrac",null,[s("msup",null,[s("mi",null,"e"),s("msub",null,[s("mi",null,"z"),s("mn",null,"2")])]),s("mrow",null,[s("msup",null,[s("mi",null,"e"),s("msub",null,[s("mi",null,"z"),s("mn",null,"1")])]),s("mo",null,"+"),s("msup",null,[s("mi",null,"e"),s("msub",null,[s("mi",null,"z"),s("mn",null,"2")])]),s("mo",null,"+"),s("msup",null,[s("mi",null,"e"),s("msub",null,[s("mi",null,"z"),s("mn",null,"3")])]),s("mo",null,"+"),s("msup",null,[s("mi",null,"e"),s("msub",null,[s("mi",null,"z"),s("mn",null,"4")])])])]),s("mo",null,"="),s("mi",null,"P"),s("mo",{stretchy:"false"},"("),s("mi",null,"y"),s("mo",null,"="),s("mn",null,"2"),s("mi",{mathvariant:"normal"},"∣"),s("mover",{accent:"true"},[s("mi",null,"x"),s("mo",null,"⃗")]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"z_{2} = \\vec{w_{2}}\\cdot{\\vec{x}} + b_{2} \\\\ a_{2} = \\frac{e^{z_2}}{e^{z_1}+e^{z_2}+e^{z_3}+e^{z_4}} = P(y=2|\\vec{x}) ")])])],-1)),s("span",cn,[a[119]||(a[119]=n('<span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span>',1)),s("span",rn,[a[102]||(a[102]=s("span",{class:"strut",style:{height:"0.864em","vertical-align":"-0.15em"}},null,-1)),s("span",on,[s("span",hn,[s("span",gn,[s("span",un,[a[99]||(a[99]=n('<span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span>',1)),s("span",dn,[a[98]||(a[98]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",yn,[s("span",vn,[(l(),t("svg",bn,[...a[97]||(a[97]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])]),a[100]||(a[100]=s("span",{class:"vlist-s"},"​",-1))]),a[101]||(a[101]=s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])],-1))])]),a[103]||(a[103]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1)),a[104]||(a[104]=s("span",{class:"mbin"},"⋅",-1)),a[105]||(a[105]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1))]),s("span",wn,[a[109]||(a[109]=s("span",{class:"strut",style:{height:"0.7973em","vertical-align":"-0.0833em"}},null,-1)),s("span",zn,[s("span",fn,[s("span",kn,[s("span",xn,[s("span",_n,[a[108]||(a[108]=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"x")],-1)),s("span",Mn,[a[107]||(a[107]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",Sn,[s("span",Hn,[(l(),t("svg",qn,[...a[106]||(a[106]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])])])])])]),a[110]||(a[110]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1)),a[111]||(a[111]=s("span",{class:"mbin"},"+",-1)),a[112]||(a[112]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1))]),a[120]||(a[120]=n('<span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1107em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3414em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span>',5)),s("span",Ln,[a[116]||(a[116]=s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}},null,-1)),a[117]||(a[117]=s("span",{class:"mord"},"2∣",-1)),s("span",Tn,[s("span",Rn,[s("span",Bn,[s("span",An,[a[115]||(a[115]=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"x")],-1)),s("span",Vn,[a[114]||(a[114]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",jn,[s("span",Nn,[(l(),t("svg",Yn,[...a[113]||(a[113]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])])])])]),a[118]||(a[118]=s("span",{class:"mclose"},")",-1))])])])])]),s("p",Pn,[s("span",Fn,[s("span",Dn,[a[146]||(a[146]=s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"z"),s("mn",null,"3")]),s("mo",null,"="),s("mover",{accent:"true"},[s("msub",null,[s("mi",null,"w"),s("mn",null,"3")]),s("mo",null,"⃗")]),s("mo",null,"⋅"),s("mover",{accent:"true"},[s("mi",null,"x"),s("mo",null,"⃗")]),s("mo",null,"+"),s("msub",null,[s("mi",null,"b"),s("mn",null,"3")]),s("mspace",{linebreak:"newline"}),s("msub",null,[s("mi",null,"a"),s("mn",null,"3")]),s("mo",null,"="),s("mfrac",null,[s("msup",null,[s("mi",null,"e"),s("msub",null,[s("mi",null,"z"),s("mn",null,"3")])]),s("mrow",null,[s("msup",null,[s("mi",null,"e"),s("msub",null,[s("mi",null,"z"),s("mn",null,"1")])]),s("mo",null,"+"),s("msup",null,[s("mi",null,"e"),s("msub",null,[s("mi",null,"z"),s("mn",null,"2")])]),s("mo",null,"+"),s("msup",null,[s("mi",null,"e"),s("msub",null,[s("mi",null,"z"),s("mn",null,"3")])]),s("mo",null,"+"),s("msup",null,[s("mi",null,"e"),s("msub",null,[s("mi",null,"z"),s("mn",null,"4")])])])]),s("mo",null,"="),s("mi",null,"P"),s("mo",{stretchy:"false"},"("),s("mi",null,"y"),s("mo",null,"="),s("mn",null,"3"),s("mi",{mathvariant:"normal"},"∣"),s("mover",{accent:"true"},[s("mi",null,"x"),s("mo",null,"⃗")]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"z_{3} = \\vec{w_{3}}\\cdot{\\vec{x}} + b_{3} \\\\ a_{3} = \\frac{e^{z_3}}{e^{z_1}+e^{z_2}+e^{z_3}+e^{z_4}} = P(y=3|\\vec{x}) ")])])],-1)),s("span",Un,[a[144]||(a[144]=n('<span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span>',1)),s("span",Cn,[a[127]||(a[127]=s("span",{class:"strut",style:{height:"0.864em","vertical-align":"-0.15em"}},null,-1)),s("span",Jn,[s("span",Xn,[s("span",En,[s("span",Kn,[a[124]||(a[124]=n('<span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span>',1)),s("span",Wn,[a[123]||(a[123]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",Zn,[s("span",Gn,[(l(),t("svg",On,[...a[122]||(a[122]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])]),a[125]||(a[125]=s("span",{class:"vlist-s"},"​",-1))]),a[126]||(a[126]=s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])],-1))])]),a[128]||(a[128]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1)),a[129]||(a[129]=s("span",{class:"mbin"},"⋅",-1)),a[130]||(a[130]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1))]),s("span",In,[a[134]||(a[134]=s("span",{class:"strut",style:{height:"0.7973em","vertical-align":"-0.0833em"}},null,-1)),s("span",Qn,[s("span",$n,[s("span",st,[s("span",at,[s("span",nt,[a[133]||(a[133]=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"x")],-1)),s("span",tt,[a[132]||(a[132]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",lt,[s("span",pt,[(l(),t("svg",et,[...a[131]||(a[131]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])])])])])]),a[135]||(a[135]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1)),a[136]||(a[136]=s("span",{class:"mbin"},"+",-1)),a[137]||(a[137]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1))]),a[145]||(a[145]=n('<span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1107em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3414em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span>',5)),s("span",it,[a[141]||(a[141]=s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}},null,-1)),a[142]||(a[142]=s("span",{class:"mord"},"3∣",-1)),s("span",mt,[s("span",ct,[s("span",rt,[s("span",ot,[a[140]||(a[140]=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"x")],-1)),s("span",ht,[a[139]||(a[139]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",gt,[s("span",ut,[(l(),t("svg",dt,[...a[138]||(a[138]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])])])])]),a[143]||(a[143]=s("span",{class:"mclose"},")",-1))])])])])]),s("p",yt,[s("span",vt,[s("span",bt,[a[171]||(a[171]=s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"z"),s("mn",null,"4")]),s("mo",null,"="),s("mover",{accent:"true"},[s("msub",null,[s("mi",null,"w"),s("mn",null,"4")]),s("mo",null,"⃗")]),s("mo",null,"⋅"),s("mover",{accent:"true"},[s("mi",null,"x"),s("mo",null,"⃗")]),s("mo",null,"+"),s("msub",null,[s("mi",null,"b"),s("mn",null,"4")]),s("mspace",{linebreak:"newline"}),s("msub",null,[s("mi",null,"a"),s("mn",null,"4")]),s("mo",null,"="),s("mfrac",null,[s("msup",null,[s("mi",null,"e"),s("msub",null,[s("mi",null,"z"),s("mn",null,"4")])]),s("mrow",null,[s("msup",null,[s("mi",null,"e"),s("msub",null,[s("mi",null,"z"),s("mn",null,"1")])]),s("mo",null,"+"),s("msup",null,[s("mi",null,"e"),s("msub",null,[s("mi",null,"z"),s("mn",null,"2")])]),s("mo",null,"+"),s("msup",null,[s("mi",null,"e"),s("msub",null,[s("mi",null,"z"),s("mn",null,"3")])]),s("mo",null,"+"),s("msup",null,[s("mi",null,"e"),s("msub",null,[s("mi",null,"z"),s("mn",null,"4")])])])]),s("mo",null,"="),s("mi",null,"P"),s("mo",{stretchy:"false"},"("),s("mi",null,"y"),s("mo",null,"="),s("mn",null,"4"),s("mi",{mathvariant:"normal"},"∣"),s("mover",{accent:"true"},[s("mi",null,"x"),s("mo",null,"⃗")]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"z_{4} = \\vec{w_{4}}\\cdot{\\vec{x}} + b_{4} \\\\ a_{4} = \\frac{e^{z_4}}{e^{z_1}+e^{z_2}+e^{z_3}+e^{z_4}} = P(y=4|\\vec{x}) ")])])],-1)),s("span",wt,[a[169]||(a[169]=n('<span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span>',1)),s("span",zt,[a[152]||(a[152]=s("span",{class:"strut",style:{height:"0.864em","vertical-align":"-0.15em"}},null,-1)),s("span",ft,[s("span",kt,[s("span",xt,[s("span",_t,[a[149]||(a[149]=n('<span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span>',1)),s("span",Mt,[a[148]||(a[148]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",St,[s("span",Ht,[(l(),t("svg",qt,[...a[147]||(a[147]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])]),a[150]||(a[150]=s("span",{class:"vlist-s"},"​",-1))]),a[151]||(a[151]=s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])],-1))])]),a[153]||(a[153]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1)),a[154]||(a[154]=s("span",{class:"mbin"},"⋅",-1)),a[155]||(a[155]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1))]),s("span",Lt,[a[159]||(a[159]=s("span",{class:"strut",style:{height:"0.7973em","vertical-align":"-0.0833em"}},null,-1)),s("span",Tt,[s("span",Rt,[s("span",Bt,[s("span",At,[s("span",Vt,[a[158]||(a[158]=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"x")],-1)),s("span",jt,[a[157]||(a[157]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",Nt,[s("span",Yt,[(l(),t("svg",Pt,[...a[156]||(a[156]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])])])])])]),a[160]||(a[160]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1)),a[161]||(a[161]=s("span",{class:"mbin"},"+",-1)),a[162]||(a[162]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1))]),a[170]||(a[170]=n('<span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1107em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3414em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span>',5)),s("span",Ft,[a[166]||(a[166]=s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}},null,-1)),a[167]||(a[167]=s("span",{class:"mord"},"4∣",-1)),s("span",Dt,[s("span",Ut,[s("span",Ct,[s("span",Jt,[a[165]||(a[165]=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"x")],-1)),s("span",Xt,[a[164]||(a[164]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",Et,[s("span",Kt,[(l(),t("svg",Wt,[...a[163]||(a[163]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])])])])]),a[168]||(a[168]=s("span",{class:"mclose"},")",-1))])])])])]),a[241]||(a[241]=s("p",null,"由这个例子，我们可以归纳出，Softmax 回归的公式：",-1)),s("p",Zt,[s("span",Gt,[s("span",Ot,[a[190]||(a[190]=n('<span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>z</mi><mi>j</mi></msub><mo>=</mo><mover accent="true"><msub><mi>w</mi><mi>j</mi></msub><mo>⃗</mo></mover><mo>⋅</mo><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><msub><mi>b</mi><mi>j</mi></msub><mspace width="1em"></mspace><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2...</mn><mo separator="true">,</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">z_{j} = \\vec{w_{j}}\\cdot{\\vec{x}} + b_{j} \\quad j=1,2...,N </annotation></semantics></math></span>',1)),s("span",It,[a[188]||(a[188]=n('<span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span>',1)),s("span",Qt,[a[177]||(a[177]=s("span",{class:"strut",style:{height:"1.0001em","vertical-align":"-0.2861em"}},null,-1)),s("span",$t,[s("span",sl,[s("span",al,[s("span",nl,[a[174]||(a[174]=n('<span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span>',1)),s("span",tl,[a[173]||(a[173]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",ll,[s("span",pl,[(l(),t("svg",el,[...a[172]||(a[172]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])]),a[175]||(a[175]=s("span",{class:"vlist-s"},"​",-1))]),a[176]||(a[176]=s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])],-1))])]),a[178]||(a[178]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1)),a[179]||(a[179]=s("span",{class:"mbin"},"⋅",-1)),a[180]||(a[180]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1))]),s("span",il,[a[184]||(a[184]=s("span",{class:"strut",style:{height:"0.7973em","vertical-align":"-0.0833em"}},null,-1)),s("span",ml,[s("span",cl,[s("span",rl,[s("span",ol,[s("span",hl,[a[183]||(a[183]=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"x")],-1)),s("span",gl,[a[182]||(a[182]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",ul,[s("span",dl,[(l(),t("svg",yl,[...a[181]||(a[181]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])])])])])]),a[185]||(a[185]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1)),a[186]||(a[186]=s("span",{class:"mbin"},"+",-1)),a[187]||(a[187]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1))]),a[189]||(a[189]=n('<span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span>',2))])])])]),s("p",vl,[s("span",bl,[s("span",wl,[a[199]||(a[199]=n('<span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub><mo>=</mo><mfrac><msup><mi>e</mi><msub><mi>z</mi><mi>j</mi></msub></msup><mrow><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msup><mi>e</mi><msub><mi>z</mi><mi>k</mi></msub></msup></mrow></mfrac><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mo>=</mo><mi>j</mi><mi mathvariant="normal">∣</mi><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a_{j} = \\frac{e^{z_j}}{\\sum^{N}_{k=1}e^{z_k}} = P(y=j|\\vec{x}) </annotation></semantics></math></span>',1)),s("span",zl,[a[198]||(a[198]=n('<span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.5123em;vertical-align:-1.1709em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3414em;"><span style="top:-2.1288em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1709em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span>',3)),s("span",fl,[a[194]||(a[194]=s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}},null,-1)),a[195]||(a[195]=s("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j",-1)),a[196]||(a[196]=s("span",{class:"mord"},"∣",-1)),s("span",kl,[s("span",xl,[s("span",_l,[s("span",Ml,[a[193]||(a[193]=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"x")],-1)),s("span",Sl,[a[192]||(a[192]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",Hl,[s("span",ql,[(l(),t("svg",Ll,[...a[191]||(a[191]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])])])])]),a[197]||(a[197]=s("span",{class:"mclose"},")",-1))])])])])]),a[242]||(a[242]=n('<p>和二分类问题一样，多类分类问题的概率总和还是 1，也就是说 a~1~ + a~2~ + ... + a~N~ = 1 。因此，softmax 回归算法就是逻辑回归算法的推广，使用它你将能够执行多分类问题。我们再来看看它的成本函数：</p><figure><img src="'+_+'" alt="6.14 Softmax成本函数" width="560" tabindex="0" loading="lazy"><figcaption>6.14 Softmax成本函数</figcaption></figure><h3 id="_4-2-神经网络的-softmax" tabindex="-1"><a class="header-anchor" href="#_4-2-神经网络的-softmax"><span>4.2 神经网络的 Softmax</span></a></h3><p>为了构建一个可以进行多分类问题的神经网络，我们将采用 Softmax 回归模型，<strong>本质上是将其放入神经网络的输出层。</strong></p><figure><img src="'+e+'" alt="6.9 TensorFlow 训练模型完整过程" width="560" tabindex="0" loading="lazy"><figcaption>6.9 TensorFlow 训练模型完整过程</figcaption></figure><p>还是以手写数字识别为例，以防忘记，我直接将图 6.9 搬下来。这时的输出层还是一个单独的逻辑回归，只能识别 0 或 1。我们将其改写成 Softmax 回归，一共有 0~9 十个数字，因此就有十个神经元（具体一点的展开请参考 4.1 小节）：</p>',6)),a[243]||(a[243]=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"g"),s("mi",null,"i"),s("mi",null,"s"),s("mi",null,"t"),s("mi",null,"i"),s("mi",null,"c"),s("mi",{mathvariant:"normal"},"_"),s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"g"),s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"s"),s("mi",null,"s"),s("mi",null,"i"),s("mi",null,"o"),s("mi",null,"n"),s("mspace",{width:"1em"}),s("msup",null,[s("mi",null,"a"),s("mrow",null,[s("mo",{stretchy:"false"},"["),s("mn",null,"3"),s("mo",{stretchy:"false"},"]")])]),s("mo",null,"="),s("mi",null,"g"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mi",null,"z"),s("mrow",null,[s("mo",{stretchy:"false"},"["),s("mn",null,"3"),s("mo",{stretchy:"false"},"]")])]),s("mo",{stretchy:"false"},")"),s("mspace",{linebreak:"newline"})]),s("annotation",{encoding:"application/x-tex"},"logistic\\_ regression \\quad a^{[3]}=g(z^{[3]}) \\\\ ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.248em","vertical-align":"-0.31em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal"},"c"),s("span",{class:"mord",style:{"margin-right":"0.02778em"}},"_"),s("span",{class:"mord mathnormal"},"re"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"ress"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"1em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"a"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.938em"}},[s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mopen mtight"},"["),s("span",{class:"mord mtight"},"3"),s("span",{class:"mclose mtight"},"]")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.188em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.04398em"}},"z"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.938em"}},[s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mopen mtight"},"["),s("span",{class:"mord mtight"},"3"),s("span",{class:"mclose mtight"},"]")])])])])])])])]),s("span",{class:"mclose"},")")]),s("span",{class:"mspace newline"})])])])],-1)),s("p",Tl,[s("span",Rl,[s("span",Bl,[a[209]||(a[209]=n('<span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mspace width="1em"></mspace><msup><mover accent="true"><mi>a</mi><mo>⃗</mo></mover><mrow><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo></mrow></msup><mo>=</mo><mo stretchy="false">(</mo><msubsup><mi>a</mi><mn>1</mn><mrow><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo></mrow></msubsup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msubsup><mi>a</mi><mn>10</mn><mrow><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo></mrow></msubsup><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><msubsup><mi>z</mi><mn>1</mn><mrow><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo></mrow></msubsup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msubsup><mi>z</mi><mn>10</mn><mrow><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo></mrow></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">softmax \\quad \\vec{a}^{[3]}=(a_{1}^{[3]},...,a_{10}^{[3]})=g(z_{1}^{[3]},...,z_{10}^{[3]}) </annotation></semantics></math></span>',1)),s("span",Al,[s("span",Vl,[a[204]||(a[204]=n('<span class="strut" style="height:1.1324em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">so</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:1em;"></span>',7)),s("span",jl,[s("span",Nl,[s("span",Yl,[s("span",Pl,[s("span",Fl,[a[202]||(a[202]=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"a")],-1)),s("span",Dl,[a[201]||(a[201]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",Ul,[s("span",Cl,[(l(),t("svg",Jl,[...a[200]||(a[200]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])])])])]),a[203]||(a[203]=n('<span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">3</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span>',1))]),a[205]||(a[205]=s("span",{class:"mspace",style:{"margin-right":"0.2778em"}},null,-1)),a[206]||(a[206]=s("span",{class:"mrel"},"=",-1)),a[207]||(a[207]=s("span",{class:"mspace",style:{"margin-right":"0.2778em"}},null,-1))]),a[208]||(a[208]=n('<span class="base"><span class="strut" style="height:1.3111em;vertical-align:-0.2663em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4337em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">3</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4337em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">10</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">3</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3111em;vertical-align:-0.2663em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4337em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">3</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4337em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">10</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">3</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span>',2))])])])]),a[244]||(a[244]=n(`<p>再来看看 Softmax 神经网络的代码实现，和之前的结构几乎没有变化，只是输出层和损失函数做出了调整：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf</span>
<span class="line"><span class="token keyword">from</span> tf<span class="token punctuation">.</span>keras <span class="token keyword">import</span> Sequential</span>
<span class="line"><span class="token keyword">from</span> tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers <span class="token keyword">import</span> Dense</span>
<span class="line"><span class="token keyword">from</span> tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>losses <span class="token keyword">import</span> SparseCategoricalCrossentropy</span>
<span class="line"></span>
<span class="line">model <span class="token operator">=</span> Sequential<span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">    Dense<span class="token punctuation">(</span>units<span class="token operator">=</span><span class="token number">25</span><span class="token punctuation">,</span>activation<span class="token operator">=</span><span class="token string">&quot;relu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    Dense<span class="token punctuation">(</span>units<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">,</span>activation<span class="token operator">=</span><span class="token string">&quot;relu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    Dense<span class="token punctuation">(</span>units<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>activation<span class="token operator">=</span><span class="token string">&quot;softmax&quot;</span><span class="token punctuation">)</span> <span class="token comment"># 变化1：输出层</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">model<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>loss<span class="token operator">=</span>SparseCategoricalCrossentropy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 变化2：损失函数</span></span>
<span class="line">model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> epochs <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SparseCategoricalCrossentropy 函数：Categorical 是指仍然将 y 分类，softmax 在这里取了 10，所以 y 的结果是从 0 到 9。Sparse 是指稀疏，也就是每次仅能取 0 到 9 中的一个值，比如 3 和 7 两种判断，或者其他多种判断一块出现的结果不会发生。</p><h3 id="_4-3-softmax-的改进实现" tabindex="-1"><a class="header-anchor" href="#_4-3-softmax-的改进实现"><span>4.3 Softmax 的改进实现</span></a></h3><p>虽然上述代码可以实现，能够正常工作，但还有能改进的空间。计算机在计算的过程中，因为内存是有限的，所以在浮点数（超小数），或者超大数的计算中，会有些许的误差存在：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">x1 <span class="token operator">=</span> <span class="token number">2.0</span> <span class="token operator">/</span> <span class="token number">10000</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>x1<span class="token punctuation">:</span><span class="token format-spec">.18f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span> <span class="token comment"># 表示输出x1，并且保留小数点后18位</span></span>
<span class="line"><span class="token comment"># 0.000200000000000000</span></span>
<span class="line"></span>
<span class="line">x2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">10000</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">10000</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>x2<span class="token punctuation">:</span><span class="token format-spec">.18f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># 0.000199999999999978</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>按道理来讲，x1 和 x2 的结果，应该是一样的才对，但是根据 python 的运算结果发现它们确实存在了细微的误差。还记得逻辑回归的损失函数吗：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo>=</mo><mo>−</mo><mi>y</mi><mi>log</mi><mo>⁡</mo><mi>a</mi><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">loss=-y\\log{a}-(1-y)\\log{(1-a)} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oss</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span></span></span></p>`,8)),s("p",null,[a[227]||(a[227]=n('这里的 a 就是逻辑回归的输出，也就是激活，它写做 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>z</mi></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a=g(z)=1/(1+e^{-z})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0213em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。我们通过线性回归得到了 z（',3)),s("span",Xl,[a[226]||(a[226]=n('<span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>=</mo><mover accent="true"><mi>w</mi><mo>⃗</mo></mover><mo>⋅</mo><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">z=\\vec{w}\\cdot\\vec{x}+b</annotation></semantics></math></span>',1)),s("span",El,[a[224]||(a[224]=n('<span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span>',1)),s("span",Kl,[a[213]||(a[213]=s("span",{class:"strut",style:{height:"0.714em"}},null,-1)),s("span",Wl,[s("span",Zl,[s("span",Gl,[s("span",Ol,[a[212]||(a[212]=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02691em"}},"w")],-1)),s("span",Il,[a[211]||(a[211]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",Ql,[s("span",$l,[(l(),t("svg",sp,[...a[210]||(a[210]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])])])])]),a[214]||(a[214]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1)),a[215]||(a[215]=s("span",{class:"mbin"},"⋅",-1)),a[216]||(a[216]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1))]),s("span",ap,[a[220]||(a[220]=s("span",{class:"strut",style:{height:"0.7973em","vertical-align":"-0.0833em"}},null,-1)),s("span",np,[s("span",tp,[s("span",lp,[s("span",pp,[a[219]||(a[219]=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"x")],-1)),s("span",ep,[a[218]||(a[218]=s("span",{class:"pstrut",style:{height:"3em"}},null,-1)),s("span",ip,[s("span",mp,[(l(),t("svg",cp,[...a[217]||(a[217]=[s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1)])]))])])])])])])]),a[221]||(a[221]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1)),a[222]||(a[222]=s("span",{class:"mbin"},"+",-1)),a[223]||(a[223]=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1))]),a[225]||(a[225]=s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"b")],-1))])]),a[228]||(a[228]=p("）,再通过逻辑回归 g(z) 得到了 a，再通过损失函数 loss 计算偏差值。",-1))]),a[245]||(a[245]=n(`<p>我们会发现，如果 <strong>存在超大数或者超小数</strong> 每一次的得到具体结果的计算，必定会使得这个结果，存在一点数字上的误差，累积起来，误差就变大了，就如同上述的 Python 计算。</p><p>有些小机灵鬼就想到了一个办法，我们把得出 a 值的这个步骤省略掉，直接带入得出 a 值得公式，进入 loss 函数，这样就减小了计算误差：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo>=</mo><mo>−</mo><mi>y</mi><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>z</mi></mrow></msup></mrow></mfrac><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>z</mi></mrow></msup></mrow></mfrac><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">loss=-y\\log(\\frac{1}{1+e^{-z}})-(1-y)\\log{(1-\\frac{1}{1+e^{-z}})} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oss</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0908em;vertical-align:-0.7693em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6973em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0908em;vertical-align:-0.7693em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6973em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></span></p><p>这个方法确实是可行的，不论是 sigmoid 的 loss 函数的两个逻辑回归，还是 softmax 的 loss 函数的多个逻辑回归，它都适用，而且对于 softmax 这种多逻辑回归输出的函数而言，这样优化的效果收益更大。我们来看看代码上，有哪些需要修改的：</p><p>::: code-tabs</p><p>@tab sigmoid 函数代码修改</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">model <span class="token operator">=</span> Sequential<span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">    Dense<span class="token punctuation">(</span>units<span class="token operator">=</span><span class="token number">25</span><span class="token punctuation">,</span>activation<span class="token operator">=</span><span class="token string">&quot;relu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    Dense<span class="token punctuation">(</span>units<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">,</span>activation<span class="token operator">=</span><span class="token string">&quot;relu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment"># 逻辑回归中，sigmoid函数换为 linear函数</span></span>
<span class="line">    Dense<span class="token punctuation">(</span>units<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>activation<span class="token operator">=</span><span class="token string">&quot;linear&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># 逻辑回归的loss函数中写入：from_logits=True</span></span>
<span class="line">model<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>loss<span class="token operator">=</span>SparseCrossEntropy<span class="token punctuation">(</span>from_logits<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> epochs <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 底层逻辑是，原本的逻辑回归输出层中，X应该是a，即逻辑回归函数已经运算完了，</span></span>
<span class="line"><span class="token comment"># 而现在X表示的是z，因为 Dense 最后走的是 linear线性回归，</span></span>
<span class="line"><span class="token comment"># sigmoid函数的运算直接嵌入到了 loss函数中</span></span>
<span class="line">logits <span class="token operator">=</span> model<span class="token punctuation">(</span>X<span class="token punctuation">)</span></span>
<span class="line">f_x <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>sigmoid<span class="token punctuation">(</span>logit<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>@tab softmax 函数代码修改</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">model <span class="token operator">=</span> Sequential<span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">    Dense<span class="token punctuation">(</span>units<span class="token operator">=</span><span class="token number">25</span><span class="token punctuation">,</span>activation<span class="token operator">=</span><span class="token string">&quot;relu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    Dense<span class="token punctuation">(</span>units<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">,</span>activation<span class="token operator">=</span><span class="token string">&quot;relu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment"># softmax回归中，softmax函数也换为 linear函数</span></span>
<span class="line">    Dense<span class="token punctuation">(</span>units<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>activation<span class="token operator">=</span><span class="token string">&quot;linear&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># softmax函数的loss函数中也写入：from_logits=True</span></span>
<span class="line">model<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>loss<span class="token operator">=</span>SparseCategoricalCrossentropy<span class="token punctuation">(</span>from_logits<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> epochs <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># 同理，softmax中的X也从 a1~a10 变成了 z1~z10</span></span>
<span class="line">logits <span class="token operator">=</span> model<span class="token punctuation">(</span>X<span class="token punctuation">)</span></span>
<span class="line">f_x <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>logit<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p><h3 id="_4-4-多标签分类-multi-label" tabindex="-1"><a class="header-anchor" href="#_4-4-多标签分类-multi-label"><span>4.4 多标签分类（Multi-label）</span></a></h3><p>有一种不同类型的分类问题，称为多标签分类问题。这种问题，输出的结果是一个向量。</p><p>比如你正在创造一辆自动驾驶汽车，或者一个驾驶辅助系统，那么给你一张当下车前的图片，你可能会想知道，你的车前面，有没有汽车？有没有公交车？有没有行人？等等。</p><figure><img src="`+M+'" alt="6.15 多标签分类1" width="560" tabindex="0" loading="lazy"><figcaption>6.15 多标签分类1</figcaption></figure><p>如何去构建这样一个多标签分类的神经网络呢？</p><p>思路一：将其视为三个完全独立的机器学习问题。一个检测汽车，一个检测公交车，一个检测行人。但这其实并不合理，工作量繁重。</p><p>思路二：训练一个神经网络，同时检测汽车、公交车、行人。</p><figure><img src="'+S+'" alt="6.16 多标签分类2" width="560" tabindex="0" loading="lazy"><figcaption>6.16 多标签分类2</figcaption></figure><p>吴恩达教授在这里也只是提到了这样一种分类形式，并没有说明它要怎么实现，反正必然是和 softmax 不同的，softmax 虽然有多种类别，但仅能选择一种，而多标签分类可以同时存在多个标签。如果有兴趣可以自行上网查阅资料。</p><h2 id="_5-补充内容" tabindex="-1"><a class="header-anchor" href="#_5-补充内容"><span>5.补充内容</span></a></h2><h3 id="_5-1-adam-优化算法" tabindex="-1"><a class="header-anchor" href="#_5-1-adam-优化算法"><span>5.1 Adam 优化算法</span></a></h3><p>梯度下降是一种广泛应用于机器学习的优化算法，是线性回归和逻辑回归等许多算法以及神经网络早期实现的基础。但现在有一些其他的优化算法，最小化成本函数的效果比原始的梯度下降更好。</p><p>Adam 算法，因为它可以微小的、自动的调整学习率，所以在梯度下降的速度上、稳健性上都有更好的表现。</p><figure><img src="'+H+`" alt="6.17 梯度下降之adam优化算法" width="560" tabindex="0" loading="lazy"><figcaption>6.17 梯度下降之adam优化算法</figcaption></figure><p>我们知道梯度下降中的学习率，原本是固定值，如果过小，下降速度会很慢，导致运算次数增加，运算成本和时间成本都会增加，而如果过大，就会导致来回跳，甚至永远到达不了最低点。</p><p>Adam 算法它可以自动的调整学习率 a 的大小，过大就减小，过小就增大，这就使得梯度下降的稳定性得到了提升。我们不探究怎么实现的，仅看一下在编译 complie 的代码中，应该怎么写：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">model<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>optimizer<span class="token operator">=</span>tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>optimizers<span class="token punctuation">.</span>Adam<span class="token punctuation">(</span>learning_rate<span class="token operator">=</span>le<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      loss<span class="token operator">=</span>SparseCategoricalCrossentropy<span class="token punctuation">(</span>from_logits<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>le-3 表示 10^-3^，也就是 0.001，这是一般情况下 Adam 算法的最常用的初始值。</p><h3 id="_5-2-神经网络层类型" tabindex="-1"><a class="header-anchor" href="#_5-2-神经网络层类型"><span>5.2 神经网络层类型</span></a></h3><p>到目前为止，讲过的所有的神经网络层，都是密集层类型，当前层中的每个神经元的输入，都是前一层的激活。除了密集层类型，还有一些其他的网络层以及其他的属性，在这里给大家举个栗子。你可能会在某些工作中看到一种叫做卷积层的神经网络层。</p><figure><img src="`+q+'" alt="6.18 梯度下降之adam优化算法" width="560" tabindex="0" loading="lazy"><figcaption>6.18 梯度下降之adam优化算法</figcaption></figure><p>我在输入层（空白图像），手写一个数字 9，然后构建一个隐藏层，它将计算不同的激活作为图像的输入。就比如，第一个蓝色隐藏单元，它只查看九个方块中的第一个，第二个洋红色隐藏单元，它只查看九个方块中的第二个，依次类推。</p><p>可能有朋友就会问了，为什么不让每个神经元，查看所有的像素，而只是查看一块像素呢？</p><ul><li>优点 1：它加快了计算的速度。</li><li>优点 2：用这种模型，可以减少训练的数据量。或者说，它也不太容易过度拟合。</li></ul><p>这种每个神经元只关注输入图像的一个区域的神经网络层，叫做卷积层。研究人员 John Macoun 弄清楚了让卷积层发挥作用的一些具体的操作，并推广了它们的使用。如果你的神经网络中有多个卷积层，有时它也被称为卷积神经网络。我们再来看一个例子。</p><figure><img src="'+L+'" alt="6.19 梯度下降之adam优化算法" width="560" tabindex="0" loading="lazy"><figcaption>6.19 梯度下降之adam优化算法</figcaption></figure><p>一个心电图的结果 x，我们将其分成 100 份，第一个卷积层，第一个神经元读取 1~20 份图片，第二个神经元读取 11~30 份，第三个 21~40 份，以此类推。一共有 9 个神经元。</p><p>第二个卷积层，第一个神经元我们读取 1~5 份，第二个读取 3~7 份，第三个读取 5~9 份。也许在输出层，使用了 sigmoid 函数，对第二个卷积层的激活做了一个是否有心脏病的二进制分类。</p><p>对于卷积层，也有很多的架构选择，比如：单个的神经元应该查看的输入窗口有多大；每层有多少个神经元等等。通过这些，我们可以更好的构建卷积神经网络模型。</p><p>这一节主要是想告诉大家，网络层是可以有选择的。如果你听说过，Transformer 模型、LSTM 模型、Attention 模型等等，它们的研究人员，其实就是把不同的神经网络层，组合到了一起，形成更复杂的、更强大的神经网络。</p>',40))])}const gp=m(T,[["render",rp]]),up=JSON.parse('{"path":"/blogs/MachineLearning/MachineLearning/06_tensorflow.html","title":"2-2 神经网络进阶","lang":"en-US","frontmatter":{"title":"2-2 神经网络进阶","date":"2024-02-03T00:00:00.000Z","categories":["机器学习"],"tags":["神经网络","深度学习","TensorFlow"]},"headers":[{"level":2,"title":"1.TensorFlow 代码实现推理","slug":"_1-tensorflow-代码实现推理","link":"#_1-tensorflow-代码实现推理","children":[{"level":3,"title":"1.1 咖啡烘培案例","slug":"_1-1-咖啡烘培案例","link":"#_1-1-咖啡烘培案例","children":[]},{"level":3,"title":"1.2 TensorFlow 的数据形式","slug":"_1-2-tensorflow-的数据形式","link":"#_1-2-tensorflow-的数据形式","children":[]},{"level":3,"title":"1.3 初次搭建神经网络","slug":"_1-3-初次搭建神经网络","link":"#_1-3-初次搭建神经网络","children":[]},{"level":3,"title":"1.4 Numpy 实现向前传播算法","slug":"_1-4-numpy-实现向前传播算法","link":"#_1-4-numpy-实现向前传播算法","children":[]}]},{"level":2,"title":"2.神经网络为何如此高效","slug":"_2-神经网络为何如此高效","link":"#_2-神经网络为何如此高效","children":[{"level":3,"title":"2.1 Numpy 和 TensorFlow 的对比","slug":"_2-1-numpy-和-tensorflow-的对比","link":"#_2-1-numpy-和-tensorflow-的对比","children":[]},{"level":3,"title":"2.2 矩阵乘法原理","slug":"_2-2-矩阵乘法原理","link":"#_2-2-矩阵乘法原理","children":[]}]},{"level":2,"title":"3.TensorFlow 训练神经网络","slug":"_3-tensorflow-训练神经网络","link":"#_3-tensorflow-训练神经网络","children":[{"level":3,"title":"3.1 回顾逻辑回归的模型训练","slug":"_3-1-回顾逻辑回归的模型训练","link":"#_3-1-回顾逻辑回归的模型训练","children":[]},{"level":3,"title":"3.2 训练神经网络的完整步骤","slug":"_3-2-训练神经网络的完整步骤","link":"#_3-2-训练神经网络的完整步骤","children":[]},{"level":3,"title":"3.3 激活函数的替换选项","slug":"_3-3-激活函数的替换选项","link":"#_3-3-激活函数的替换选项","children":[]},{"level":3,"title":"3.4 如何选择激活函数","slug":"_3-4-如何选择激活函数","link":"#_3-4-如何选择激活函数","children":[]},{"level":3,"title":"3.5 为什么需要激活函数","slug":"_3-5-为什么需要激活函数","link":"#_3-5-为什么需要激活函数","children":[]}]},{"level":2,"title":"4.多类分类问题（Multiclass）","slug":"_4-多类分类问题-multiclass","link":"#_4-多类分类问题-multiclass","children":[{"level":3,"title":"4.1 softmax 回归算法","slug":"_4-1-softmax-回归算法","link":"#_4-1-softmax-回归算法","children":[]},{"level":3,"title":"4.2 神经网络的 Softmax","slug":"_4-2-神经网络的-softmax","link":"#_4-2-神经网络的-softmax","children":[]},{"level":3,"title":"4.3 Softmax 的改进实现","slug":"_4-3-softmax-的改进实现","link":"#_4-3-softmax-的改进实现","children":[]},{"level":3,"title":"4.4 多标签分类（Multi-label）","slug":"_4-4-多标签分类-multi-label","link":"#_4-4-多标签分类-multi-label","children":[]}]},{"level":2,"title":"5.补充内容","slug":"_5-补充内容","link":"#_5-补充内容","children":[{"level":3,"title":"5.1 Adam 优化算法","slug":"_5-1-adam-优化算法","link":"#_5-1-adam-优化算法","children":[]},{"level":3,"title":"5.2 神经网络层类型","slug":"_5-2-神经网络层类型","link":"#_5-2-神经网络层类型","children":[]}]}],"git":{"createdTime":1757688790000,"updatedTime":1758386370000,"contributors":[{"name":"zjk","email":"1213860588@qq.com","commits":1}]},"filePathRelative":"blogs/MachineLearning/MachineLearning/06_tensorflow.md"}');export{gp as comp,up as data};
