import{_ as i,c as r,a as l,e as p,w as t,r as c,o as u,b as s,d as n}from"./app-DCqdGVAs.js";const m={};function k(d,a){const e=c("CodeGroupItem"),o=c("CodeGroup");return u(),r("div",null,[a[2]||(a[2]=l('<h4 id="难度-简单" tabindex="-1"><a class="header-anchor" href="#难度-简单"><span>难度：简单</span></a></h4><p>编写一个 Python 函数来计算给定数据集的各种描述性统计指标。该函数应采用数值列表或 NumPy 数组，并返回包含平均值、中位数、众数、方差、标准差、百分位数（第 25、50、75）和四分位数范围(IQR)的字典。需要计算的统计指标包括：</p><ol><li>平均值（mean）</li><li>中位数（median）</li><li>众数（mode）</li><li>方差（variance）</li><li>标准差（standard_deviation）</li><li>25th 百分位数（25th_percentile）</li><li>50th 百分位数（50th_percentile）</li><li>75th 百分位数（75th_percentile）</li><li>四分位距（interquartile_range）</li></ol><ul><li><strong>输入描述</strong>：输入为一行需要计算统计指标的数据集。</li><li><strong>输出描述</strong>：输出一个字典，包含以下键值对： <ul><li>&quot;mean&quot;: 平均值</li><li>&quot;median&quot;: 中位数</li><li>&quot;mode&quot;: 众数</li><li>&quot;variance&quot;: 方差（保留 4 位小数）</li><li>&quot;standard_deviation&quot;: 标准差（保留 4 位小数）</li><li>&quot;25th_percentile&quot;: 第 25 百分位数</li><li>&quot;50th_percentile&quot;: 第 50 百分位数</li><li>&quot;75th_percentile&quot;: 第 75 百分位数</li><li>&quot;interquartile_range&quot;: 四分位距</li></ul></li></ul>',4)),p(o,null,{default:t(()=>[p(e,{title:"代码框架"},{default:t(()=>[...a[0]||(a[0]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"prismjs","data-ext":"py","data-title":"py"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token keyword"},"import"),n(" numpy "),s("span",{class:"token keyword"},"as"),n(" np")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"def"),n(),s("span",{class:"token function"},"descriptive_statistics"),s("span",{class:"token punctuation"},"("),n("data"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},":")]),n(`
`),s("span",{class:"line"},[n("	"),s("span",{class:"token comment"},"# Your code here")]),n(`
`),s("span",{class:"line"},[n("	stats_dict "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token string"},'"mean"'),s("span",{class:"token punctuation"},":"),n(" mean"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token string"},'"median"'),s("span",{class:"token punctuation"},":"),n(" median"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token string"},'"mode"'),s("span",{class:"token punctuation"},":"),n(" mode"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token string"},'"variance"'),s("span",{class:"token punctuation"},":"),n(" np"),s("span",{class:"token punctuation"},"."),s("span",{class:"token builtin"},"round"),s("span",{class:"token punctuation"},"("),n("variance"),s("span",{class:"token punctuation"},","),s("span",{class:"token number"},"4"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token string"},'"standard_deviation"'),s("span",{class:"token punctuation"},":"),n(" np"),s("span",{class:"token punctuation"},"."),s("span",{class:"token builtin"},"round"),s("span",{class:"token punctuation"},"("),n("std_dev"),s("span",{class:"token punctuation"},","),s("span",{class:"token number"},"4"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token string"},'"25th_percentile"'),s("span",{class:"token punctuation"},":"),n(" percentiles"),s("span",{class:"token punctuation"},"["),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token string"},'"50th_percentile"'),s("span",{class:"token punctuation"},":"),n(" percentiles"),s("span",{class:"token punctuation"},"["),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token string"},'"75th_percentile"'),s("span",{class:"token punctuation"},":"),n(" percentiles"),s("span",{class:"token punctuation"},"["),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token string"},'"interquartile_range"'),s("span",{class:"token punctuation"},":"),n(" iqr")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},[n("	"),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token punctuation"},"{"),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"if"),n(" __name__ "),s("span",{class:"token operator"},"=="),n(),s("span",{class:"token string"},'"__main__"'),s("span",{class:"token punctuation"},":")]),n(`
`),s("span",{class:"line"},[n("    data "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token builtin"},"eval"),s("span",{class:"token punctuation"},"("),s("span",{class:"token builtin"},"input"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},")")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"print"),s("span",{class:"token punctuation"},"("),n("descriptive_statistics"),s("span",{class:"token punctuation"},"("),n("data"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},")")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),_:1}),p(e,{title:"示例 1"},{default:t(()=>[...a[1]||(a[1]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"prismjs","data-ext":"py","data-title":"py"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token comment"},"# 输入：")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"["),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token number"},"3"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token number"},"4"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token number"},"5"),s("span",{class:"token punctuation"},"]")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 输出：")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"{"),s("span",{class:"token string"},"'mean'"),s("span",{class:"token punctuation"},":"),n(),s("span",{class:"token number"},"3.0"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string"},"'median'"),s("span",{class:"token punctuation"},":"),n(),s("span",{class:"token number"},"3.0"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string"},"'mode'"),s("span",{class:"token punctuation"},":"),n(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string"},"'variance'"),s("span",{class:"token punctuation"},":"),n(),s("span",{class:"token number"},"2.0"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string"},"'standard_deviation'"),s("span",{class:"token punctuation"},":"),n(),s("span",{class:"token number"},"1.4142"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string"},"'25th_percentile'"),s("span",{class:"token punctuation"},":"),n(),s("span",{class:"token number"},"2.0"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string"},"'50th_percentile'"),s("span",{class:"token punctuation"},":"),n(),s("span",{class:"token number"},"3.0"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string"},"'75th_percentile'"),s("span",{class:"token punctuation"},":"),n(),s("span",{class:"token number"},"4.0"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string"},"'interquartile_range'"),s("span",{class:"token punctuation"},":"),n(),s("span",{class:"token number"},"2.0"),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),_:1})]),_:1}),a[3]||(a[3]=l(`<hr><h4 id="统计性描述的分析与作用" tabindex="-1"><a class="header-anchor" href="#统计性描述的分析与作用"><span>统计性描述的分析与作用</span></a></h4><p>大多数的值都很好理解，这里对几个不常见的值做一个说明，首先是 <mark>众数（mode）</mark>，它表示 <strong>出现次数最多的数</strong>。如果有多个并列出现最多的数，会返回一个列表。</p><p>其次是 <mark>百分位数（percentile）</mark>，它的意思是 <strong>有 25% 的数据比它小，75% 的数据比它大</strong>，并不是简单的取 index = 25%。它的计算过程如下：</p><ol><li>对数据排序：[7, 3, 5, 9] --&gt; [3, 5, 7, 9]</li><li>找到对应位置：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>⋅</mo><mi>p</mi></mrow><annotation encoding="application/x-tex">(n-1)\\cdot{p}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span></span></span></span></span>；n 表示数据数量，p 表示百分比。</li><li>如果位置不是整数，就在相邻两个值之间 插值（线性插值），而不是直接四舍五入。</li></ol><ul><li><strong>25th 百分位数</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>4</mn><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>⋅</mo><mn>0.25</mn><mo>=</mo><mn>0.75</mn></mrow><annotation encoding="application/x-tex">(4-1)\\cdot{0.25}=0.75</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord"><span class="mord">0.25</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.75</span></span></span></span>，在 [0, 1] 之间，线性插值：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>r</mi><mi>r</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>+</mo><mo stretchy="false">(</mo><mi>a</mi><mi>r</mi><mi>r</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>−</mo><mi>a</mi><mi>r</mi><mi>r</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo>⋅</mo><mi>p</mi><mo>=</mo><mn>3</mn><mo>+</mo><mo stretchy="false">(</mo><mn>5</mn><mo>−</mo><mn>3</mn><mo stretchy="false">)</mo><mo>⋅</mo><mn>0.25</mn><mo>=</mo><mn>3.5</mn></mrow><annotation encoding="application/x-tex">arr[0]+(arr[1]-arr[0])\\cdot{p}=3+(5-3)\\cdot{0.25}=3.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">rr</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">rr</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">rr</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">])</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord"><span class="mord">0.25</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3.5</span></span></span></span>。</li><li><strong>75th 百分位数</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>4</mn><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>⋅</mo><mn>0.75</mn><mo>=</mo><mn>2.25</mn></mrow><annotation encoding="application/x-tex">(4-1)\\cdot{0.75}=2.25</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord"><span class="mord">0.75</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2.25</span></span></span></span>，在 [2, 3] 之间，线性插值：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>7</mn><mo>+</mo><mo stretchy="false">(</mo><mn>9</mn><mo>−</mo><mn>7</mn><mo stretchy="false">)</mo><mo>⋅</mo><mn>0.75</mn><mo>=</mo><mn>8.5</mn></mrow><annotation encoding="application/x-tex">7+(9-7)\\cdot{0.75}=8.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">9</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord"><span class="mord">0.75</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">8.5</span></span></span></span></li></ul><p>最后是 <mark>四分位距（IQR, Interquartile Range）</mark>，等于 <strong>第 75 百分位数(Q3) - 第 25 百分位数(Q1)</strong>，用来衡量 <strong>数据中间 50% 的离散程度</strong>，不受极端值的影响，比如：</p><ul><li>[1, 2, 3, 4, 5, 100]：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi><mn>1</mn><mo>=</mo><mn>2</mn><mo>+</mo><mo stretchy="false">(</mo><mn>3</mn><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo><mo>⋅</mo><mn>0.25</mn><mo>=</mo><mn>2.25</mn><mo separator="true">,</mo><mi>Q</mi><mn>3</mn><mo>=</mo><mn>4</mn><mo>+</mo><mo stretchy="false">(</mo><mn>5</mn><mo>−</mo><mn>4</mn><mo stretchy="false">)</mo><mo>⋅</mo><mn>0.75</mn><mo>=</mo><mn>4.75</mn><mo separator="true">,</mo><mi>I</mi><mi>Q</mi><mi>R</mi><mo>=</mo><mi>Q</mi><mn>3</mn><mo>−</mo><mi>Q</mi><mn>1</mn><mo>=</mo><mn>2.5</mn></mrow><annotation encoding="application/x-tex">Q1=2+(3-2)\\cdot{0.25}=2.25, Q3=4+(5-4)\\cdot{0.75}=4.75, IQR=Q3-Q1=2.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord"><span class="mord">0.25</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">2.25</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">Q</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord"><span class="mord">0.75</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">4.75</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">QR</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2.5</span></span></span></span>。</li></ul><p>这一组 <strong>统计性描述</strong> 的九个指标，不是复杂的机器学习模型，而是帮助我们第一眼看清数据整体分布特征的“放大镜”，是 <strong>探索性数据分析（EDA）</strong> 的第一步。我们从 <mark>直觉、应用、局限</mark> 三个方面来探究一下它们的作用：</p><ol><li><mark>平均值（mean）</mark>：<strong>直觉</strong>：数据的“中心点”，整体水平。<strong>应用</strong>：公司 KPI（平均营收、平均点击率），医疗数据（平均寿命、平均血压）。<strong>局限</strong>：容易被极端值影响，比如 [1,2,3,100] 的平均值是 26.5，但大多数数据其实很小。</li><li><mark>中位数（median）</mark>：<strong>直觉</strong>：排好序后正中间的值，一半比它大、一半比它小。<strong>应用</strong>：收入统计（通常用中位数收入而不是平均值，因为极少数富豪会把平均值拉得很高）。房价、房租中位数。<strong>局限</strong>：不容易受极端值影响，更稳健。</li><li><mark>众数（mode）</mark>：<strong>直觉</strong>：最常见的数值或类别。<strong>应用</strong>：调查问卷（最常见的回答选项），图像处理（像素点最常见颜色 → 去噪），市场分析（最畅销产品、最热门价格区间）。<strong>局限</strong>：对于连续数值型数据，众数常常不直观（可能每个值都只出现一次）。</li><li><mark>方差（variance）、标准差（standard_deviation）</mark>：<strong>直觉</strong>：衡量数据的离散程度，波动大不大。<strong>应用</strong>：股票市场（高标准差 → 高风险波动；低标准差 → 稳定），制造业质量控制（产品重量/尺寸稳定性），实验重复性分析（误差范围）。<strong>局限</strong>：方差是平方单位，不直观；标准差更常用（和原始数据同单位）。</li><li><mark>百分位数（25th, 50th, 75th）</mark>：<strong>直觉</strong>：告诉你数据在某个百分比位置的值。<strong>应用</strong>：医学（“一个孩子的身高在全国 75 百分位 → 比 75% 的孩子高”），网络延迟（P95 延迟：95% 请求在这个时间内完成 → 常用于 SLA）。</li><li><mark>四分位距（interquartile_range, IQR）</mark>：<strong>直觉</strong>：Q3 − Q1，代表“中间 50% 数据”的范围。<strong>应用</strong>：异常值检测（常用 IQR rule：数据 &lt; Q1−1.5IQR 或 &gt; Q3+1.5IQR 判为 outlier）；金融风控（稳健的波动区间，不被极端值干扰）；数据建模时，衡量数据的“有效集中区间”。</li></ol><h4 id="解题思路-1-pandas-numpy" tabindex="-1"><a class="header-anchor" href="#解题思路-1-pandas-numpy"><span>解题思路 1：Pandas + Numpy</span></a></h4><p>Pandas 有两种非常通用的框架，以 Excel 表格的方式来看，<mark>pd.Series()</mark> 表示一行/一列的数据，<mark>pd.DataFrame()</mark> 表示一个表格的数据，也就是二维数组的形式。它内置了很多 Excel 常用的数学计算的方法，实现的方式如代码所示。</p><p>Pandas 的 Series/ DataFrame 内部大部分运算都是调用 NumPy 的向量化函数（np.mean, np.var, np.std 等）来处理的。所以性能上和 NumPy 差不多，优势主要是接口更方便，对缺失值（NaN）处理更好，而且方便做列/行操作。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd</span>
<span class="line"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">descriptive_statistics</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    s <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span>data<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&quot;mean&quot;</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;median&quot;</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>median<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;mode&quot;</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>mode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">if</span> <span class="token keyword">not</span> s<span class="token punctuation">.</span>mode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>empty <span class="token keyword">else</span> <span class="token boolean">None</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;variance&quot;</span><span class="token punctuation">:</span> <span class="token builtin">round</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>var<span class="token punctuation">(</span>s<span class="token punctuation">,</span> ddof<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;standard_deviation&quot;</span><span class="token punctuation">:</span> <span class="token builtin">round</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>std<span class="token punctuation">(</span>s<span class="token punctuation">,</span> ddof<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;25th_percentile&quot;</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>quantile<span class="token punctuation">(</span><span class="token number">0.25</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;50th_percentile&quot;</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>quantile<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;75th_percentile&quot;</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>quantile<span class="token punctuation">(</span><span class="token number">0.75</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;interquartile_range&quot;</span><span class="token punctuation">:</span> s<span class="token punctuation">.</span>quantile<span class="token punctuation">(</span><span class="token number">0.75</span><span class="token punctuation">)</span> <span class="token operator">-</span> s<span class="token punctuation">.</span>quantile<span class="token punctuation">(</span><span class="token number">0.25</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要说明的有两点。其一，众数（mode）之所以写这么长，是避免代码的报错。<mark>s.mode()</mark> 的返回值不是单个数，而是一个 Series，因为众数可能不止一个。所以这时候就要取 <mark>.iloc[0]</mark>,表示只取第一个众数，简化成一个值返回。</p><p>写到这里其实就能通过了。后面的判断表示，如果 Series 不为空，才从 s.mode().iloc[0] 中取值，否则返回 None。避免 Series 为空时，出现代码的报错行为，是一步安全性的冗余操作。</p><p>其二，方差和标准差的计算默认是这么写的（默认 ddof=1，表示样本方差/标准差）：</p><ul><li>&quot;variance&quot;: s.var(),</li><li>&quot;standard_deviation&quot;: s.std(),</li></ul><p>但是 <strong>样本方差/标准差（无偏估计）</strong> 计算出来的结果与给出的结果有误差，所以我尝试了将其改为 <strong>总体方差/标准差（有偏估计）</strong>，这一次对了。无偏估计就是归一化时使用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">\\frac{1}{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2484em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，有偏估计就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mi>n</mi></mfrac></mrow><annotation encoding="application/x-tex">\\frac{1}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，在 LA6 中有说到过。</p><h4 id="解题思路-2-numpy-处理" tabindex="-1"><a class="header-anchor" href="#解题思路-2-numpy-处理"><span>解题思路 2：Numpy 处理</span></a></h4><p>刚说了，Pandas 的计算大多都是调用的 Numpy 对于向量的计算函数，所以本质上我们也可以通过 Numpy 直接进行计算。唯独需要手动计算的是 <strong>众数（mode）</strong>，我们可以通过计算 <strong>唯一值 + 出现次数</strong> 的方式，得到众数结果：</p><ul><li><mark>np.unique(arr, return_counts=True)</mark>：返回两个数组，<strong>values 数组</strong> 获取去重、排序后的所有唯一值；<strong>counts 数组</strong> 获取每个唯一值出现的次数。举例说明：</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span></span>
<span class="line">values <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span></span>
<span class="line">counts <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><mark>max_count = counts.max()</mark>：找到最大频数。这里就是 max_count = 2。</li><li><mark>values[counts == max_count]</mark>：找出所有最大频数的众数候选。NumPy 允许我们用布尔数组来索引另一个数组。规则是，<strong>布尔数组和被索引数组长度要一致</strong>。位置为 True 的，就取出来；为 False 的，就跳过。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">values<span class="token punctuation">[</span>counts <span class="token operator">==</span> max_count<span class="token punctuation">]</span></span>
<span class="line">values<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">]</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><mark>mode_candidates[0]</mark>：取第一个众数。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">mode_numpy</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;返回数组的众数（如有多个众数，返回第一个）&quot;&quot;&quot;</span></span>
<span class="line">    values<span class="token punctuation">,</span> counts <span class="token operator">=</span> np<span class="token punctuation">.</span>unique<span class="token punctuation">(</span>arr<span class="token punctuation">,</span> return_counts<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line">    max_count <span class="token operator">=</span> counts<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    mode_candidates <span class="token operator">=</span> values<span class="token punctuation">[</span>counts <span class="token operator">==</span> max_count<span class="token punctuation">]</span></span>
<span class="line">    <span class="token keyword">return</span> mode_candidates<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">descriptive_statistics</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    arr <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>data<span class="token punctuation">)</span>  <span class="token comment"># 转成 NumPy array</span></span>
<span class="line"></span>
<span class="line">    p25 <span class="token operator">=</span> np<span class="token punctuation">.</span>percentile<span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span></span>
<span class="line">    p50 <span class="token operator">=</span> np<span class="token punctuation">.</span>percentile<span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span></span>
<span class="line">    p75 <span class="token operator">=</span> np<span class="token punctuation">.</span>percentile<span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&quot;mean&quot;</span><span class="token punctuation">:</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;median&quot;</span><span class="token punctuation">:</span> np<span class="token punctuation">.</span>median<span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;mode&quot;</span><span class="token punctuation">:</span> mode_numpy<span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;variance&quot;</span><span class="token punctuation">:</span> <span class="token builtin">round</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>var<span class="token punctuation">(</span>arr<span class="token punctuation">,</span> ddof<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;standard_deviation&quot;</span><span class="token punctuation">:</span> <span class="token builtin">round</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>std<span class="token punctuation">(</span>arr<span class="token punctuation">,</span> ddof<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;25th_percentile&quot;</span><span class="token punctuation">:</span> p25<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;50th_percentile&quot;</span><span class="token punctuation">:</span> p50<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;75th_percentile&quot;</span><span class="token punctuation">:</span> p75<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;interquartile_range&quot;</span><span class="token punctuation">:</span> p75 <span class="token operator">-</span> p25<span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="解题思路-3-python-纯手搓" tabindex="-1"><a class="header-anchor" href="#解题思路-3-python-纯手搓"><span>解题思路 3：Python 纯手搓</span></a></h4><p>知道对应公式，对不同的计算封装成函数调用即可。难到是不难，就是有点麻烦。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">from</span> collections <span class="token keyword">import</span> Counter</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">mean</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token builtin">len</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token keyword">if</span> arr <span class="token keyword">else</span> <span class="token boolean">None</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">median</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    mid <span class="token operator">=</span> n <span class="token operator">//</span> <span class="token number">2</span></span>
<span class="line">    <span class="token keyword">if</span> n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span></span>
<span class="line">        result <span class="token operator">=</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> arr<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token builtin">float</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token builtin">float</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">mode</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    counts <span class="token operator">=</span> Counter<span class="token punctuation">(</span>arr<span class="token punctuation">)</span></span>
<span class="line">    max_count <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span>counts<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    mode_candidates <span class="token operator">=</span> <span class="token punctuation">[</span>k <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> counts<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> v <span class="token operator">==</span> max_count<span class="token punctuation">]</span></span>
<span class="line">    <span class="token keyword">return</span> mode_candidates<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment"># 取第一个众数</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">variance</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    m <span class="token operator">=</span> mean<span class="token punctuation">(</span>arr<span class="token punctuation">)</span></span>
<span class="line">    m1 <span class="token operator">=</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x <span class="token operator">-</span> m<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> arr<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token builtin">len</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token builtin">round</span><span class="token punctuation">(</span>m1<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">standard_deviation</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    var <span class="token operator">=</span> variance<span class="token punctuation">(</span>arr<span class="token punctuation">)</span></span>
<span class="line">    var1 <span class="token operator">=</span> var <span class="token operator">**</span> <span class="token number">0.5</span> <span class="token keyword">if</span> var <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span> <span class="token keyword">else</span> <span class="token boolean">None</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token builtin">round</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">percentiles</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">percentile</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        pos <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> p</span>
<span class="line">        i <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span></span>
<span class="line">        frac <span class="token operator">=</span> pos <span class="token operator">-</span> i</span>
<span class="line">        <span class="token keyword">if</span> i <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> n<span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">return</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> frac<span class="token punctuation">)</span> <span class="token operator">+</span> arr<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> frac</span>
<span class="line">        <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">return</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">    q25 <span class="token operator">=</span> percentile<span class="token punctuation">(</span><span class="token number">0.25</span><span class="token punctuation">)</span></span>
<span class="line">    q50 <span class="token operator">=</span> percentile<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span></span>
<span class="line">    q75 <span class="token operator">=</span> percentile<span class="token punctuation">(</span><span class="token number">0.75</span><span class="token punctuation">)</span></span>
<span class="line">    iqr <span class="token operator">=</span> q75 <span class="token operator">-</span> q25</span>
<span class="line">    <span class="token keyword">return</span> q25<span class="token punctuation">,</span> q50<span class="token punctuation">,</span> q75<span class="token punctuation">,</span> iqr</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">descriptive_statistics</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    arr <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span></span>
<span class="line">    n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span></span>
<span class="line">    q25<span class="token punctuation">,</span> q50<span class="token punctuation">,</span> q75<span class="token punctuation">,</span> iqr <span class="token operator">=</span> percentiles<span class="token punctuation">(</span>arr<span class="token punctuation">,</span> n<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&quot;mean&quot;</span><span class="token punctuation">:</span> mean<span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;median&quot;</span><span class="token punctuation">:</span> median<span class="token punctuation">(</span>arr<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;mode&quot;</span><span class="token punctuation">:</span> mode<span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;variance&quot;</span><span class="token punctuation">:</span> variance<span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;standard_deviation&quot;</span><span class="token punctuation">:</span> standard_deviation<span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;25th_percentile&quot;</span><span class="token punctuation">:</span> q25<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;50th_percentile&quot;</span><span class="token punctuation">:</span> q50<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;75th_percentile&quot;</span><span class="token punctuation">:</span> q75<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;interquartile_range&quot;</span><span class="token punctuation">:</span> iqr</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30))])}const h=i(m,[["render",k]]),v=JSON.parse('{"path":"/blogs/CodeExam/AI/LinearAlgebra/LA13.html","title":"LA13.描述性统计计算器","lang":"en-US","frontmatter":{"title":"LA13.描述性统计计算器","date":"2025/09/30","categories":["每日一题"],"tags":["AI题库","线性代数"]},"headers":[],"git":{"createdTime":1759087649000,"updatedTime":1759309824000,"contributors":[{"name":"jinkai","email":"1213860588@qq.com","commits":3}]},"filePathRelative":"blogs/CodeExam/AI/LinearAlgebra/LA13.md"}');export{h as comp,v as data};
