import{_ as i,c as u,a as c,e as t,w as p,r as l,o as r,b as n,d as s}from"./app-CkYqgEgS.js";const k="/blog-vp-reco/cv/ImageProcessing/05_xxx/01_addsub1.png",m="/blog-vp-reco/cv/ImageProcessing/05_xxx/02_addsub2.png",d="/blog-vp-reco/cv/ImageProcessing/05_xxx/03_max1.png",b="/blog-vp-reco/cv/ImageProcessing/05_xxx/04_max2.png",g="/blog-vp-reco/cv/ImageProcessing/05_xxx/05_and.png",v="/blog-vp-reco/cv/ImageProcessing/05_xxx/05_not.png",h="/blog-vp-reco/cv/ImageProcessing/05_xxx/05_or.png",y="/blog-vp-reco/cv/ImageProcessing/05_xxx/05_xor.png",_="/blog-vp-reco/cv/ImageProcessing/05_xxx/06_ed1.png",w="/blog-vp-reco/cv/ImageProcessing/05_xxx/06_ed2.png",x="/blog-vp-reco/cv/ImageProcessing/05_xxx/07_opening.png",f="/blog-vp-reco/cv/ImageProcessing/05_xxx/07_closing.png",O="/blog-vp-reco/cv/ImageProcessing/05_xxx/08_tophat.png",R="/blog-vp-reco/cv/ImageProcessing/05_xxx/08_blackhat.png",C="/blog-vp-reco/cv/ImageProcessing/05_xxx/09_hitormiss.png",z={};function B(P,a){const e=l("CodeGroupItem"),o=l("CodeGroup");return r(),u("div",null,[a[10]||(a[10]=c(`<h2 id="_1-运算类操作" tabindex="-1"><a class="header-anchor" href="#_1-运算类操作"><span>1. 运算类操作</span></a></h2><h3 id="_1-1-饱和运算" tabindex="-1"><a class="header-anchor" href="#_1-1-饱和运算"><span>1.1 饱和运算</span></a></h3><p>饱和运算的原理十分简单，比如我们正常 RGB 的像素范围在 [0, 255] 之间，但是有的时候，做了加法、减法等等，导致其越界了。怎么办呢？<strong>OpenCV 的处理方式</strong>：会直接将值截断在边界值，小于 0 的被置为 0，大于 255 的被置为 255。</p><p>所以 <mark>饱和运算（Saturated Operation）</mark> 在实现上就是通过最大值与最小值将运算限制在固定范围之内。我们先用 Python 的方法来做一个演示，通过 min 和 max 函数来截断：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">opencv_add1</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    temp <span class="token operator">=</span> a <span class="token operator">+</span> b</span>
<span class="line">    <span class="token keyword">return</span> <span class="token builtin">min</span><span class="token punctuation">(</span><span class="token builtin">max</span><span class="token punctuation">(</span>temp<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">opencv1 <span class="token operator">=</span> opencv_add1<span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;opencv add 1: &quot;</span><span class="token punctuation">,</span> opencv1<span class="token punctuation">)</span>  <span class="token comment"># 255</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但需要注意的是，OpenCV 的底层是 Numpy 数组，所以如果真实的要去做操作，需要使用 <mark>np.clip()</mark> 函数进行截断，或者直接使用 where 条件判断也可以：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">opencv_add2</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 1. 先将输入转换为更大的整数类型（比如 int32），防止中间计算溢出</span></span>
<span class="line">    img1_int32 <span class="token operator">=</span> a<span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>int32<span class="token punctuation">)</span></span>
<span class="line">    img2_int32 <span class="token operator">=</span> b<span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>int32<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># 2. 使用 clip 函数手动饱和处理，裁剪到 [0, 255] 范围</span></span>
<span class="line">    result_int32 <span class="token operator">=</span> img1_int32 <span class="token operator">+</span> img2_int32</span>
<span class="line">    result_clipped <span class="token operator">=</span> np<span class="token punctuation">.</span>clip<span class="token punctuation">(</span>result_int32<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># 3. 最后再转换回 uint8 返回</span></span>
<span class="line">    <span class="token keyword">return</span> result_clipped<span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">opencv2 <span class="token operator">=</span> numpy_add<span class="token punctuation">(</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">250</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  np<span class="token punctuation">.</span>uint8<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;opencv add 2: &quot;</span><span class="token punctuation">,</span> opencv2<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此外，np.uint8 在内存中占用 1 个字节（8 位），只能表示 0 到 255 这 256 个整数，在溢出后它的默认规撞上了 C 语言层面的整数溢出规则，也就是进行回绕的<strong>模运算</strong>：把 0 和 255 收尾相连，形成一个圆形环路。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</span>
<span class="line"><span class="token keyword">import</span> cv2</span>
<span class="line"></span>
<span class="line">x <span class="token operator">=</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">250</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">y <span class="token operator">=</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">opencv <span class="token operator">=</span> cv2<span class="token punctuation">.</span>add<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>  <span class="token comment"># 250 + 50 = 300 -&gt; 255</span></span>
<span class="line">numpy <span class="token operator">=</span> x <span class="token operator">+</span> y  <span class="token comment"># 250 + 50 = 300 -&gt; 44 (mod 256)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;opencv:\\n&quot;</span><span class="token punctuation">,</span> opencv<span class="token punctuation">)</span>  <span class="token comment"># 饱和运算</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;numpy:\\n&quot;</span><span class="token punctuation">,</span> numpy<span class="token punctuation">)</span>  <span class="token comment"># 模运算</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在我的例子中就是 mod 256。这种 Numpy 的模运算，和 OpenCV 的饱和运算是两码事儿，不要混淆了。</p><h3 id="_1-2-图像加减法" tabindex="-1"><a class="header-anchor" href="#_1-2-图像加减法"><span>1.2 图像加减法</span></a></h3><p>图像的加减法分别使用 <mark>cv2.add()</mark>、<mark>cv2.subtract()</mark> 两个函数执行，如果读取的内容是图像，它们在内部会自动执行饱和运算。当然，从实现上来说，这两个函数不仅可以用于数组的逐元素运算，也可以对标量运算。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> cv2</span>
<span class="line"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</span>
<span class="line"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">show_img_by_plt</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> title<span class="token punctuation">,</span> pos<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> pos<span class="token punctuation">)</span></span>
<span class="line">    plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">)</span></span>
<span class="line">    plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span>title<span class="token punctuation">)</span></span>
<span class="line">    plt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token string">&#39;off&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;01_luna.png&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment"># 读取图像</span></span>
<span class="line">img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span></span>
<span class="line">M <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">&quot;uint8&quot;</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">255</span></span>
<span class="line"></span>
<span class="line">result1 <span class="token operator">=</span> cv2<span class="token punctuation">.</span>add<span class="token punctuation">(</span>img<span class="token punctuation">,</span> M<span class="token punctuation">)</span></span>
<span class="line">result2 <span class="token operator">=</span> cv2<span class="token punctuation">.</span>subtract<span class="token punctuation">(</span>img<span class="token punctuation">,</span> M<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">show_img_by_plt<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token string">&quot;Original Image&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">show_img_by_plt<span class="token punctuation">(</span>result1<span class="token punctuation">,</span> <span class="token string">&quot;Add 255&quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">show_img_by_plt<span class="token punctuation">(</span>result2<span class="token punctuation">,</span> <span class="token string">&quot;Subtract 255&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+k+'" alt="1.1 图像加减法越界结果" tabindex="0" loading="lazy"><figcaption>1.1 图像加减法越界结果</figcaption></figure><figure><img src="'+m+`" alt="1.2 图像加减法正常结果" tabindex="0" loading="lazy"><figcaption>1.2 图像加减法正常结果</figcaption></figure><h3 id="_1-3-图像混合" tabindex="-1"><a class="header-anchor" href="#_1-3-图像混合"><span>1.3 图像混合</span></a></h3><p>图像混合也是图像相加的一种，只不过可以赋予不同图像不同的权重进行相加。没错，就是我们的老朋友 <mark>cv2.addWeighted()</mark> 函数，在《锐化与均衡化》中已经见过面了：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">dst <span class="token operator">=</span> cv2<span class="token punctuation">.</span>addWeighted<span class="token punctuation">(</span>src1<span class="token punctuation">,</span> alpha<span class="token punctuation">,</span> src2<span class="token punctuation">,</span> beta<span class="token punctuation">,</span> gamma<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>d</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>s</mi><mi>r</mi><mi>c</mi><mn>1</mn><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>⋅</mo><mi>α</mi><mo>+</mo><mi>s</mi><mi>r</mi><mi>c</mi><mn>2</mn><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>⋅</mo><mi>β</mi><mo>+</mo><mi>γ</mi></mrow><annotation encoding="application/x-tex">dst(x,y)=src1(x,y)\\cdot{\\alpha}+src2(x,y)\\cdot{\\beta}+\\gamma </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">src</span><span class="mord">1</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">src</span><span class="mord">2</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span></span></span></span></span></p><p>那我们就再来一个老熟人 <mark>Sobel 算子</mark>，看一下 X 方向、Y 方向、XY 混合方向，边缘检测的结果分别是什么：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> cv2</span>
<span class="line"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">show_img_by_plt</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> title<span class="token punctuation">,</span> pos<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> pos<span class="token punctuation">)</span></span>
<span class="line">    plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">&quot;gray&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span>title<span class="token punctuation">)</span></span>
<span class="line">    plt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token string">&#39;off&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;01_luna.png&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>  <span class="token comment"># 读取图像</span></span>
<span class="line">gradient_x <span class="token operator">=</span> cv2<span class="token punctuation">.</span>Sobel<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>CV_32F<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line">gradient_y <span class="token operator">=</span> cv2<span class="token punctuation">.</span>Sobel<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>CV_32F<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line">gradient_xy <span class="token operator">=</span> cv2<span class="token punctuation">.</span>magnitude<span class="token punctuation">(</span>gradient_x<span class="token punctuation">,</span> gradient_y<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">show_img_by_plt<span class="token punctuation">(</span>gradient_x<span class="token punctuation">,</span> <span class="token string">&quot;Gradient X Float32&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">show_img_by_plt<span class="token punctuation">(</span>gradient_y<span class="token punctuation">,</span> <span class="token string">&quot;Gradient Y Float32&quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">show_img_by_plt<span class="token punctuation">(</span>gradient_xy<span class="token punctuation">,</span> <span class="token string">&quot;Gradient XY Float32&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">show_img_by_plt<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>convertScaleAbs<span class="token punctuation">(</span>gradient_x<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;Gradient X uint8&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">show_img_by_plt<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>convertScaleAbs<span class="token punctuation">(</span>gradient_y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;Gradient Y uint8&quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">show_img_by_plt<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>convertScaleAbs<span class="token punctuation">(</span>gradient_xy<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;Gradient XY uint8&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+d+'" alt="1.3 Sobel 算子 - 不同方向的梯度显示 浮点数" tabindex="0" loading="lazy"><figcaption>1.3 Sobel 算子 - 不同方向的梯度显示 浮点数</figcaption></figure><figure><img src="'+b+`" alt="1.4 Sobel 算子 - 不同方向的梯度显示 正整数" tabindex="0" loading="lazy"><figcaption>1.4 Sobel 算子 - 不同方向的梯度显示 正整数</figcaption></figure><h3 id="_1-4-按位运算" tabindex="-1"><a class="header-anchor" href="#_1-4-按位运算"><span>1.4 按位运算</span></a></h3><p>在 OpenCV 中，按位运算的函数一共有四个：<strong>与（and）、或（or）、非（not）、异或（xor）</strong>，每一个都很常用：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">cv2<span class="token punctuation">.</span>bitwise_and<span class="token punctuation">(</span>src1<span class="token punctuation">,</span> src2<span class="token punctuation">,</span> dst<span class="token operator">=</span>dst<span class="token punctuation">,</span> mask<span class="token operator">=</span>mask<span class="token punctuation">)</span></span>
<span class="line">cv2<span class="token punctuation">.</span>bitwise_or<span class="token punctuation">(</span>src1<span class="token punctuation">,</span> src2<span class="token punctuation">,</span> dst<span class="token operator">=</span>dst<span class="token punctuation">,</span> mask<span class="token operator">=</span>mask<span class="token punctuation">)</span></span>
<span class="line">cv2<span class="token punctuation">.</span>bitwise_xor<span class="token punctuation">(</span>src1<span class="token punctuation">,</span> src2<span class="token punctuation">,</span> dst<span class="token operator">=</span>dst<span class="token punctuation">,</span> mask<span class="token operator">=</span>mask<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">cv2<span class="token punctuation">.</span>bitwise_not<span class="token punctuation">(</span>src<span class="token punctuation">,</span> mask<span class="token operator">=</span>mask<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可选参数 <strong>dst</strong> 用来指定输出的目标数组，通常在优化内存或者高性能储存时使用；可选参数 <strong>mask</strong> 用来指定按位运算的区域，黑白二值图像，黑色部分代表不处理的区域，白色部分代表需要做按位运算的区域。</p><ol><li><strong>按位与</strong>：两个像素同时为“真”时，结果才为“真”。<strong>常用于</strong> 提取 ROI（感兴趣区域）。用一个掩膜（mask）与原图进行与操作，可以抠出掩膜区域的图像。</li></ol><figure><img src="`+g+'" alt="1.5 按位与运算 AND" tabindex="0" loading="lazy"><figcaption>1.5 按位与运算 AND</figcaption></figure><ol start="2"><li><strong>按位非</strong>：反转每一位，即“求反”或“取补”。<strong>常用于</strong> 反转掩膜、生成负片。</li></ol><figure><img src="'+v+'" alt="1.6 按位非运算 AND" tabindex="0" loading="lazy"><figcaption>1.6 按位非运算 AND</figcaption></figure><ol start="3"><li><strong>按位或</strong>：两个像素中任意一个为“真”时，结果就为“真”。<strong>常用于</strong> 合并图像或区域。</li></ol><figure><img src="'+h+'" alt="1.7 按位或运算 OR" tabindex="0" loading="lazy"><figcaption>1.7 按位或运算 OR</figcaption></figure><ol start="4"><li><strong>按位异或</strong>：两个像素值不同时，结果为“真”；相同时，结果为“假”。<strong>常用于</strong> 找不同（检测区域变化）、绘制对称图形、加密/解密。</li></ol><p>假设有一家公司的仓库进小偷了，但是一时间不知道被偷了什么东西，不过幸好仓库的摄像头全程开启，所以我们通过前后不同时间的对比，找到了什么东西被拿走了（就是小孩子玩的找不同）。</p><p>直接减图会得到有正有负的差异，不方便处理。而 XOR 只关心“是否不同”，不关心谁亮谁暗，结果更二值化，便于后续分析。</p><figure><img src="'+y+'" alt="1.8 按位异或运算 XOR" tabindex="0" loading="lazy"><figcaption>1.8 按位异或运算 XOR</figcaption></figure><p>这里之所以有重影是因为我截图的时候，有些许误差，人眼不好分辨。不过很明显，五处不同颜色很鲜艳，误差的重影就只有轮廓。</p>',38)),t(o,null,{default:p(()=>[t(e,{title:"按位与 AND"},{default:p(()=>[...a[0]||(a[0]=[n("div",{class:"language-python line-numbers-mode","data-highlighter":"prismjs","data-ext":"py","data-title":"py"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" cv2")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" numpy "),n("span",{class:"token keyword"},"as"),s(" np")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" matplotlib"),n("span",{class:"token punctuation"},"."),s("pyplot "),n("span",{class:"token keyword"},"as"),s(" plt")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(" title"),n("span",{class:"token punctuation"},","),s(" pos"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("    ax "),n("span",{class:"token operator"},"="),s(" plt"),n("span",{class:"token punctuation"},"."),s("subplot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(" pos"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("imshow"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("title"),n("span",{class:"token punctuation"},"("),s("title"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("axis"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'off'"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("img1 "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("imread"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'04_cafe.jpg'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("img2 "),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("zeros"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1280"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1280"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" dtype"),n("span",{class:"token operator"},"="),s("np"),n("span",{class:"token punctuation"},"."),s("uint8"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("cv2"),n("span",{class:"token punctuation"},"."),s("circle"),n("span",{class:"token punctuation"},"("),s("img2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"960"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"700"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"280"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"255"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"255"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"255"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("bitwise_and "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("bitwise_and"),n("span",{class:"token punctuation"},"("),s("img1"),n("span",{class:"token punctuation"},","),s(" img2"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("plt"),n("span",{class:"token punctuation"},"."),s("figure"),n("span",{class:"token punctuation"},"("),s("figsize"),n("span",{class:"token operator"},"="),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"14"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("cv2"),n("span",{class:"token punctuation"},"."),s("cvtColor"),n("span",{class:"token punctuation"},"("),s("img1"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("COLOR_BGR2RGB"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Original Image"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("cv2"),n("span",{class:"token punctuation"},"."),s("cvtColor"),n("span",{class:"token punctuation"},"("),s("img2"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("COLOR_BGR2RGB"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Comparsion Image"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("cv2"),n("span",{class:"token punctuation"},"."),s("cvtColor"),n("span",{class:"token punctuation"},"("),s("bitwise_and"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("COLOR_BGR2RGB"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"AND Result"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("plt"),n("span",{class:"token punctuation"},"."),s("show"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])]),_:1}),t(e,{title:"按位非 NOT"},{default:p(()=>[...a[1]||(a[1]=[n("div",{class:"language-python line-numbers-mode","data-highlighter":"prismjs","data-ext":"py","data-title":"py"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" cv2")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" numpy "),n("span",{class:"token keyword"},"as"),s(" np")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" matplotlib"),n("span",{class:"token punctuation"},"."),s("pyplot "),n("span",{class:"token keyword"},"as"),s(" plt")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(" title"),n("span",{class:"token punctuation"},","),s(" pos"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("    ax "),n("span",{class:"token operator"},"="),s(" plt"),n("span",{class:"token punctuation"},"."),s("subplot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(" pos"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("imshow"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("title"),n("span",{class:"token punctuation"},"("),s("title"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("axis"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'off'"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("img1 "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("imread"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'04_cafe.jpg'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("img2 "),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("zeros"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1280"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1280"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" dtype"),n("span",{class:"token operator"},"="),s("np"),n("span",{class:"token punctuation"},"."),s("uint8"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("cv2"),n("span",{class:"token punctuation"},"."),s("circle"),n("span",{class:"token punctuation"},"("),s("img2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"960"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"700"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"280"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"255"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"255"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"255"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("bitwise_not "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("bitwise_not"),n("span",{class:"token punctuation"},"("),s("img2"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("bitwise_and "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("bitwise_and"),n("span",{class:"token punctuation"},"("),s("img1"),n("span",{class:"token punctuation"},","),s(" bitwise_not"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("plt"),n("span",{class:"token punctuation"},"."),s("figure"),n("span",{class:"token punctuation"},"("),s("figsize"),n("span",{class:"token operator"},"="),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"14"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("cv2"),n("span",{class:"token punctuation"},"."),s("cvtColor"),n("span",{class:"token punctuation"},"("),s("img1"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("COLOR_BGR2RGB"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Original Image"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("cv2"),n("span",{class:"token punctuation"},"."),s("cvtColor"),n("span",{class:"token punctuation"},"("),s("bitwise_not"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("COLOR_BGR2RGB"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"NOT Result"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("cv2"),n("span",{class:"token punctuation"},"."),s("cvtColor"),n("span",{class:"token punctuation"},"("),s("bitwise_and"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("COLOR_BGR2RGB"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"AND Result"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("plt"),n("span",{class:"token punctuation"},"."),s("show"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])]),_:1}),t(e,{title:"按位或 OR"},{default:p(()=>[...a[2]||(a[2]=[n("div",{class:"language-python line-numbers-mode","data-highlighter":"prismjs","data-ext":"py","data-title":"py"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" cv2")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" numpy "),n("span",{class:"token keyword"},"as"),s(" np")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" matplotlib"),n("span",{class:"token punctuation"},"."),s("pyplot "),n("span",{class:"token keyword"},"as"),s(" plt")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(" title"),n("span",{class:"token punctuation"},","),s(" pos"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("    ax "),n("span",{class:"token operator"},"="),s(" plt"),n("span",{class:"token punctuation"},"."),s("subplot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(" pos"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("imshow"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("title"),n("span",{class:"token punctuation"},"("),s("title"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("axis"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'off'"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("img1 "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("imread"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'04_cafe.jpg'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("img2 "),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("zeros"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1280"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1280"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" dtype"),n("span",{class:"token operator"},"="),s("np"),n("span",{class:"token punctuation"},"."),s("uint8"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("cv2"),n("span",{class:"token punctuation"},"."),s("circle"),n("span",{class:"token punctuation"},"("),s("img2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"960"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"700"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"280"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"255"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"255"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"255"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("img3 "),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("zeros"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1280"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1280"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" dtype"),n("span",{class:"token operator"},"="),s("np"),n("span",{class:"token punctuation"},"."),s("uint8"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("cv2"),n("span",{class:"token punctuation"},"."),s("circle"),n("span",{class:"token punctuation"},"("),s("img3"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"500"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"460"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"320"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"255"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"255"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"255"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("bitwist_or "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("bitwise_or"),n("span",{class:"token punctuation"},"("),s("img2"),n("span",{class:"token punctuation"},","),s(" img3"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("bitwise_and "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("bitwise_and"),n("span",{class:"token punctuation"},"("),s("img1"),n("span",{class:"token punctuation"},","),s(" bitwist_or"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("plt"),n("span",{class:"token punctuation"},"."),s("figure"),n("span",{class:"token punctuation"},"("),s("figsize"),n("span",{class:"token operator"},"="),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"14"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("cv2"),n("span",{class:"token punctuation"},"."),s("cvtColor"),n("span",{class:"token punctuation"},"("),s("img1"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("COLOR_BGR2RGB"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Original Image"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("cv2"),n("span",{class:"token punctuation"},"."),s("cvtColor"),n("span",{class:"token punctuation"},"("),s("img2"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("COLOR_BGR2RGB"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Original Image"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("cv2"),n("span",{class:"token punctuation"},"."),s("cvtColor"),n("span",{class:"token punctuation"},"("),s("img3"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("COLOR_BGR2RGB"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Original Image"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("cv2"),n("span",{class:"token punctuation"},"."),s("cvtColor"),n("span",{class:"token punctuation"},"("),s("bitwist_or"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("COLOR_BGR2RGB"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"NOT Result"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("cv2"),n("span",{class:"token punctuation"},"."),s("cvtColor"),n("span",{class:"token punctuation"},"("),s("bitwise_and"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("COLOR_BGR2RGB"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"AND Result"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"6"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("plt"),n("span",{class:"token punctuation"},"."),s("show"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])]),_:1}),t(e,{title:"按位异或 XOR"},{default:p(()=>[...a[3]||(a[3]=[n("div",{class:"language-python line-numbers-mode","data-highlighter":"prismjs","data-ext":"py","data-title":"py"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" cv2")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" matplotlib"),n("span",{class:"token punctuation"},"."),s("pyplot "),n("span",{class:"token keyword"},"as"),s(" plt")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(" title"),n("span",{class:"token punctuation"},","),s(" pos"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("    ax "),n("span",{class:"token operator"},"="),s(" plt"),n("span",{class:"token punctuation"},"."),s("subplot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(" pos"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("imshow"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("title"),n("span",{class:"token punctuation"},"("),s("title"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("axis"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'off'"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("img1 "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("imread"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'03_zbt1.jpg'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("img2 "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("imread"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'03_zbt2.jpg'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("bitwise_xor "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("bitwise_xor"),n("span",{class:"token punctuation"},"("),s("img1"),n("span",{class:"token punctuation"},","),s(" img2"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("plt"),n("span",{class:"token punctuation"},"."),s("figure"),n("span",{class:"token punctuation"},"("),s("figsize"),n("span",{class:"token operator"},"="),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"14"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("cv2"),n("span",{class:"token punctuation"},"."),s("cvtColor"),n("span",{class:"token punctuation"},"("),s("img1"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("COLOR_BGR2RGB"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Original Image"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("cv2"),n("span",{class:"token punctuation"},"."),s("cvtColor"),n("span",{class:"token punctuation"},"("),s("img2"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("COLOR_BGR2RGB"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Comparsion Image"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("cv2"),n("span",{class:"token punctuation"},"."),s("cvtColor"),n("span",{class:"token punctuation"},"("),s("bitwise_xor"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("COLOR_BGR2RGB"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"XOR Result"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("plt"),n("span",{class:"token punctuation"},"."),s("show"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])]),_:1})]),_:1}),a[11]||(a[11]=c(`<h2 id="_2-形态学操作" tabindex="-1"><a class="header-anchor" href="#_2-形态学操作"><span>2. 形态学操作</span></a></h2><p>形态学运算是一种基于形状的图像处理技术，它是通过结构元素与图像进行特定运算的方式来改变图像的形态和特征。结构元素是一种小型、预定义的形状，通常是矩形、圆形或者椭圆形，可以与图像中的像素进行匹配。在图像处理中应用广泛，特别是在图像分割、边缘检测、文本识别、计算机视觉等领域中。</p><p>形态学运算包括膨胀、腐蚀、开运算、闭运算等。其中膨胀操作可以将图像中的物体变大，使它更加连通；腐蚀操作则可以将图像中的物体变小，使它更加细化；开运算可以去除噪声，平滑图像的边缘；闭运算可以填补图像中物体的孔洞。</p><h3 id="_2-1-膨胀与腐蚀" tabindex="-1"><a class="header-anchor" href="#_2-1-膨胀与腐蚀"><span>2.1 膨胀与腐蚀</span></a></h3><p><mark>膨胀（dilate）</mark> 通常用于 <strong>填补空洞</strong>，物体内部的小孔洞会被填充；<strong>连接断线</strong>，断裂的线条会被连接起来；<strong>边缘扩张</strong>，让物体的边缘向外扩展。</p><p><mark>腐蚀（erode）</mark> 通常用于 <strong>去除小噪点</strong>，细小的白色噪点会被完全腐蚀掉；<strong>分离粘连物体</strong>，轻微腐蚀可以让轻微粘连的物体分开；<strong>边缘细化</strong>，让物体的边缘向内收缩。</p><p>但也需要注意，过度腐蚀可能会导致 “有用的物体会变小甚至消失”，“纤细的特征（如文字笔画）可能被腐蚀断”，所以要谨慎处理，尤其是要谨慎选择迭代次数。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">cv2<span class="token punctuation">.</span>dilate<span class="token punctuation">(</span>src<span class="token punctuation">,</span> kernel<span class="token punctuation">,</span> dst<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> anchor<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> iterations<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> borderType<span class="token operator">=</span>cv2<span class="token punctuation">.</span>BORDER_CONSTANT<span class="token punctuation">,</span> borderValue<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">cv2<span class="token punctuation">.</span>erode<span class="token punctuation">(</span>src<span class="token punctuation">,</span> kernel<span class="token punctuation">,</span> dst<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> anchor<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> iterations<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> borderType<span class="token operator">=</span>cv2<span class="token punctuation">.</span>BORDER_CONSTANT<span class="token punctuation">,</span> borderValue<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>必须的参数有 2 个，可选参数中有 1 个比较常用：</p><ul><li><strong>src 输入图像</strong>：想要处理的原始图片。</li><li><strong>kernel 结构元素（核）</strong>：形态学操作的&quot;刷子&quot;。默认矩形的话，可以直接用 np 生成一个数组。</li><li><strong>iterations 迭代次数（重要可选）</strong>：执行腐蚀/膨胀的次数，默认=1。</li></ul><p>不怎么重要，通常可以省略的可选参数：<strong>dst</strong> 输出的目标，按位操作中也有。<strong>anchor</strong> 核的锚点位置，默认=(-1, -1)，表示核的中心，几乎永远不需要改。<strong>borderType</strong>、<strong>borderValue</strong> 边界类型与边界值。</p><figure><img src="`+_+'" alt="2.1 Sobel 算子 - 腐蚀与膨胀" tabindex="0" loading="lazy"><figcaption>2.1 Sobel 算子 - 腐蚀与膨胀</figcaption></figure><p>腐蚀是<strong>用核内最小值替换中心像素</strong>，所以它更偏爱黑色，如果绝大部分都是黑色，会把白色都消灭掉。而膨胀是<strong>用核内最大值替换中心像素</strong>，所以他更偏爱白色，消灭黑色会让区域变得更白。</p><p>诶！有点意思，所以如果是黑色背景的白色噪声，腐蚀可以消除，但是反过来如果白色背景里有黑色噪声，腐蚀反而会增大噪声？我们来试试看：</p><figure><img src="'+w+'" alt="2.2 腐蚀性质的探究" tabindex="0" loading="lazy"><figcaption>2.2 腐蚀性质的探究</figcaption></figure>',15)),t(o,null,{default:p(()=>[t(e,{title:"Sobel 算子的腐蚀与膨胀"},{default:p(()=>[...a[4]||(a[4]=[n("div",{class:"language-python line-numbers-mode","data-highlighter":"prismjs","data-ext":"py","data-title":"py"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" cv2")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" numpy "),n("span",{class:"token keyword"},"as"),s(" np")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" matplotlib"),n("span",{class:"token punctuation"},"."),s("pyplot "),n("span",{class:"token keyword"},"as"),s(" plt")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(" title"),n("span",{class:"token punctuation"},","),s(" pos"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("    ax "),n("span",{class:"token operator"},"="),s(" plt"),n("span",{class:"token punctuation"},"."),s("subplot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(" pos"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("imshow"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(" cmap"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"gray"'),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("title"),n("span",{class:"token punctuation"},"("),s("title"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("axis"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'off'"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("img "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("imread"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'01_luna.png'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"# 读取图像")]),s(`
`),n("span",{class:"line"},[s("gradient_x "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("Sobel"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("CV_32F"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("gradient_y "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("Sobel"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("CV_32F"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("gradient_xy "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("convertScaleAbs"),n("span",{class:"token punctuation"},"("),s("cv2"),n("span",{class:"token punctuation"},"."),s("magnitude"),n("span",{class:"token punctuation"},"("),s("gradient_x"),n("span",{class:"token punctuation"},","),s(" gradient_y"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("kernel "),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("ones"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" np"),n("span",{class:"token punctuation"},"."),s("uint8"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"# 创建一个3x3的矩形结构元素")]),s(`
`),n("span",{class:"line"},[s("eroded "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("erode"),n("span",{class:"token punctuation"},"("),s("gradient_xy"),n("span",{class:"token punctuation"},","),s(" kernel"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("dilated "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("dilate"),n("span",{class:"token punctuation"},"("),s("gradient_xy"),n("span",{class:"token punctuation"},","),s(" kernel"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("plt"),n("span",{class:"token punctuation"},"."),s("figure"),n("span",{class:"token punctuation"},"("),s("figsize"),n("span",{class:"token operator"},"="),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"14"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("gradient_xy"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Sobel XY uint8"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("eroded"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Eroded"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("dilated"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Dilated"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("plt"),n("span",{class:"token punctuation"},"."),s("show"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])]),_:1}),t(e,{title:"腐蚀性质的探究"},{default:p(()=>[...a[5]||(a[5]=[n("div",{class:"language-python line-numbers-mode","data-highlighter":"prismjs","data-ext":"py","data-title":"py"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" cv2")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" numpy "),n("span",{class:"token keyword"},"as"),s(" np")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" matplotlib"),n("span",{class:"token punctuation"},"."),s("pyplot "),n("span",{class:"token keyword"},"as"),s(" plt")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(" title"),n("span",{class:"token punctuation"},","),s(" pos"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("    ax "),n("span",{class:"token operator"},"="),s(" plt"),n("span",{class:"token punctuation"},"."),s("subplot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},","),s(" pos"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("imshow"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(" cmap"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"gray"'),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("title"),n("span",{class:"token punctuation"},"("),s("title"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("axis"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'off'"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("img1 "),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("zeros"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"512"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"512"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" dtype"),n("span",{class:"token operator"},"="),s("np"),n("span",{class:"token punctuation"},"."),s("uint8"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("img2 "),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("ones"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"512"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"512"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" dtype"),n("span",{class:"token operator"},"="),s("np"),n("span",{class:"token punctuation"},"."),s("uint8"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# img1 添加盐噪声（白点），img2 添加胡椒噪声（黑点）")]),s(`
`),n("span",{class:"line"},[s("salt_coords "),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("random"),n("span",{class:"token punctuation"},"."),s("randint"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"512"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"500"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("img1"),n("span",{class:"token punctuation"},"["),s("salt_coords"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},":"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(" salt_coords"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},":"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"255")]),s(`
`),n("span",{class:"line"},[s("pepper_coords "),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("random"),n("span",{class:"token punctuation"},"."),s("randint"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"512"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"500"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("img2"),n("span",{class:"token punctuation"},"["),s("pepper_coords"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},":"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(" pepper_coords"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},":"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("kernel "),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("ones"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" np"),n("span",{class:"token punctuation"},"."),s("uint8"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"# 创建一个3x3的矩形结构元素")]),s(`
`),n("span",{class:"line"},[s("eroded1 "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("erode"),n("span",{class:"token punctuation"},"("),s("img1"),n("span",{class:"token punctuation"},","),s(" kernel"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("eroded2 "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("erode"),n("span",{class:"token punctuation"},"("),s("img2"),n("span",{class:"token punctuation"},","),s(" kernel"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("plt"),n("span",{class:"token punctuation"},"."),s("figure"),n("span",{class:"token punctuation"},"("),s("figsize"),n("span",{class:"token operator"},"="),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"14"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" facecolor"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'lightblue'"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("img1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Black Image"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("eroded1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Eroded"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("img2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"White Image"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("eroded2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Eroded"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("plt"),n("span",{class:"token punctuation"},"."),s("show"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])]),_:1})]),_:1}),a[12]||(a[12]=c(`<h3 id="_2-2-形态学的刀与刀法" tabindex="-1"><a class="header-anchor" href="#_2-2-形态学的刀与刀法"><span>2.2 形态学的刀与刀法</span></a></h3><p>腐蚀与膨胀是形态学的基本操作，所以提供了函数接口 erode() 和 dilate()，用于执行单一的操作。<mark>getStructuringElement()</mark> 是 <strong>工具函数</strong>，用于创建形态学操作所需的“刷子”（结构元素）。<mark>morphologyEx()</mark> 是<strong>高级函数</strong>，它在内部调用基础函数，来实现更复杂的形态学操作。简单比喻：</p><ul><li>getStructuringElement() 像是 <strong>造一把刀</strong></li><li>erode() / dilate() 像是 <strong>切</strong> 或 <strong>削</strong> 的基本动作</li><li>morphologyEx() 像是 <strong>一套完整的雕刻技法</strong>（其中包含了切、削等基本动作）</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">cv2<span class="token punctuation">.</span>getStructuringElement<span class="token punctuation">(</span>shape<span class="token punctuation">,</span> ksize<span class="token punctuation">,</span> anchor<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>ksize 通常为（3，3）/（5，5）/（7，7）。结构元素形状（shape）主要有 3 种：</p><ol><li><p><mark>MORPH_RECT：矩形（默认）</mark>。适合方向不敏感的块状、方形物体。比如<strong>车牌识别</strong>时候的字符和背景、<strong>文档处理</strong>时的文字笔画、矩形核能均匀的腐蚀/膨胀。在不确定形状时也用它，相对处理的均匀。</p></li><li><p><mark>MORPH_ELLIPSE：椭圆形</mark>。适合圆形、弧形、无尖锐棱角的物体。血液涂片或者生物样本中的<strong>细胞</strong>、工业检测中的<strong>气泡/液滴</strong>、人的<strong>虹膜</strong>识别、去除白色的圆形小噪声。</p></li><li><p><mark>MORPH_CROSS：十字形</mark>。适合线状、十字交叉状、需要保持对角线特征的物体。<strong>电路板检测</strong>（PCB 板上的导线是线状的）、<strong>指纹处理</strong>（指纹的脊线是曲线，十字核能更好地保持连通性）、<strong>字符细化</strong>（在 OCR 预处理中，十字核可以用于骨架提取而不破坏笔画连接）。</p></li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">cv2<span class="token punctuation">.</span>morphologyEx<span class="token punctuation">(</span>src<span class="token punctuation">,</span> op<span class="token punctuation">,</span> kernel<span class="token punctuation">,</span> dst<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> anchor<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> iterations<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> borderType<span class="token operator">=</span>cv2<span class="token punctuation">.</span>BORDER_CONSTANT<span class="token punctuation">,</span> borderValue<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>morphologyEx()</strong> 高级函数中的参数，几乎和 腐蚀/膨胀 一样。多出来的新参数 op 表示形态学的操作类型，比如：</p><ul><li>腐蚀为 <mark>cv2.MORPH_ERODE</mark>，与 erode() 相同</li><li>膨胀为 <mark>cv2.MORPH_DILATE</mark>，与 dilate() 相同</li><li>形态学梯度为 <mark>cv2.MORPH_GRADIENT</mark>，膨胀图 - 腐蚀图，约等于边缘检测</li></ul><p>这是我们已经接触过的三个操作。剩余的比如，开运算、闭运算、顶帽、黑帽、击中击不中（需二值图），且看后续。</p><h3 id="_2-3-开-闭运算" tabindex="-1"><a class="header-anchor" href="#_2-3-开-闭运算"><span>2.3 开/闭运算</span></a></h3><p><mark>开运算（Opening）</mark> 先执行腐蚀操作，然后使用相同的核进行膨胀。通过这种方式，可以利用腐蚀的特点，消除一些不需要的像素。通过第二步的膨胀，减少腐蚀对主体的影响。op 的名称是 <mark>cv2.MORPH_OPEN</mark>。</p><p>做一个简单的比方，在显微镜下，红细胞应该是独立的圆形细胞，但由于细胞密度大，很多细胞边缘刚好接触在一起，开运算可以断开这些细微的连接点，让计数更准确。</p><figure><img src="`+x+'" alt="2.3 开运算 - 先腐蚀后膨胀" tabindex="0" loading="lazy"><figcaption>2.3 开运算 - 先腐蚀后膨胀</figcaption></figure><p>总结一下，开运算可以用在：<strong>去除 灰度或二值图 中的小噪点</strong>、<strong>分离“细小连接桥”，并保留主体形状</strong>。但是，如果是重叠度比较高的那种连接，它是去除不了的哦。</p><p><mark>闭运算（closing）</mark> 先执行膨胀操作，然后用同样的结构元素进行腐蚀。主要用于<strong>填充物体内部的细小空洞</strong>、<strong>连接邻近的物体</strong>、以及<strong>平滑物体的边界</strong>。op 的名称是 <mark>cv2.MORPH_CLOSE</mark>。</p><p>还是打个比方，在车牌识别中，由于光照或污渍，一个完整的数字或字符可能断裂成了几个部分。闭运算可以将这些距离很近的断点连接起来，使其成为一个完整的连通区域。</p><figure><img src="'+f+'" alt="2.4 闭运算 - 先膨胀后腐蚀" tabindex="0" loading="lazy"><figcaption>2.4 闭运算 - 先膨胀后腐蚀</figcaption></figure><p>可以看到，矩形刷子明显对字母 A 的结构造成了比较大的破坏，椭圆刷子就好了很多。虽然这是因为刷子的面积过大造成的，但是如果真的有这么大的断裂呢？遇到不同的情况需要不同的应对。</p>',19)),t(o,null,{default:p(()=>[t(e,{title:"闭运算代码"},{default:p(()=>[...a[6]||(a[6]=[n("div",{class:"language-python line-numbers-mode","data-highlighter":"prismjs","data-ext":"py","data-title":"py"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" cv2")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" numpy "),n("span",{class:"token keyword"},"as"),s(" np")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" matplotlib"),n("span",{class:"token punctuation"},"."),s("pyplot "),n("span",{class:"token keyword"},"as"),s(" plt")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(" title"),n("span",{class:"token punctuation"},","),s(" pos"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("    ax "),n("span",{class:"token operator"},"="),s(" plt"),n("span",{class:"token punctuation"},"."),s("subplot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(" pos"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("imshow"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(" cmap"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"gray"'),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("title"),n("span",{class:"token punctuation"},"("),s("title"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("axis"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'off'"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# 创建一个带有空洞的字母‘A’的图像")]),s(`
`),n("span",{class:"line"},[s("image "),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("zeros"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"200"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"200"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" dtype"),n("span",{class:"token operator"},"="),s("np"),n("span",{class:"token punctuation"},"."),s("uint8"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("cv2"),n("span",{class:"token punctuation"},"."),s("putText"),n("span",{class:"token punctuation"},"("),s("image"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'A'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"70"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"130"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("FONT_HERSHEY_SIMPLEX"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"255"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("cv2"),n("span",{class:"token punctuation"},"."),s("circle"),n("span",{class:"token punctuation"},"("),s("image"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"98"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"70"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"6"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"# 故意在字母中间挖一个洞")]),s(`
`),n("span",{class:"line"},[s("kernel1 "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("getStructuringElement"),n("span",{class:"token punctuation"},"("),s("cv2"),n("span",{class:"token punctuation"},"."),s("MORPH_RECT"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"13"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"13"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"# 定义矩形核")]),s(`
`),n("span",{class:"line"},[s("kernel2 "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("getStructuringElement"),n("span",{class:"token punctuation"},"("),s("cv2"),n("span",{class:"token punctuation"},"."),s("MORPH_ELLIPSE"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"13"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"13"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"# 定义椭圆核")]),s(`
`),n("span",{class:"line"},[s("closing1 "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("morphologyEx"),n("span",{class:"token punctuation"},"("),s("image"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("MORPH_CLOSE"),n("span",{class:"token punctuation"},","),s(" kernel1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("closing2 "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("morphologyEx"),n("span",{class:"token punctuation"},"("),s("image"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("MORPH_CLOSE"),n("span",{class:"token punctuation"},","),s(" kernel2"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("plt"),n("span",{class:"token punctuation"},"."),s("figure"),n("span",{class:"token punctuation"},"("),s("figsize"),n("span",{class:"token operator"},"="),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"14"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("image"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"The letter A with a hole"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("closing1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Closing OP by Rectangular"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("closing2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Closing OP by Ellipse"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("plt"),n("span",{class:"token punctuation"},"."),s("show"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])]),_:1}),t(e,{title:"开运算代码"},{default:p(()=>[...a[7]||(a[7]=[n("div",{class:"language-python line-numbers-mode","data-highlighter":"prismjs","data-ext":"py","data-title":"py"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" cv2")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" numpy "),n("span",{class:"token keyword"},"as"),s(" np")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" matplotlib"),n("span",{class:"token punctuation"},"."),s("pyplot "),n("span",{class:"token keyword"},"as"),s(" plt")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(" title"),n("span",{class:"token punctuation"},","),s(" pos"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("    ax "),n("span",{class:"token operator"},"="),s(" plt"),n("span",{class:"token punctuation"},"."),s("subplot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(" pos"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("imshow"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(" cmap"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"gray"'),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("title"),n("span",{class:"token punctuation"},"("),s("title"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("axis"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'off'"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# 生成一张有两个红细胞（圆形）+ 一条狭窄连接桥的二值图")]),s(`
`),n("span",{class:"line"},[s("img "),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("zeros"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"300"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"300"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" dtype"),n("span",{class:"token operator"},"="),s("np"),n("span",{class:"token punctuation"},"."),s("uint8"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("cv2"),n("span",{class:"token punctuation"},"."),s("circle"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"90"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"100"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"50"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"255"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("cv2"),n("span",{class:"token punctuation"},"."),s("circle"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"210"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"100"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"50"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"255"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("cv2"),n("span",{class:"token punctuation"},"."),s("rectangle"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"135"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"95"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"165"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"105"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"255"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"# 模拟“细胞粘连桥”")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("kernel1 "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("getStructuringElement"),n("span",{class:"token punctuation"},"("),s("cv2"),n("span",{class:"token punctuation"},"."),s("MORPH_ELLIPSE"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("kernel2 "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("getStructuringElement"),n("span",{class:"token punctuation"},"("),s("cv2"),n("span",{class:"token punctuation"},"."),s("MORPH_ELLIPSE"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"15"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"15"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("opening1 "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("morphologyEx"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("MORPH_OPEN"),n("span",{class:"token punctuation"},","),s(" kernel1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("opening2 "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("morphologyEx"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("MORPH_OPEN"),n("span",{class:"token punctuation"},","),s(" kernel2"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# plt.figure(figsize=(14, 8), facecolor='lightblue')")]),s(`
`),n("span",{class:"line"},[s("plt"),n("span",{class:"token punctuation"},"."),s("figure"),n("span",{class:"token punctuation"},"("),s("figsize"),n("span",{class:"token operator"},"="),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"14"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Small Connecting Bridge"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("opening1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Opening OP by Ellipse 5x5"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("opening2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Opening OP by Ellipse 15x15"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("plt"),n("span",{class:"token punctuation"},"."),s("show"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])]),_:1})]),_:1}),a[13]||(a[13]=c('<h3 id="_2-4-顶帽与低帽-黑帽" tabindex="-1"><a class="header-anchor" href="#_2-4-顶帽与低帽-黑帽"><span>2.4 顶帽与低帽（黑帽）</span></a></h3><p><mark>顶帽（Top-hat）</mark> 是用 <strong>原图 - 开运算图</strong>，提取 “比周围亮、尺寸比结构元小” 的区域，主要用于 <strong>去除非均匀背景、提取亮小物体</strong>。op 的名称为 <mark>cv2.MORPH_TOPHAT</mark>。</p><p><mark>黑帽（Black-hat）</mark> 是用 <strong>闭运算图 - 原图</strong>，提取 “比周围暗、尺寸比结构元小” 的区域，主要用于 <strong>突出暗斑、修正不均匀光照</strong>。op 的名称为 <mark>cv2.MORPH_BLACKHAT</mark>。</p><p>我们想一下，开运算，是把小的亮点去掉了，那么原图减去开运算图，它们的差其实就是被去掉的地方。黑帽也是同理，闭运算图是补全了小的暗洞，那么与原图的差就是小暗洞那一部分。</p><figure><img src="'+O+'" alt="2.5 顶帽运算：原图 - 开运算图" tabindex="0" loading="lazy"><figcaption>2.5 顶帽运算：原图 - 开运算图</figcaption></figure><figure><img src="'+R+'" alt="2.6 黑帽运算：闭运算图 - 原图" tabindex="0" loading="lazy"><figcaption>2.6 黑帽运算：闭运算图 - 原图</figcaption></figure>',6)),t(o,null,{default:p(()=>[t(e,{title:"顶帽运算代码"},{default:p(()=>[...a[8]||(a[8]=[n("div",{class:"language-python line-numbers-mode","data-highlighter":"prismjs","data-ext":"py","data-title":"py"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" cv2")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" numpy "),n("span",{class:"token keyword"},"as"),s(" np")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" matplotlib"),n("span",{class:"token punctuation"},"."),s("pyplot "),n("span",{class:"token keyword"},"as"),s(" plt")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(" title"),n("span",{class:"token punctuation"},","),s(" pos"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("    ax "),n("span",{class:"token operator"},"="),s(" plt"),n("span",{class:"token punctuation"},"."),s("subplot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(" pos"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("imshow"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(" cmap"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"gray"'),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("title"),n("span",{class:"token punctuation"},"("),s("title"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("axis"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'off'"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# 生成一张有两个红细胞（圆形）+ 一条狭窄连接桥的二值图")]),s(`
`),n("span",{class:"line"},[s("img "),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("zeros"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"300"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"300"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" dtype"),n("span",{class:"token operator"},"="),s("np"),n("span",{class:"token punctuation"},"."),s("uint8"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("cv2"),n("span",{class:"token punctuation"},"."),s("circle"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"90"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"100"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"50"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"255"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("cv2"),n("span",{class:"token punctuation"},"."),s("circle"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"210"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"100"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"50"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"255"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("cv2"),n("span",{class:"token punctuation"},"."),s("rectangle"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"135"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"95"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"165"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"105"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"255"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"# 模拟“细胞粘连桥”")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("kernel2 "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("getStructuringElement"),n("span",{class:"token punctuation"},"("),s("cv2"),n("span",{class:"token punctuation"},"."),s("MORPH_ELLIPSE"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"15"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"15"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("opening2 "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("morphologyEx"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("MORPH_OPEN"),n("span",{class:"token punctuation"},","),s(" kernel2"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("tophat "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("morphologyEx"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("MORPH_TOPHAT"),n("span",{class:"token punctuation"},","),s(" kernel2"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# plt.figure(figsize=(14, 8), facecolor='lightblue')")]),s(`
`),n("span",{class:"line"},[s("plt"),n("span",{class:"token punctuation"},"."),s("figure"),n("span",{class:"token punctuation"},"("),s("figsize"),n("span",{class:"token operator"},"="),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"14"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Small Connecting Bridge"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("opening2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Opening OP by Ellipse 15x15"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("tophat"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Top-hat OP by Ellipse 15x15"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("plt"),n("span",{class:"token punctuation"},"."),s("show"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])]),_:1}),t(e,{title:"黑帽运算代码"},{default:p(()=>[...a[9]||(a[9]=[n("div",{class:"language-python line-numbers-mode","data-highlighter":"prismjs","data-ext":"py","data-title":"py"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" cv2")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" numpy "),n("span",{class:"token keyword"},"as"),s(" np")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" matplotlib"),n("span",{class:"token punctuation"},"."),s("pyplot "),n("span",{class:"token keyword"},"as"),s(" plt")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(" title"),n("span",{class:"token punctuation"},","),s(" pos"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("    ax "),n("span",{class:"token operator"},"="),s(" plt"),n("span",{class:"token punctuation"},"."),s("subplot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(" pos"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("imshow"),n("span",{class:"token punctuation"},"("),s("img"),n("span",{class:"token punctuation"},","),s(" cmap"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"gray"'),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("title"),n("span",{class:"token punctuation"},"("),s("title"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    plt"),n("span",{class:"token punctuation"},"."),s("axis"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'off'"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# 创建一个带有空洞的字母‘A’的图像")]),s(`
`),n("span",{class:"line"},[s("image "),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("zeros"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"200"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"200"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" dtype"),n("span",{class:"token operator"},"="),s("np"),n("span",{class:"token punctuation"},"."),s("uint8"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("cv2"),n("span",{class:"token punctuation"},"."),s("putText"),n("span",{class:"token punctuation"},"("),s("image"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'A'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"70"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"130"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("FONT_HERSHEY_SIMPLEX"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"255"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("cv2"),n("span",{class:"token punctuation"},"."),s("circle"),n("span",{class:"token punctuation"},"("),s("image"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"98"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"70"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"6"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"# 故意在字母中间挖一个洞")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("kernel2 "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("getStructuringElement"),n("span",{class:"token punctuation"},"("),s("cv2"),n("span",{class:"token punctuation"},"."),s("MORPH_ELLIPSE"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"13"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"13"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"# 定义椭圆核")]),s(`
`),n("span",{class:"line"},[s("closing2 "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("morphologyEx"),n("span",{class:"token punctuation"},"("),s("image"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("MORPH_CLOSE"),n("span",{class:"token punctuation"},","),s(" kernel2"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("blackhat "),n("span",{class:"token operator"},"="),s(" cv2"),n("span",{class:"token punctuation"},"."),s("morphologyEx"),n("span",{class:"token punctuation"},"("),s("image"),n("span",{class:"token punctuation"},","),s(" cv2"),n("span",{class:"token punctuation"},"."),s("MORPH_BLACKHAT"),n("span",{class:"token punctuation"},","),s(" kernel2"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("plt"),n("span",{class:"token punctuation"},"."),s("figure"),n("span",{class:"token punctuation"},"("),s("figsize"),n("span",{class:"token operator"},"="),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"14"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("image"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"The letter A with a hole"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("closing2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Closing OP by Ellipse 13x13"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("show_img_by_plt"),n("span",{class:"token punctuation"},"("),s("blackhat"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Black-hat OP by Ellipse 13x13"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("plt"),n("span",{class:"token punctuation"},"."),s("show"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])]),_:1})]),_:1}),a[14]||(a[14]=c(`<h3 id="_2-5-击中-击不中变换" tabindex="-1"><a class="header-anchor" href="#_2-5-击中-击不中变换"><span>2.5 击中-击不中变换</span></a></h3><p><mark>击中-击不中变换（Hit-or-Miss Transform）</mark> 在经典的数学形态学中是一个核心但不常用（在深度学习出现以前比较重要）的操作，主要用于检测特定形状模式。在二值图像 A 中，给定一个结构元 B，击中-击不中变换定义为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mo>⊛</mo><mi>B</mi><mo>=</mo><mo stretchy="false">(</mo><mi>A</mi><mo>⊝</mo><msub><mi>B</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msup><mi>A</mi><mi>c</mi></msup><mo>⊝</mo><msub><mi>B</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">A\\circledast{B}=(A\\circleddash{B_{1}})(A^{c}\\circleddash{B_{2}}) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7653em;vertical-align:-0.082em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin amsrm">⊛</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin amsrm">⊝</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin amsrm">⊝</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>B</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>B</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">B=(B_{1},B_{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">B_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 要求必须命中（hit）的前景位置，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">B_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 要求必须不命中（miss）的背景位置。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mi>c</mi></msup></mrow><annotation encoding="application/x-tex">A^{c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span></span></span></span> 表示图像的补集（0 与 1 的翻转）。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊝</mo></mrow><annotation encoding="application/x-tex">\\circleddash</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664em;vertical-align:-0.082em;"></span><span class="mord amsrm">⊝</span></span></span></span> 表示形态学腐蚀。最终输出是一个二值图，仅在 “完全匹配指定形状” 处为 1。</p><p>可以理解为早期的<strong>匹配模板</strong>，只有当 “图像局部形状” 完全符合结构元定义的 “前景+背景” 模式时，才算“击中”。做一个小实验，在 10x10 的黑色像素图像中，给两个白色的点，再给一个白色的线段，我们将结构元定义为像素点检测的形式，测试一下：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> cv2</span>
<span class="line"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</span>
<span class="line"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">show_img_by_plt</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> title<span class="token punctuation">,</span> pos<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> pos<span class="token punctuation">)</span></span>
<span class="line">    plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">&quot;gray&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span>title<span class="token punctuation">)</span></span>
<span class="line">    plt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token string">&#39;off&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 创建测试图：孤立点 + 连续线</span></span>
<span class="line">img <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span></span>
<span class="line">img<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line">img<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">:</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line">img<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 定义结构元：中心必须是 1，四周必须是 -1。执行击中-击不中变换</span></span>
<span class="line">kernel <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                   <span class="token punctuation">[</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                   <span class="token punctuation">[</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>int8<span class="token punctuation">)</span></span>
<span class="line">hitmiss <span class="token operator">=</span> cv2<span class="token punctuation">.</span>morphologyEx<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>MORPH_HITMISS<span class="token punctuation">,</span> kernel<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">show_img_by_plt<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token string">&quot;Image with Point and Line 10x10&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">show_img_by_plt<span class="token punctuation">(</span>kernel<span class="token punctuation">,</span> <span class="token string">&quot;Hit-or-Miss Point Kernel 3x3&quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">show_img_by_plt<span class="token punctuation">(</span>hitmiss<span class="token punctuation">,</span> <span class="token string">&quot;Hit-or-Miss Result 10x10&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+C+`" alt="2.7 击中-击不中变换" tabindex="0" loading="lazy"><figcaption>2.7 击中-击不中变换</figcaption></figure><p>可以看到，已经成功匹配到了两个孤立的白色像素，去掉了线段。这里有一个小坑需要注意，这个方法的图像，要求是 <strong>严格的二值图像</strong>，前景为 1 或者 255，背景为 0。</p><p>但是在结构元 kernel 中，取值却有三种语义。1 表示 hit，-1 表示 miss，而 0 表示不关心、无关的内容。所以，如果我们把 kernel 周围的值从 -1 变成 0，实际执行的只是 “前景命中检测”，没有背景约束。这样的话线段也会被匹配到，可以尝试一下：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">kernel <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                   <span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                   <span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>int8<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10))])}const M=i(z,[["render",B]]),S=JSON.parse('{"path":"/blogs/ComputerVision/ImageProcessing/OpenCV1/05_xingtaixueyuyunsuan.html","title":"05-形态学与运算","lang":"en-US","frontmatter":{"title":"05-形态学与运算","date":"2025/10/16","categories":["OpenCV"],"tags":["图像处理","形态学与运算"]},"headers":[{"level":2,"title":"1. 运算类操作","slug":"_1-运算类操作","link":"#_1-运算类操作","children":[{"level":3,"title":"1.1 饱和运算","slug":"_1-1-饱和运算","link":"#_1-1-饱和运算","children":[]},{"level":3,"title":"1.2 图像加减法","slug":"_1-2-图像加减法","link":"#_1-2-图像加减法","children":[]},{"level":3,"title":"1.3 图像混合","slug":"_1-3-图像混合","link":"#_1-3-图像混合","children":[]},{"level":3,"title":"1.4 按位运算","slug":"_1-4-按位运算","link":"#_1-4-按位运算","children":[]}]},{"level":2,"title":"2. 形态学操作","slug":"_2-形态学操作","link":"#_2-形态学操作","children":[{"level":3,"title":"2.1 膨胀与腐蚀","slug":"_2-1-膨胀与腐蚀","link":"#_2-1-膨胀与腐蚀","children":[]},{"level":3,"title":"2.2 形态学的刀与刀法","slug":"_2-2-形态学的刀与刀法","link":"#_2-2-形态学的刀与刀法","children":[]},{"level":3,"title":"2.3 开/闭运算","slug":"_2-3-开-闭运算","link":"#_2-3-开-闭运算","children":[]},{"level":3,"title":"2.4 顶帽与低帽（黑帽）","slug":"_2-4-顶帽与低帽-黑帽","link":"#_2-4-顶帽与低帽-黑帽","children":[]},{"level":3,"title":"2.5 击中-击不中变换","slug":"_2-5-击中-击不中变换","link":"#_2-5-击中-击不中变换","children":[]}]}],"git":{"createdTime":1760416648000,"updatedTime":1760416648000,"contributors":[{"name":"zjk","email":"1213860588@qq.com","commits":1}]},"filePathRelative":"blogs/ComputerVision/ImageProcessing/OpenCV1/05_形态学与运算.md"}');export{M as comp,S as data};
