import{_ as r,c as l,a as t,o as i}from"./app-knK7nh4Q.js";const s={};function a(n,e){return i(),l("div",null,e[0]||(e[0]=[t(`<h2 id="_2025-年日志" tabindex="-1"><a class="header-anchor" href="#_2025-年日志"><span>2025 年日志</span></a></h2><h3 id="_2025-年-9-月中旬" tabindex="-1"><a class="header-anchor" href="#_2025-年-9-月中旬"><span>2025 年 9 月中旬</span></a></h3><ul><li>更新完善了《图像处理》中的 “噪声与滤波” 章节。</li><li>创建并更新了《每日一题》，取自牛客网刷题的 AI 篇。</li><li>对迁移过来的旧博客重新进行了整理和分类。</li></ul><ol><li><strong>删除了 @vuepress/plugin-markdown-tab</strong>：reco 有为数不多的自定义 Markdown 扩展，叫做 “自定义容器”，代码有选项卡格式，并且兼容自身主题颜色变换。</li><li><strong>自定义了 generateChildren() 插件</strong>：在 .vuepress/plugins/seriesTool.ts 文件中，用于自动获取文件夹路径下的所有 md 文件，返回一个 List，属于侧边栏写法的优化。Reco 自带的 <mark>autoSetSeries: true</mark> 并不是特别好用，并且只能作用于 series 路径下的文件夹和文件，而自定义的函数，任何路径都可以识别并匹配。</li><li><strong>开启了 lastUpdatedText 功能</strong>：和我想的并不一样，它的最后更新时间是通过最后一次提交 git 所记录的，并非最后一次 markdown 文件的修改时间，导致很多文件的最后一次修改时间完全一致。<mark>打一个 Tag，后期优化。</mark></li></ol><h3 id="_2025-年-9-月上旬" tabindex="-1"><a class="header-anchor" href="#_2025-年-9-月上旬"><span>2025 年 9 月上旬</span></a></h3><ul><li>更新完善了《图像处理》中的 “基础操作” 章节。</li><li>迁移了旧博客的所有内容。</li></ul><ol><li><strong>markdown-it-katex 替换为 @vuepress/plugin-markdown-math</strong></li><li><strong>markdown-it-imsize 替换为 @vuepress/plugin-markdown-image</strong>：兼顾原有功能，并且还有 显示图像标题、懒加载、图像缩放 三个拓展功能。</li><li><strong>删除了 markdown-it-attrs</strong>：在启用图像标题功能时，img 标签外构造了新的容器 &lt;figure&gt; 导致 attrs 插件失效，因此删除了该插件，直接在全局 CSS 文件中，通过 &quot;figure img&quot; 标签选择器实现单图居中。</li><li><strong>引入了 @vuepress/plugin-markdown-tab</strong>：可以在 md 内部构造标签页，包括代码块也可以覆盖。<mark>但是标签页与代码块出现了空行分离的情况，并且并不能随主题进行颜色切换。</mark></li></ol><p>目前 vuepress-reco 与 vuepress 的对应关系是：&quot;2.0.0-rc.26&quot; 与 &quot;2.0.0-rc.19&quot;，而 vuepress2.x 版本（包括插件版本）已经到了 &quot;2.0.0-rc.112&quot;，因此在直接运行指令下载时通常会遇到报错，需要加上这两句指令：</p><ol><li>--legacy-peer-deps：忽略 peer 依赖冲突</li><li>--force：强制安装</li></ol><p>同时，为了兼容版本对应关系，我去查询了 github 的更新日志，70 到 78 的插件版本号都能用。但踩坑的点来了，我取了个 72 的版本号，好听，结果 npm 中唯独缺了 72 这个版本没有，最后下载了使用人数最多了 74 版本。</p><div class="language-cmd line-numbers-mode" data-highlighter="prismjs" data-ext="cmd" data-title="cmd"><pre><code><span class="line">npm install -D @vuepress/plugin-markdown-math@^2.0.0-rc.74 --legacy-peer-deps --force</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>最后，尝试使用了对应版本和最新版本的 shiki（代码块自定义）、medium-zoom（图像缩略图），都有一些异常，使用失败。</p><h3 id="_2025-年-8-月下旬" tabindex="-1"><a class="header-anchor" href="#_2025-年-8-月下旬"><span>2025 年 8 月下旬</span></a></h3><ul><li>从旧博客迁移了《图像处理》的内容，并更新重写了 “综述” 章节。</li></ul><p>由于 Reco 的官方文档写的不够清晰，在解决数学符号解析、图像缩放等问题中，手动引入了 markdown-it 的四个插件。现在基于 Vuepress-V2 的三个主题架构，基本都用的是 TS 的文件格式，但 markdown-it 官方没有 TS 的版本（只有 JS），因此自己写了 .d.ts 文件进行了声明：</p><ol><li><strong>markdown-it-attrs</strong>：css 布局选择器嵌入，用来对单个图像居中处理。</li><li><strong>markdown-it-mark</strong>：代码黄色高亮</li><li><strong>markdown-it-katex</strong>：数学公式与符号的解析</li><li><strong>markdown-it-imsize</strong>：在 md 的图像输入方法中使用 “=360x”</li></ol><p>多个图像的 flex 布局，在旧博客中使用了媒体查询进行了横屏竖屏分割处理，但是写在每一个 md 文件中的，过于冗余。已通过全局 CSS 文件（styles/index.css）进行了复用。</p>`,17)]))}const d=r(s,[["render",a]]),p=JSON.parse('{"path":"/docs/update_record.html","title":"博客更新日志（内容/插件/踩坑）","lang":"en-US","frontmatter":{"title":"博客更新日志（内容/插件/踩坑）","date":"2025/09/17"},"headers":[{"level":2,"title":"2025 年日志","slug":"_2025-年日志","link":"#_2025-年日志","children":[{"level":3,"title":"2025 年 9 月中旬","slug":"_2025-年-9-月中旬","link":"#_2025-年-9-月中旬","children":[]},{"level":3,"title":"2025 年 9 月上旬","slug":"_2025-年-9-月上旬","link":"#_2025-年-9-月上旬","children":[]},{"level":3,"title":"2025 年 8 月下旬","slug":"_2025-年-8-月下旬","link":"#_2025-年-8-月下旬","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"filePathRelative":"docs/update_record.md"}');export{d as comp,p as data};
