import{_ as a,c as n,a as i,o as t}from"./app-P8O63--9.js";const r="/blog-vp-reco/cv/ImageGeneration/01_xxx/01_inpainting.png",o="/blog-vp-reco/cv/ImageGeneration/01_xxx/02_teaser.webp",l="/blog-vp-reco/cv/ImageGeneration/01_xxx/03_denoise.png",s="/blog-vp-reco/cv/ImageGeneration/01_xxx/04_deblurring.jpeg",g="/blog-vp-reco/cv/ImageGeneration/01_xxx/05_sr.jpg",p="/blog-vp-reco/cv/ImageGeneration/01_xxx/06_style_transfer.jpg",d="/blog-vp-reco/cv/ImageGeneration/01_xxx/07_i2i_translation.jpg",c={};function _(h,e){return t(),n("div",null,[...e[0]||(e[0]=[i('<p><strong>图像生成（Image Generation）</strong> 是计算机视觉与人工智能中的核心任务之一，旨在让机器<mark>从数据分布中</mark>学习视觉世界的规律，并能够生成符合这些规律的、具有逼真感与语义合理性的图像。它的核心要点有三层：</p><ol><li><p><strong>分布学习</strong>：图像生成并不是“凭空画图”，而是通过模型学习训练数据的统计分布。如今大多数的生成模型，从数学的角度上来看，都是概率与统计模型。模型在采样时，等价于“从学到的分布中抽取新的样本”。</p></li><li><p><strong>生成方式</strong>：可以是 <mark>无条件生成</mark>（仅依赖模型权重，随机噪声/隐变量等，采样得到图像）。也可以是 <mark>有条件生成</mark>（在文本、标签、图像等条件引导下生成）。</p></li><li><p><strong>目标</strong>：生成图像在 视觉质量（fidelity） 和 多样性（diversity） 上要与真实图像相当。同时逐步发展出 可控性（controllability） 和 跨模态性（cross-modality） 的能力，例如“文生图”、“图像编辑”。</p></li></ol><p>对于不同的业务领域，图像生成还有很多的子任务划分，大致可以分类为以下几种：</p><h2 id="_1-图像修复与复原" tabindex="-1"><a class="header-anchor" href="#_1-图像修复与复原"><span>1. 图像修复与复原</span></a></h2><h3 id="_1-1-图像修复" tabindex="-1"><a class="header-anchor" href="#_1-1-图像修复"><span>1.1 图像修复</span></a></h3><p><mark>图像修复（Image Inpainting）</mark> 并不是我们广义上理解的，所有缺陷都可以修复的。一般都是指 <strong>基于 Mask 的内容补全</strong>，不论这个图像是不是真的有残缺破损的内容缺失，我们都把需要修复的部分盖上一个 mask，当作这一部分缺失了，然后让模型进行推测和补全，这就是 Inpainting。</p><figure><img src="'+r+'" alt="1.1 Inpainting 案例 - Latent Diffusion Model" width="560" tabindex="0" loading="lazy"><figcaption>1.1 Inpainting 案例 - Latent Diffusion Model</figcaption></figure><p>我在制作我的数据集和读论文的过程中，发现还有一小类是归属于 Inpainting 范畴的，它是 <mark>色彩还原</mark>。这个部分是说图像的纹理和结构都是完整的清晰的，但是出现了褪色、染色、发霉等情况，需要对色彩、亮度、对比度进行恢复或统一。</p><p>比如老照片的褪色修复，黑白图像上色（Colorization），色彩迁移这些。另外，去水印目前的技术一般都是基于 mask 的修复，但是我觉得有一类水印是可以归于色彩矫正的，<strong>透明水印</strong>。它只是文字或者 Logo 的周围有极小的阴影扰动，底层的纹理还是清晰可见的，但目前我并没有发现通过色彩校正的方式来消除透明水印的论文或方法。</p><figure><img src="'+o+'" alt="1.2 Colorization 案例 - DDColor Model" width="560" tabindex="0" loading="lazy"><figcaption>1.2 Colorization 案例 - DDColor Model</figcaption></figure><h3 id="_1-2-图像复原" tabindex="-1"><a class="header-anchor" href="#_1-2-图像复原"><span>1.2 图像复原</span></a></h3><p><mark>图像复原/重建（Image Restoration）</mark> 是一个更大范围的词，有的综述里把 Inpainting 也归于复原当中，但这里我们只说 <strong>去噪、去模糊、超分辨率</strong>。</p><p>关于<mark>去噪（Denoising）</mark>，我在《图像处理》中已经讲过噪声的来源，它的目的是移除这些噪声的同时，保持原始图像的纹理细节。传统方法多依赖滤波或稀疏表示，而深度学习方法则通过学习大规模数据分布，能够更好地在“去除噪声”与“保留细节”之间取得平衡。</p><figure><img src="'+l+'" alt="1.3 Denoising 案例 - noise2noise Model" width="560" tabindex="0" loading="lazy"><figcaption>1.3 Denoising 案例 - noise2noise Model</figcaption></figure><p><strong>模糊图像</strong>常来源于运动（如相机抖动、物体快速移动）或光学散焦，导致图像丢失高频细节。<mark>去模糊（Deblurring）</mark> 的目标是反卷积并恢复清晰的结构信息。早期方法基于物理模型估计模糊核，而现代深度模型则通过端到端学习完成去模糊，能够生成更自然、锐利的图像。</p><figure><img src="'+s+'" alt="1.4 Deblurring 案例 - DeblurDiNAT Model" width="560" tabindex="0" loading="lazy"><figcaption>1.4 Deblurring 案例 - DeblurDiNAT Model</figcaption></figure><p><mark>超分辨率（Super-Resolution, SR）</mark> 旨在将低分辨率图像恢复为高分辨率图像。它不仅要求增加像素数量，还需要生成合理的细节与纹理。OpenCV 中的 Resize 是通过数学插值的方法来猜测出更多的像素，本质上没办法创造出丢失的细节，所以放大后的图像看起来模糊，缺乏高频细节。近年来基于深度学习的方法（如 SRCNN、ESRGAN）在自然图像、医学影像和卫星遥感中均取得了显著突破。</p><figure><img src="'+g+'" alt="1.5 Super-Resolution 案例 - Real-ESRGAN Model" width="560" tabindex="0" loading="lazy"><figcaption>1.5 Super-Resolution 案例 - Real-ESRGAN Model</figcaption></figure><h2 id="_2-图像风格与域转换" tabindex="-1"><a class="header-anchor" href="#_2-图像风格与域转换"><span>2. 图像风格与域转换</span></a></h2><h3 id="_2-1-图像风格迁移" tabindex="-1"><a class="header-anchor" href="#_2-1-图像风格迁移"><span>2.1 图像风格迁移</span></a></h3><p><mark>图像风格迁移（Style Transfer）</mark> 是指在保持原始图像内容和结构的前提下，将另一幅图像的艺术风格或视觉效果迁移过来。重点在于：<strong>内容保持一致 → 风格发生改变。</strong></p><p>最早的代表是 神经风格迁移（Neural Style Transfer, 2016），通过 CNN 的特征分离，保留“内容特征”，替换“风格特征”。后续工作逐渐扩展到 快速风格迁移（Fast Style Transfer）、任意风格迁移（Arbitrary Style Transfer），甚至是 高分辨率 / 视频风格迁移。</p><p>近年来，Diffusion 与生成模型的发展，使得风格迁移不再局限于“梵高画风 → 照片”，而是可以在 色彩、纹理、光照、甚至领域（domain） 上进行灵活迁移，例如“照片转油画”、“卡通化”、“低光增强+风格化”。</p><figure><img src="'+p+'" alt="2.1 Style Transfer 案例 - visual-concept-translator Model" width="560" tabindex="0" loading="lazy"><figcaption>2.1 Style Transfer 案例 - visual-concept-translator Model</figcaption></figure><h3 id="_2-2-图像翻译" tabindex="-1"><a class="header-anchor" href="#_2-2-图像翻译"><span>2.2 图像翻译</span></a></h3><p><mark>图像翻译（I2I Translation）</mark> 与风格迁移密切相关，但目标更广泛。它指的是<strong>将一张输入图像转换为另一种表现形式，不仅仅是风格变化，还包括语义、域、模态的跨域转换</strong>。典型例子包括：“素描 → 照片”、“标签图 → 场景”、“马 ↔ 斑马”、“夏天 ↔ 冬天”。</p><p>随着扩散模型和注意力机制的发展，近年 I2I 可以做到更高层次的<strong>可控生成</strong>。比如：条件引导（文本 + 图像），实现 文本驱动的图像翻译；保持输入图像结构，改变域或属性，例如“白天 → 夜晚”、“真实人像 → 动漫人物”。</p><figure><img src="'+d+'" alt="2.2 I2I Translation 案例 - CycleGAN Model" width="560" tabindex="0" loading="lazy"><figcaption>2.2 I2I Translation 案例 - CycleGAN Model</figcaption></figure><p>风格迁移任务和翻译任务之间，对比下来可以这么理解：<strong>风格迁移</strong>是 I2I 的一个特殊子任务（内容不变，风格变）。<strong>图像翻译</strong>则涵盖了更多变化，比如 语义域改变、结构迁移、模态切换。</p><p>补充说明：I2I 是 Image-to-Image 的缩写，表示图像到图像任务，之前说的图像的修复与复原，包括现在的风格迁移与翻译，大多数的模型都是 I2I 任务，有少部分比较新的模型，会涉及多模态领域，会有 <strong>文本到图像（Text-to-Image）</strong> 与 <strong>图像到文本（Image-to-text）</strong> --&gt; T2I、I2T 这样的缩写词。</p><h2 id="_3-多模态-图文交融" tabindex="-1"><a class="header-anchor" href="#_3-多模态-图文交融"><span>3. 多模态（图文交融）</span></a></h2><h3 id="_3-1-文本到图像" tabindex="-1"><a class="header-anchor" href="#_3-1-文本到图像"><span>3.1 文本到图像</span></a></h3><p>AIGC 核心：Stable Diffusion、DALL·E、Imagen</p><p>可扩展到 跨模态生成：Prompt + 图像 → 新图像</p><h3 id="_3-2-图像字幕-i2t" tabindex="-1"><a class="header-anchor" href="#_3-2-图像字幕-i2t"><span>3.2 图像字幕（I2T）</span></a></h3><p>图像字幕（Image Captioning）</p><h3 id="_3-3-图像叙事-i2t" tabindex="-1"><a class="header-anchor" href="#_3-3-图像叙事-i2t"><span>3.3 图像叙事（I2T）</span></a></h3><p>图像叙事（Image StoryTelling）</p><h2 id="_4-视频生成相关" tabindex="-1"><a class="header-anchor" href="#_4-视频生成相关"><span>4. 视频生成相关</span></a></h2><p>视频预测（给几帧生成未来帧）</p><p>文本到视频（Text-to-Video）</p><h2 id="_5-3d-领域" tabindex="-1"><a class="header-anchor" href="#_5-3d-领域"><span>5. 3D 领域</span></a></h2><p>文本/图像 → 3D 场景（NeRF、DreamFusion）</p>',43)])])}const f=a(c,[["render",_]]),u=JSON.parse('{"path":"/blogs/ComputerVision/ImageGeneration/01_zongshu.html","title":"图像生成综述","lang":"en-US","frontmatter":{"title":"图像生成综述","date":"2025/09/21","categories":["计算机视觉"],"tags":["图像生成","综述"]},"headers":[{"level":2,"title":"1. 图像修复与复原","slug":"_1-图像修复与复原","link":"#_1-图像修复与复原","children":[{"level":3,"title":"1.1 图像修复","slug":"_1-1-图像修复","link":"#_1-1-图像修复","children":[]},{"level":3,"title":"1.2 图像复原","slug":"_1-2-图像复原","link":"#_1-2-图像复原","children":[]}]},{"level":2,"title":"2. 图像风格与域转换","slug":"_2-图像风格与域转换","link":"#_2-图像风格与域转换","children":[{"level":3,"title":"2.1 图像风格迁移","slug":"_2-1-图像风格迁移","link":"#_2-1-图像风格迁移","children":[]},{"level":3,"title":"2.2 图像翻译","slug":"_2-2-图像翻译","link":"#_2-2-图像翻译","children":[]}]},{"level":2,"title":"3. 多模态（图文交融）","slug":"_3-多模态-图文交融","link":"#_3-多模态-图文交融","children":[{"level":3,"title":"3.1 文本到图像","slug":"_3-1-文本到图像","link":"#_3-1-文本到图像","children":[]},{"level":3,"title":"3.2 图像字幕（I2T）","slug":"_3-2-图像字幕-i2t","link":"#_3-2-图像字幕-i2t","children":[]},{"level":3,"title":"3.3 图像叙事（I2T）","slug":"_3-3-图像叙事-i2t","link":"#_3-3-图像叙事-i2t","children":[]}]},{"level":2,"title":"4. 视频生成相关","slug":"_4-视频生成相关","link":"#_4-视频生成相关","children":[]},{"level":2,"title":"5. 3D 领域","slug":"_5-3d-领域","link":"#_5-3d-领域","children":[]}],"git":{"createdTime":1757688790000,"updatedTime":1758386370000,"contributors":[{"name":"zjk","email":"1213860588@qq.com","commits":1}]},"filePathRelative":"blogs/ComputerVision/ImageGeneration/01_综述.md"}');export{f as comp,u as data};
