import{_ as l,c as o,a as e,b as s,d as p,e as t,r as i,o as c}from"./app-CkYqgEgS.js";const u="/blog-vp-reco/cv/ImageProcessing/07_xxx/01_video1.png",r="/blog-vp-reco/cv/ImageProcessing/07_xxx/01_video2.png",d={},k={href:"https://www.earthcam.com/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://explore.org/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.dot.nv.gov/travel-info/road-conditions/traffic-cameras",target:"_blank",rel:"noopener noreferrer"},b={href:"https://weathercams.faa.gov/map/-179.30371,23.35029,-56.69629,71.75605",target:"_blank",rel:"noopener noreferrer"};function g(h,n){const a=i("ExternalLinkIcon");return c(),o("div",null,[n[4]||(n[4]=e(`<h2 id="_1-相机画面处理" tabindex="-1"><a class="header-anchor" href="#_1-相机画面处理"><span>1. 相机画面处理</span></a></h2><p>捕捉实时的摄像头/相机画面是有很多实际应用的，比如日常生活中的车库停车的车牌识别、交通摄像头的违规车辆识别、远程考试的监控等等。</p><h3 id="_1-1-读取相机画面" tabindex="-1"><a class="header-anchor" href="#_1-1-读取相机画面"><span>1.1 读取相机画面</span></a></h3><p>在 OpenCV 中，使用 <mark>cv2.VideoCapture()</mark> 函数来获取一个视频载体的对象，不管是图像序列、视频文件还是相机，都用它。它所必需的参数是 index_camera，表示要读取的相机的索引。如果有一个摄像头连接到计算机，它的索引为 0，如果有第二个，可以通过传递参数 1 的方式来选择它，依次类推。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> cv2</span>
<span class="line"></span>
<span class="line">capture <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们在实际运行的过程中，要检查连接是否正常啊，如果不正常也是需要返回信息给使用者的。<mark>.isOpened()</mark> 方法返回一个布尔值，如果可以建立连接，返回 True；如果不行，返回 False。我们可以通过这个方法做一个检测：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">if</span> capture<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">is</span> <span class="token boolean">False</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Error opening the camera&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>有了视频载体，也要有画面对吧？我记得上初中的时候老师说过，当人眼一秒钟看 24 张连续的图片的时候，它就是视频，因为我们分辨不出来。现在手机所说的高刷新率，比如苹果 17 的 120hz，就是一秒钟屏幕刷新的次数为 120 次。</p><p>我们把每一张图片叫做 1 帧画面，同样，在相机中捕获的视频流也是通过 <strong>每一帧的画面</strong> 进行读取的。通过 <mark>.read()</mark> 方法从视频载体中获取帧画面，它同时还会返回一个布尔值，表示是否已从 capture 对象中正确的读取到帧。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">while</span> capture<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 因为是逐帧获取画面，所以需要用循环，不间断的获取</span></span>
<span class="line">    ret<span class="token punctuation">,</span> frame <span class="token operator">=</span> capture<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> ret <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token comment"># 使用 imshow 显示捕获的帧画面</span></span>
<span class="line">        cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&quot;real time vidio from camera&quot;</span><span class="token punctuation">,</span> frame<span class="token punctuation">)</span></span>
<span class="line">        <span class="token comment"># 对捕获的帧画面（图像）可以进行处理，比如转为灰度图</span></span>
<span class="line">        gray_frame <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>frame<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span></span>
<span class="line">        cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&quot;Grayscale vidio from camera&quot;</span><span class="token punctuation">,</span> frame<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每 1 帧图像都可以对其处理，但需要注意的是，处理图像是需要消耗算力资源与时间的，越复杂消耗的时间越长，在实时的镜头中，比如腾讯会议，会出现卡顿、掉帧的情况，所以<mark>在实时的视频流处理中，尽可能地选择轻量的处理方式</mark>。</p><p>在 imshow() 的 GUI 中，我们可以直接点击关闭按钮退出程序。也可以自定义键盘事件来进行处理：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">    <span class="token keyword">if</span> ret <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line">        <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&quot;q&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">break</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 释放视频载体对象，并销毁创建的窗口</span></span>
<span class="line">capture<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-扩展-自定义按键退出" tabindex="-1"><a class="header-anchor" href="#_1-2-扩展-自定义按键退出"><span>1.2 扩展：自定义按键退出</span></a></h3><p><mark>cv2.waitKey()</mark> 是 OpenCV 用来等待键盘事件的函数。本质上咱直接写一个 cv2.waitKey(0)，随便按一下键盘，它就退出了。但是这样很容易出现问题，比如误触了，关键时刻就很难受。所以，我们来解析一下键盘事件的条件判断：</p><table><thead><tr><th>字符</th><th>十进制 ASCII</th><th>十六进制</th><th>二进制（8 位）</th></tr></thead><tbody><tr><td>&#39;q&#39;</td><td>113</td><td>0x71</td><td>01110001</td></tr></tbody></table><p><strong>ord(&#39;q&#39;)</strong> 返回 q 字符对应的 8 位 ASCII 值，这个很好理解，就是上述表格的最后。但是 <strong>cv2.waitKey()</strong> 获取的 q 键的值，是随系统发生变化的：</p><table><thead><tr><th>操作系统</th><th>&quot;Q&quot; 的十进制 ASCII</th><th>十六进制</th><th>二进制（16 位）</th></tr></thead><tbody><tr><td>Windows</td><td>113</td><td>0x0071</td><td>00000000 01110001</td></tr><tr><td>Linux</td><td>65393</td><td>0xFF71</td><td>11111111 01110001</td></tr><tr><td>macOS</td><td>113</td><td>0x0071</td><td>00000000 01110001</td></tr></tbody></table><p>可以看到，如果是在 Linux 系统上，直接进行条件判断，就会报错。我们需要通过和 0xFF 的按位与（&amp;）操作，将 16 位键码，压缩成 8 位的 ASCII 码，它是怎么做的呢？：</p><div class="language-note line-numbers-mode" data-highlighter="prismjs" data-ext="note" data-title="note"><pre><code><span class="line">0xFF71 = 11111111 01110001</span>
<span class="line">0x00FF = 00000000 11111111</span>
<span class="line">---------------------------</span>
<span class="line">结果 = 00000000 01110001 = 0x71 = 113</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从计算可以看出，0xFF 的按位与，可以把高 8 位二进制数值消除掉，而低 8 位二进制最大为 256，键盘上没有什么值是比 256 更大的了，所以对于任何键盘值，我们都以用这种方式来自定义按键退出程序。</p><h3 id="_1-3-实时画面的属性" tabindex="-1"><a class="header-anchor" href="#_1-3-实时画面的属性"><span>1.3 实时画面的属性</span></a></h3><p>实时画面中的常见属性主要有三个，可以通过 get 方法获取属性，也可以通过 set 方法修改属性：</p><ol><li><mark>cv2.CAP_PROP_FRAME_WIDTH</mark>：视频帧宽度</li><li><mark>cv2.CAP_PROP_FRAME_HEIGHT</mark>：视频帧高度</li><li><mark>cv2.CAP_PROP_FPS</mark>：视频帧率</li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> cv2</span>
<span class="line">capture <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 获取实时视频流属性</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;video width:&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>capture<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;video height:&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>capture<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;video FPS:&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>capture<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FPS<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 修改设置实时视频流属性</span></span>
<span class="line">capture<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">,</span> <span class="token number">1280</span><span class="token punctuation">)</span></span>
<span class="line">capture<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">,</span> <span class="token number">720</span><span class="token punctuation">)</span></span>
<span class="line">capture<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FPS<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一般情况下，高度和宽度都是可以修改的，但是帧率不一定，要看摄像头的说明。</p><h3 id="_1-4-手动计算帧率" tabindex="-1"><a class="header-anchor" href="#_1-4-手动计算帧率"><span>1.4 手动计算帧率</span></a></h3><p>影响帧率的三个主要因素有 <strong>分辨率、接口带宽、曝光与光照</strong>：</p><ul><li>分辨率越高，帧率越低（因为带宽和传输限制）。比如 640×480 可达 60 FPS，但 1920×1080 常为 30 FPS。</li><li>USB 2.0 通常限制在 30 FPS@1080p 左右，USB 3.0 才能上 60 FPS。网络摄像头则受网速与编码影响。</li><li>弱光条件下，摄像头会自动延长曝光时间，从而降低实际帧率（比如夜晚时从 30 FPS 掉到 15 FPS）。</li></ul><p>一般来说 FPS 都是越高越好，但是，算法每秒应处理的帧数取决于需要解决的特定问题。例如，如果算法需要跟踪和检测在街上游走的行人，那么 15 FPS 可能就足够了；如果是检测和跟踪高速公路上快速行驶的汽车，可能需要 20~30 FPS。</p><p>我们已经知道，很多摄像头不一定是固定的 FPS，它会随着一些因素变化，比如弱光条件，所以有的时候我们也需要手动计算 FPS：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> time</span>
<span class="line"></span>
<span class="line"><span class="token keyword">while</span> capture<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    ret<span class="token punctuation">,</span> frame <span class="token operator">=</span> capture<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> ret <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span></span>
<span class="line">        processing_start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 处理开始事件</span></span>
<span class="line">        cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&quot;Input frame from camera&quot;</span><span class="token punctuation">,</span> frame<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        processing_end <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 处理结束事件</span></span>
<span class="line">        precessing_time <span class="token operator">=</span> processing_end <span class="token operator">-</span> processing_start</span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;FPS: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token number">1.0</span> <span class="token operator">/</span> precessing_time<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># 计算帧率并打印</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&quot;q&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">break</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-5-扩展-摄像头帧率分布" tabindex="-1"><a class="header-anchor" href="#_1-5-扩展-摄像头帧率分布"><span>1.5 扩展：摄像头帧率分布</span></a></h3><p>常见的各类摄像头帧率范围总览：</p><table><thead><tr><th>摄像头类型</th><th>常见分辨率</th><th>典型帧率（FPS）</th><th>说明</th></tr></thead><tbody><tr><td>💻 <strong>笔记本内置摄像头</strong></td><td>720p / 1080p</td><td><strong>15–30 FPS</strong></td><td>主要为视频会议设计，通常固定 30 FPS。部分低端型号甚至 15 FPS。</td></tr><tr><td>🔌 <strong>普通 USB 摄像头</strong></td><td>720p / 1080p</td><td><strong>15–60 FPS</strong></td><td>普通网络摄像头（如罗技 C270、C920）在低分辨率下可达 60 FPS，高分辨率时多为 30 FPS。</td></tr><tr><td>📹 <strong>安防/监控摄像头（IPC）</strong></td><td>1080p / 2K / 4K</td><td><strong>20–30 FPS</strong>（有时 15 FPS）</td><td>追求稳定与存储节约，通常锁定 25–30 FPS。夜视模式下可能降到 15 FPS。</td></tr><tr><td>📱 <strong>手机前/后置摄像头</strong></td><td>1080p / 4K</td><td><strong>30–60 FPS</strong>（视频模式）</td><td>视频拍摄通常 30 FPS 或 60 FPS。部分高端机支持 120/240 FPS 慢动作模式。</td></tr><tr><td>📷 <strong>数码相机 / 无反相机</strong></td><td>1080p / 4K</td><td><strong>24–120 FPS</strong></td><td>可调节帧率以匹配影视标准（24/30/60 FPS 等）。</td></tr><tr><td>🎮 <strong>游戏摄像头 / 高速运动捕捉</strong></td><td>720p / 1080p</td><td><strong>60–240 FPS</strong></td><td>用于动作捕捉或手势识别。</td></tr><tr><td>⚙️ <strong>工业相机（机器视觉）</strong></td><td>VGA ～ 2K</td><td><strong>30–240 FPS</strong></td><td>高速检测用途，可达数百帧，但分辨率较低时才行。</td></tr></tbody></table><h3 id="_1-6-保存帧画面与视频" tabindex="-1"><a class="header-anchor" href="#_1-6-保存帧画面与视频"><span>1.6 保存帧画面与视频</span></a></h3><p>如果说，我们遇到了一些感兴趣的画面，并且想记录为图像的形式，我们可以通过 <mark>cv2.imwrite()</mark> 方法来写入文件。比如这里，我们用 q 表示退出，用 c 表示截取画面：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">frame_index <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line"><span class="token keyword">while</span> capture<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    ret<span class="token punctuation">,</span> frame <span class="token operator">=</span> capture<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> ret <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            frame_name <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;camera_frame_</span><span class="token interpolation"><span class="token punctuation">{</span>frame_index<span class="token punctuation">}</span></span><span class="token string">.png&quot;</span></span></span>
<span class="line">            cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span>frame_name<span class="token punctuation">,</span> frame<span class="token punctuation">)</span></span>
<span class="line">            frame_index <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&quot;q&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">break</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么如果我们想保存成视频呢？不要着急，<mark>cv2.VideoWriter()</mark> 方法可以在本地直接写入视频文件。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> cv2</span>
<span class="line"></span>
<span class="line">capture <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># 打开摄像头</span></span>
<span class="line">fourcc <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoWriter_fourcc<span class="token punctuation">(</span><span class="token operator">*</span><span class="token string">&#39;XVID&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 定义编码器（FourCC）</span></span>
<span class="line"><span class="token comment"># out = cv2.VideoWriter(&#39;output.avi&#39;, fourcc, fps, (frame_width, frame_height))</span></span>
<span class="line">out <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line">recording <span class="token operator">=</span> <span class="token boolean">False</span></span>
<span class="line">index <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;按 C 开始/停止录制：按 &#39;q&#39; 退出实时画面捕捉&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">while</span> capture<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    ret<span class="token punctuation">,</span> frame <span class="token operator">=</span> capture<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token keyword">not</span> ret<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">break</span></span>
<span class="line">    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;Camera&#39;</span><span class="token punctuation">,</span> frame<span class="token punctuation">)</span></span>
<span class="line">    key <span class="token operator">=</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> key <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token keyword">not</span> recording<span class="token punctuation">:</span></span>
<span class="line">            out <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoWriter<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;output_</span><span class="token interpolation"><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span><span class="token string">.avi&#39;</span></span><span class="token punctuation">,</span> fourcc<span class="token punctuation">,</span> <span class="token number">30.0</span><span class="token punctuation">,</span></span>
<span class="line">                                    <span class="token punctuation">(</span>frame<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> frame<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            recording <span class="token operator">=</span> <span class="token boolean">True</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;🎥 开始录制...&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">            recording <span class="token operator">=</span> <span class="token boolean">False</span></span>
<span class="line">            out<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;⏹ 暂停录制，视频已保存为 output_</span><span class="token interpolation"><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span><span class="token string">.avi&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        index <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">    <span class="token keyword">elif</span> key <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39;q&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">if</span> recording<span class="token punctuation">:</span></span>
<span class="line">            out<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;录制结束，视频已保存为 output_</span><span class="token interpolation"><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span><span class="token string">.avi&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;🖥️ 退出实时监控&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">break</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># 如果正在录制，则保存当前帧</span></span>
<span class="line">    <span class="token keyword">if</span> recording <span class="token keyword">and</span> out <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span></span>
<span class="line">        out<span class="token punctuation">.</span>write<span class="token punctuation">(</span>frame<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 释放资源</span></span>
<span class="line">capture<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-7-扩展-视频编码器与格式" tabindex="-1"><a class="header-anchor" href="#_1-7-扩展-视频编码器与格式"><span>1.7 扩展：视频编码器与格式</span></a></h3><ul><li><mark>FourCC（Four Character Code）</mark>：即四字符编码器标识符，表示采用哪种视频编码算法（压缩方式）。例如：XVID, MJPG, H264, mp4v。</li><li><mark>文件后缀（容器格式）</mark>：表示视频文件的封装格式（容器），例如 .avi、.mp4、.mov。容器负责存放压缩视频流、音频流、时间戳等元数据。</li></ul><p>虽然 FourCC 编码器 与 封装格式 并不相同，但两者必须 “兼容” 才能正常播放。常见 FourCC 与文件格式对应表：</p><table><thead><tr><th>FourCC（编码器）</th><th>推荐文件后缀（容器）</th><th>压缩特性</th><th>播放兼容性</th></tr></thead><tbody><tr><td><code>&#39;XVID&#39;</code></td><td><code>.avi</code></td><td>MPEG-4 Part 2 编码，压缩好，兼容性强（OpenCV 默认推荐）</td><td>✅ Windows / VLC / OpenCV</td></tr><tr><td><code>&#39;DIVX&#39;</code></td><td><code>.avi</code></td><td>类似 XVID</td><td>✅</td></tr><tr><td><code>&#39;MJPG&#39;</code></td><td><code>.avi</code> / <code>.mjpg</code></td><td>Motion JPEG（逐帧压缩）</td><td>✅ 快速但文件较大</td></tr><tr><td><code>&#39;mp4v&#39;</code></td><td><code>.mp4</code> / <code>.avi</code></td><td>MPEG-4 编码，较现代</td><td>✅ 推荐一般用途</td></tr><tr><td><code>&#39;H264&#39;</code> / <code>&#39;X264&#39;</code></td><td><code>.mp4</code> / <code>.mov</code></td><td>H.264 编码，压缩高效</td><td>⚠️ 需要系统安装 H.264 支持</td></tr><tr><td><code>&#39;avc1&#39;</code></td><td><code>.mp4</code></td><td>H.264 的另一种标识</td><td>✅</td></tr><tr><td><code>&#39;WMV1&#39;</code> / <code>&#39;WMV2&#39;</code></td><td><code>.avi</code> / <code>.wmv</code></td><td>Windows Media Video</td><td>⚠️ 仅 Windows 播放器兼容</td></tr><tr><td><code>&#39;IYUV&#39;</code> / <code>&#39;YUYV&#39;</code></td><td><code>.avi</code></td><td>原始 YUV 格式（未压缩）</td><td>⚙️ 文件极大，调试用</td></tr></tbody></table><h3 id="_1-8-读取-ip-摄像机" tabindex="-1"><a class="header-anchor" href="#_1-8-读取-ip-摄像机"><span>1.8 读取 IP 摄像机</span></a></h3><p>IP 摄像机其实就是网络摄像机，它的本质是：把摄像头 + 编码器 + 网络模块集成在一起，可以通过 IP 网络（局域网或互联网） 直接传输视频流的摄像头。实际的使用场景有：</p><ul><li>家庭智能监控：手机随时查看家中画面</li><li>商铺 / 公司安防：通过 NVR 管理多个 IP 摄像机</li><li>工业 / 交通监控：远程监控生产线或路口</li><li>智慧城市：智能分析、视频流接入大数据平台</li></ul><p>我们可以拿一些 <strong>合法且常见的“公开”摄像头</strong> 来练手：</p>`,48)),s("ul",null,[s("li",null,[s("a",k,[n[0]||(n[0]=p("EarthCam — 大量城市地标、港口、景点的公开摄像头（面向公众）。",-1)),t(a)])]),s("li",null,[s("a",v,[n[1]||(n[1]=p("Explore.org — 大量自然/野生动物直播（熊、海狮、熊钓鱼等），面向公众。",-1)),t(a)])]),s("li",null,[s("a",m,[n[2]||(n[2]=p("各州 / 各国的交通管理局（State DOT）发布的路况摄像头 / 交通摄像头（通常网页列出并允许公众查看）。示例：Nevada DOT、WSDOT 等。",-1)),t(a)])]),s("li",null,[s("a",b,[n[3]||(n[3]=p("FAA / 气象机构或国家公园等托管的气象/景观摄像头（用于公共服务 / 教育）。",-1)),t(a)])])]),n[5]||(n[5]=e(`<h2 id="_2-视频文件处理" tabindex="-1"><a class="header-anchor" href="#_2-视频文件处理"><span>2. 视频文件处理</span></a></h2><h3 id="_2-1-读取视频文件" tabindex="-1"><a class="header-anchor" href="#_2-1-读取视频文件"><span>2.1 读取视频文件</span></a></h3><p><mark>cv2.VideoCapture()</mark> 方法不仅可以打开本地摄像头，网络摄像头，也可以读取视频文件。这时候它的参数就不是数值了，而是视频文件的路径。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">video_path <span class="token operator">=</span> <span class="token string">&quot;&quot;</span></span>
<span class="line">capture <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span>video_path<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>后续的操作，不管是用 imshow 显示出来，还是进行处理操作，跟之前都是一样的。那么，我们可以根据已经学过的知识，封装一个简易的视频播放的函数：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> cv2</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">play_video</span><span class="token punctuation">(</span>video_path<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span>video_path<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> cap<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">is</span> <span class="token boolean">False</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;无法打开视频文件: </span><span class="token interpolation"><span class="token punctuation">{</span>video_path<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">False</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span></span>
<span class="line">        ret<span class="token punctuation">,</span> frame <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token keyword">not</span> ret<span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">break</span></span>
<span class="line"></span>
<span class="line">        cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&quot;Video&quot;</span><span class="token punctuation">,</span> frame<span class="token punctuation">)</span></span>
<span class="line">        key <span class="token operator">=</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment"># 多种退出方式</span></span>
<span class="line">        <span class="token keyword">if</span> key <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39;q&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39;Q&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">]</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Q / ESC 键被按下，退出循环&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">break</span></span>
<span class="line">        <span class="token keyword">elif</span> key <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;空格键被按下，暂停播放&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span></span>
<span class="line">                key2 <span class="token operator">=</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span></span>
<span class="line">                <span class="token keyword">if</span> key2 <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">                    <span class="token keyword">break</span></span>
<span class="line">                <span class="token keyword">elif</span> key2 <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39;q&#39;</span><span class="token punctuation">)</span> <span class="token keyword">or</span> key2 <span class="token operator">==</span> <span class="token number">27</span><span class="token punctuation">:</span></span>
<span class="line">                    cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                    cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                    exit<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment"># 检查窗口是否还存在，要注意：窗口名称一定要一致，这里是 Video</span></span>
<span class="line">        <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>getWindowProperty<span class="token punctuation">(</span><span class="token string">&quot;Video&quot;</span><span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>WND_PROP_VISIBLE<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;用户点击了关闭按钮(X)&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">break</span></span>
<span class="line"></span>
<span class="line">    cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token boolean">True</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">path <span class="token operator">=</span> <span class="token string">&quot;D:\\CodeReproduction\\ReLayer\\\\frxxz_hanlijieyin.mp4&quot;</span></span>
<span class="line"><span class="token keyword">if</span> play_video<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;播放完成&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;播放失败&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><mark>cv2.getWindowProperty()</mark> 函数的作用是<strong>获取指定窗口的属性值</strong>，有两个参数，1 是窗口名称，2 是获取的属性 ID。<mark>cv2.WND_PROP_VISIBLE</mark> 有三个值，1 表示窗口可见（存在），0 表示窗口不可见（已被关闭），-1 表示窗口不存在。</p><figure><img src="`+u+`" alt="2.1 OpenCV 读取视频文件 - 韩立结婴" width="560" tabindex="0" loading="lazy"><figcaption>2.1 OpenCV 读取视频文件 - 韩立结婴</figcaption></figure><h3 id="_2-2-视频属性详解" tabindex="-1"><a class="header-anchor" href="#_2-2-视频属性详解"><span>2.2 视频属性详解</span></a></h3><p>在 1.3 小节，我们讲了视频流文件的<strong>通用基础属性</strong>：帧的宽度、帧的高度、帧率。在 1.7 的扩展中，还讲了<strong>编解码器与格式</strong>：FourCC。在这里我们主要讲解<strong>视频文件的特定属性</strong>：</p><ul><li><mark>cv2.CAP_PROP_POS_MSEC</mark>：当前时间戳（毫秒）。表示视频流的当前位置（从开始算起的时间）。常用于视频文件的精确跳转和进度显示。</li><li><mark>cv2.CAP_PROP_POS_FRAMES</mark>：当前帧的索引（从 0 开始）。表示下一帧将被解码的帧序号。用于获取当前位置或跳转到指定帧。</li><li><mark>cv2.CAP_PROP_POS_AVI_RATIO</mark>：视频文件的相对位置（0.0 到 1.0）。表示当前位置在总时长中的比例。用于实现进度条。</li><li><mark>cv2.CAP_PROP_FRAME_COUNT</mark>：视频文件的总帧数。结合 CAP_PROP_POS_FRAMES 可以计算播放进度。</li></ul><p>来做一个简单的小实验，反向播放视频。我们知道 <strong>CAP_PROP_POS_FRAMES</strong> 表示播放时的帧索引，而 <strong>CAP_PROP_FRAME_COUNT</strong> 表示总帧数，那我们就可以通过这两个参数，来实现视频的反向播放。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> cv2</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">play_video</span><span class="token punctuation">(</span>video_path<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span>video_path<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> cap<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">is</span> <span class="token boolean">False</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;无法打开视频文件: </span><span class="token interpolation"><span class="token punctuation">{</span>video_path<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">False</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># 从总帧数获取逆序的帧索引</span></span>
<span class="line">    frame_index <span class="token operator">=</span> cap<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_COUNT<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># 循环条件需要加一个 frame_index &gt;= 0</span></span>
<span class="line">    <span class="token keyword">while</span> cap<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">and</span> frame_index <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token comment"># 设定视频流下一帧读取的帧索引，实现倒放视频</span></span>
<span class="line">        cap<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_POS_FRAMES<span class="token punctuation">,</span> frame_index<span class="token punctuation">)</span></span>
<span class="line">        ret<span class="token punctuation">,</span> frame <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token keyword">not</span> ret<span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">break</span></span>
<span class="line"></span>
<span class="line">        cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&quot;Video Backwards&quot;</span><span class="token punctuation">,</span> frame<span class="token punctuation">)</span></span>
<span class="line">        frame_index <span class="token operator">-=</span> <span class="token number">1</span></span>
<span class="line">        key <span class="token operator">=</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">if</span> key <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39;q&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39;Q&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">]</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Q / ESC 键被按下，退出循环&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">break</span></span>
<span class="line">        <span class="token keyword">elif</span> key <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;空格键被按下，暂停播放&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span></span>
<span class="line">                key2 <span class="token operator">=</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span></span>
<span class="line">                <span class="token keyword">if</span> key2 <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">                    <span class="token keyword">break</span></span>
<span class="line">                <span class="token keyword">elif</span> key2 <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39;q&#39;</span><span class="token punctuation">)</span> <span class="token keyword">or</span> key2 <span class="token operator">==</span> <span class="token number">27</span><span class="token punctuation">:</span></span>
<span class="line">                    cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                    cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                    exit<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment"># 检查窗口是否还存在，要注意：窗口名称一定要一致，这里是 Video</span></span>
<span class="line">        <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>getWindowProperty<span class="token punctuation">(</span><span class="token string">&quot;Video Backwards&quot;</span><span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>WND_PROP_VISIBLE<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;用户点击了关闭按钮(X)&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">break</span></span>
<span class="line"></span>
<span class="line">    cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token boolean">True</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">path <span class="token operator">=</span> <span class="token string">&quot;D:\\CodeReproduction\\ReLayer\\\\frxxz_hanlijieyin.mp4&quot;</span></span>
<span class="line"><span class="token keyword">if</span> play_video<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;播放完成&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;播放失败&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+r+'" alt="2.2 OpenCV 倒放视频文件 - 韩立结婴" width="560" tabindex="0" loading="lazy"><figcaption>2.2 OpenCV 倒放视频文件 - 韩立结婴</figcaption></figure><h3 id="_2-3-扩展-剩余全部属性" tabindex="-1"><a class="header-anchor" href="#_2-3-扩展-剩余全部属性"><span>2.3 扩展：剩余全部属性</span></a></h3><p><strong>图像质量与处理：摄像头通用属性 1，归一化参数，取值范围为 [0, 1]</strong>：</p><ol><li><mark>cv2.CAP_PROP_BRIGHTNESS</mark>：亮度。0.0=最暗, 0.5=默认, 1.0=最亮。</li><li><mark>cv2.CAP_PROP_CONTRAST</mark>：对比度。0.0=最低对比度, 1.0=最高对比度。</li><li><mark>cv2.CAP_PROP_SATURATION</mark>：饱和度。0.0=黑白, 1.0=最大饱和度。</li><li><mark>cv2.CAP_PROP_HUE</mark>：色调。0.0=默认色调, 调整色彩相位。</li><li><mark>cv2.CAP_PROP_GAIN</mark>：增益。0.0=无增益, 值越大图像越亮但噪点可能越多。</li><li><mark>cv2.CAP_PROP_SHARPNESS</mark>：锐度。调整图像边缘的锐利程度。0.0=最柔和, 1.0=最锐利。</li><li><mark>cv2.CAP_PROP_GAMMA</mark>：伽马校正。通常 1.0=线性, 其他值进行伽马校正。</li><li><mark>cv2.CAP_PROP_BACKLIGHT</mark>：背光补偿。0.0=关闭, 1.0=最强背光补偿。</li></ol><p><strong>图像质量与处理：摄像头通用属性 2，特殊取值范围参数</strong>：</p><ol><li><strong>cv2.CAP_PROP_EXPOSURE</strong>：曝光。调整摄像头的曝光值，取值范围复杂，不同牌子不一样。</li><li><strong>cv2.CAP_PROP_TEMPERATURE</strong>：白平衡（色温）。实际色温值，如 2800（暖光）到 6500（冷光）开尔文。</li><li><strong>cv2.CAP_PROP_WHITE_BALANCE_BLUE_U</strong>：白平衡蓝色分量。归一化值或实际值，取决于驱动。</li><li><strong>cv2.CAP_PROP_AUTO_WB</strong>：自动白平衡。设置为 1 开启自动白平衡，0 则关闭。</li><li><strong>cv2.CAP_PROP_AUTO_EXPOSURE</strong>：自动曝光。在很多后端中，与自动白平衡共享同一个属性 ID。通常通过 cv2.CAP_PROP_EXPOSURE 的值来判断（如设置为某个特定值代表自动模式）。</li></ol><p><strong>图像质量与处理：云台摄像头专有属性</strong>：</p><ol><li>cv2.CAP_PROP_PAN：平移（水平方向）。用于云台摄像头。</li><li>cv2.CAP_PROP_TILT：倾斜（垂直方向）。用于云台摄像头。</li><li>cv2.CAP_PROP_ROLL：旋转。用于云台摄像头。</li></ol><p><strong>其他与后端相关的属性</strong>：</p><ol><li><mark>cv2.CAP_PROP_BUFFERSIZE</mark>：内部缓冲区的帧数。设置此值可以控制延迟，但并非所有后端都支持。</li><li>cv2.CAP_PROP_MODE：表示当前视频流模式的后端特定值。</li><li>cv2.CAP_PROP_CONVERT_RGB：布尔标志，指示是否应将帧转换为 RGB。通常为 True。</li><li>cv2.CAP_PROP_ISO_SPEED：ISO 感光度。用于调整摄像头传感器对光的敏感度。</li><li>cv2.CAP_PROP_ZOOM：变焦。用于控制摄像头的数字或光学变焦。</li><li>cv2.CAP_PROP_FOCUS：焦距。调整摄像头的对焦距离。</li></ol>',23))])}const y=l(d,[["render",g]]),P=JSON.parse('{"path":"/blogs/ComputerVision/ImageProcessing/OpenCV1/08_shipinliuchuli.html","title":"08-视频流处理","lang":"en-US","frontmatter":{"title":"08-视频流处理","date":"2025/10/10","categories":["OpenCV"],"tags":["图像处理","视频处理"]},"headers":[{"level":2,"title":"1. 相机画面处理","slug":"_1-相机画面处理","link":"#_1-相机画面处理","children":[{"level":3,"title":"1.1 读取相机画面","slug":"_1-1-读取相机画面","link":"#_1-1-读取相机画面","children":[]},{"level":3,"title":"1.2 扩展：自定义按键退出","slug":"_1-2-扩展-自定义按键退出","link":"#_1-2-扩展-自定义按键退出","children":[]},{"level":3,"title":"1.3 实时画面的属性","slug":"_1-3-实时画面的属性","link":"#_1-3-实时画面的属性","children":[]},{"level":3,"title":"1.4 手动计算帧率","slug":"_1-4-手动计算帧率","link":"#_1-4-手动计算帧率","children":[]},{"level":3,"title":"1.5 扩展：摄像头帧率分布","slug":"_1-5-扩展-摄像头帧率分布","link":"#_1-5-扩展-摄像头帧率分布","children":[]},{"level":3,"title":"1.6 保存帧画面与视频","slug":"_1-6-保存帧画面与视频","link":"#_1-6-保存帧画面与视频","children":[]},{"level":3,"title":"1.7 扩展：视频编码器与格式","slug":"_1-7-扩展-视频编码器与格式","link":"#_1-7-扩展-视频编码器与格式","children":[]},{"level":3,"title":"1.8 读取 IP 摄像机","slug":"_1-8-读取-ip-摄像机","link":"#_1-8-读取-ip-摄像机","children":[]}]},{"level":2,"title":"2. 视频文件处理","slug":"_2-视频文件处理","link":"#_2-视频文件处理","children":[{"level":3,"title":"2.1 读取视频文件","slug":"_2-1-读取视频文件","link":"#_2-1-读取视频文件","children":[]},{"level":3,"title":"2.2 视频属性详解","slug":"_2-2-视频属性详解","link":"#_2-2-视频属性详解","children":[]},{"level":3,"title":"2.3 扩展：剩余全部属性","slug":"_2-3-扩展-剩余全部属性","link":"#_2-3-扩展-剩余全部属性","children":[]}]}],"git":{"createdTime":1760416648000,"updatedTime":1760416648000,"contributors":[{"name":"zjk","email":"1213860588@qq.com","commits":1}]},"filePathRelative":"blogs/ComputerVision/ImageProcessing/OpenCV1/08_视频流处理.md"}');export{y as comp,P as data};
